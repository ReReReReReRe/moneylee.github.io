<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>解决iOS真机调试时反复断开连接的问题</title>
      <link href="/2019/12/26/%E8%A7%A3%E5%86%B3iOS%E7%9C%9F%E6%9C%BA%E8%B0%83%E8%AF%95%E6%97%B6%E5%8F%8D%E5%A4%8D%E6%96%AD%E5%BC%80%E8%BF%9E%E6%8E%A5%E7%9A%84%E9%97%AE%E9%A2%98/"/>
      <url>/2019/12/26/%E8%A7%A3%E5%86%B3iOS%E7%9C%9F%E6%9C%BA%E8%B0%83%E8%AF%95%E6%97%B6%E5%8F%8D%E5%A4%8D%E6%96%AD%E5%BC%80%E8%BF%9E%E6%8E%A5%E7%9A%84%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">title: 《解决iOS真机调试时反复断开连接的问题》</span><br><span class="line">date: 2018-9-15 15:12:02</span><br><span class="line">categories: &quot;iOS&quot;</span><br><span class="line">top_img: &quot;https://tva1.sinaimg.cn/large/006y8mN6ly1g8vl0019wlj31ej0u0x6q.jpg&quot;</span><br><span class="line">cover: &quot;https://tva1.sinaimg.cn/large/006y8mN6ly1g8vl0019wlj31ej0u0x6q.jpg&quot;</span><br></pre></td></tr></table></figure><p>开发时经常由于数据线或者其他莫名其妙的问题导致手机连接Mac反反复复断开连接, 很是苦恼, 一般情况下换个数据线就好了, 或者重启电脑, 虽然现在iOS开发者可以使用wifi内网连接的形式调试真机, 但是受限于公司网速的影响, 严重影响真机调试的效率, 闲话少说, 解决办法:</p><p><code>$ sudo killall -STOP -c usbd</code></p><p>终端输入如上的命令, 可以解决这个问题, 但是保证数据连接畅通,但是充电会非常缓慢, 调试结束后记得重启电脑</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>数据库常见问题汇总</title>
      <link href="/2019/12/10/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
      <url>/2019/12/10/%E6%95%B0%E6%8D%AE%E5%BA%93/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h3 id="1153-Got-a-packet-bigger-than-‘max-allowed-packet’-bytes"><a href="#1153-Got-a-packet-bigger-than-‘max-allowed-packet’-bytes" class="headerlink" title="1153 - Got a packet bigger than ‘max_allowed_packet’ bytes"></a>1153 - Got a packet bigger than ‘max_allowed_packet’ bytes</h3><p>数据库数据同步导入时,文件过大导致出现此错误, 注意: 此种方式不用重启sql服务,只是临时修改.</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; show VARIABLES like '%max_allowed_packet%';</span><br><span class="line">+<span class="comment">--------------------------+-------+</span></span><br><span class="line">| Variable_name            | Value |</span><br><span class="line">+<span class="comment">--------------------------+-------+</span></span><br><span class="line">| max_allowed_packet       | 2048  |</span><br><span class="line">| slave_max_allowed_packet | 2048  |</span><br><span class="line">+<span class="comment">--------------------------+-------+</span></span><br><span class="line">2 rows in <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; <span class="keyword">set</span> <span class="keyword">global</span> net_buffer_length=<span class="number">1000000</span>;</span><br><span class="line">Query OK, 0 rows affected, 1 warning (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; set global max_allowed_packet=1000000000;</span><br><span class="line">Query OK, 0 rows affected, 1 warning (0.00 sec)</span><br></pre></td></tr></table></figure><h3 id="Mac启动MySql服务-ERROR-1045-28000-Access-denied-for-user-‘root’-’localhost’-using-password-NO"><a href="#Mac启动MySql服务-ERROR-1045-28000-Access-denied-for-user-‘root’-’localhost’-using-password-NO" class="headerlink" title="Mac启动MySql服务 ERROR 1045 (28000): Access denied for user ‘root’@’localhost’ (using password: NO)"></a>Mac启动MySql服务 ERROR 1045 (28000): Access denied for user ‘root’@’localhost’ (using password: NO)</h3><p>解决方法：<br>第一步：如果mysql服务正在进行，将之停止。<br>第二步：在终端中以管理员权限启动mysqld_safe，命令如下：</p><p><code>sudo /usr/local/mysql/bin/mysqld_safe --skip-grant-tables</code></p><p>执行结果如下：</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2016</span><span class="number">-06</span><span class="number">-12</span>T08:<span class="number">29</span>:<span class="number">17.6</span>NZ mysqld_safe Logging to <span class="string">'/usr/local/mysql/data/lyqdeMacBook-Pro.local.err'</span>.</span><br><span class="line"><span class="number">2016</span><span class="number">-06</span><span class="number">-12</span>T08:<span class="number">29</span>:<span class="number">17.6</span>NZ mysqld_safe Starting mysqld daemon <span class="keyword">with</span> databases <span class="keyword">from</span> /usr/local/mysql/data</span><br></pre></td></tr></table></figure><p>第三步：不要关闭当前的终端窗口，新建一个终端窗口，输入如下命令，回车登录mysql</p><p><code>/usr/local/mysql/bin/mysql</code></p><p>登录后，看到欢迎信息：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">Welcome to the MySQL monitor.  Commands end with ; or \g.</span><br><span class="line">Your MySQL connection id is 37</span><br><span class="line">Server version: 5.7.13 MySQL Community Server (GPL)</span><br><span class="line"></span><br><span class="line">Copyright (c) 2000, 2016, Oracle and/or its affiliates. All rights reserved.</span><br><span class="line"></span><br><span class="line">Oracle is a registered trademark of Oracle Corporation and/or its</span><br><span class="line">affiliates. Other names may be trademarks of their respective</span><br><span class="line">owners.</span><br><span class="line"></span><br><span class="line">Type &apos;help;&apos; or &apos;\h&apos; for help. Type &apos;\c&apos; to clear the current input statement.</span><br><span class="line"></span><br><span class="line">mysql&gt;</span><br></pre></td></tr></table></figure><p>打开”mysql”这个数据库，SQL如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Reading table information for completion of table and column names</span><br><span class="line">You can turn off this feature to get a quicker startup with -A</span><br><span class="line"></span><br><span class="line">Database changed</span><br><span class="line">mysql&gt;</span><br></pre></td></tr></table></figure><p>然后，更新root的密码，SQL如下：</p><p><code>mysql&gt; update user set authentication_string=password(&#39;root&#39;) where Host=&#39;localhost&#39; and User=&#39;root&#39;;</code></p><p>注意：<br>①有的版本的mysql中，密码可能存储在password字段中，可以使用”describe user;”命令来查看下表结构再操作</p><p>②authentication_string的值一定通过password函数来计算(password(‘root’))</p><p>执行结果如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Query OK, 1 row affected, 1 warning (0.01 sec)</span><br><span class="line">Rows matched: 1  Changed: 1  Warnings: 1</span><br></pre></td></tr></table></figure><p>退出mysql（执行sql语句：exit)</p><p>最后一步：将mysqld_safe进程杀死，重启mysqld。</p><p>可能会遇到的问题</p><p>登录mysql</p><p><code>/usr/local/mysql/bin/mysql -uroot -proot</code></p><p>这个时候，如果执行查询之类的操作，比如执行”show databases;”，可能会有如下提示:</p><p><code>ERROR 1820 (HY000): You must reset your password using ALTER USER statement before executing this statement.</code></p><p>根据提示进行操作，输入如下SQL语句，这个语句的作用是修改root用户的口令为root：</p><p><code>mysql&gt; alter user &#39;root&#39;@&#39;localhost&#39; identified by &#39;root&#39;;</code></p><p>结果：</p><p><code>Query OK, 0 rows affected</code></p><h3 id="MySql-数据库-插入表情字符报错-java-sql-SQLException-Incorrect-string-value-‘-xF0-x9F-x98-x87"><a href="#MySql-数据库-插入表情字符报错-java-sql-SQLException-Incorrect-string-value-‘-xF0-x9F-x98-x87" class="headerlink" title="MySql 数据库 插入表情字符报错 [java.sql.SQLException: Incorrect string value: ‘\xF0\x9F\x98\x87]"></a>MySql 数据库 插入表情字符报错 [java.sql.SQLException: Incorrect string value: ‘\xF0\x9F\x98\x87]</h3><p>解决办法: mysql安装目录下找到 my.ini 文件并做修改</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[mysqld]</span><br><span class="line">character-set-server=utf8mb4</span><br><span class="line">[mysql]</span><br><span class="line">default-character-set=utf8mb4</span><br></pre></td></tr></table></figure><p>修改后重启mysql</p><p>将已经建好的表转成utf8mb4</p><p>更改数据库编码:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ALTER DATABASE 数据库名 CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci;</span><br></pre></td></tr></table></figure><p>更改表的编码:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alter table 表名 convert to character set utf8mb4 collate utf8mb4_bin;</span><br></pre></td></tr></table></figure><p>修改mysql配置文件my.cnf (windows为my.ini)</p><p>my.cnf一般在etc/mysql/my.cnf位置。找到后请在以下三部分里添加如下内容：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[client] </span><br><span class="line">default-character-set = utf8mb4 </span><br><span class="line">[mysql] </span><br><span class="line">default-character-set = utf8mb4 </span><br><span class="line">[mysqld] </span><br><span class="line">character-set-client-handshake = FALSE </span><br><span class="line">character-set-server = utf8mb4 </span><br><span class="line">collation-server = utf8mb4_unicode_ci </span><br><span class="line">init_connect=&apos;SET NAMES utf8mb4&apos;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>常用工具</title>
      <link href="/2019/12/04/%E5%B8%B8%E7%94%A8%E5%B7%A5%E5%85%B7/"/>
      <url>/2019/12/04/%E5%B8%B8%E7%94%A8%E5%B7%A5%E5%85%B7/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h2 id="常用工具汇总"><a href="#常用工具汇总" class="headerlink" title="常用工具汇总"></a>常用工具汇总</h2><h3 id="Pulse-Secure-for-Mac-VPN工具"><a href="#Pulse-Secure-for-Mac-VPN工具" class="headerlink" title="Pulse Secure for Mac (VPN工具)"></a>Pulse Secure for Mac (VPN工具)</h3><p>官网地址: <a href="https://www.pulsesecure.net/" target="_blank" rel="noopener">https://www.pulsesecure.net/</a></p><p>需要填写相关资料 邮件的方式获取下载地址, 我的mac电脑升级10.15之后 之前的版本不能用了, 在网上也没有找到安装包, 只好重新在官网申请, 另外官网给你发的下载地址需要翻墙, 所以不能翻墙就用我下面提供的吧, 应该是最新的版本: ps-pulse-mac-9.0r4.0-b1731-installer</p><p><a href="https://pan.baidu.com/s/1-6xBeghJy5h8g_MGrS_LYw" target="_blank" rel="noopener">百度云下载地址</a> 密码: h7z6</p><h3 id="蓝灯-lantern-翻墙工具"><a href="#蓝灯-lantern-翻墙工具" class="headerlink" title="蓝灯 lantern (翻墙工具)"></a>蓝灯 lantern (翻墙工具)</h3><p>下载地址: <a href="https://github.com/getlantern/download" target="_blank" rel="noopener">https://github.com/getlantern/download</a></p><h3 id="TeamViewer检测到商业用途的解决办法-包含-Mac-Windows-安卓"><a href="#TeamViewer检测到商业用途的解决办法-包含-Mac-Windows-安卓" class="headerlink" title="TeamViewer检测到商业用途的解决办法(包含 Mac Windows 安卓)"></a>TeamViewer检测到商业用途的解决办法(包含 Mac Windows 安卓)</h3><p>能这么办 用破解版呗! 仅供个人学习娱乐使用, 严禁商业用途。记得在高级设置里将版本自动更新关闭, 否者会出现双方版本不一致无法使用的情况!!!</p><p>百度云下载地址: <a href="https://pan.baidu.com/s/1eVPo-Ubz54GEaPmwEM32dg" target="_blank" rel="noopener">https://pan.baidu.com/s/1eVPo-Ubz54GEaPmwEM32dg</a></p>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>开篇</title>
      <link href="/2019/11/09/%E5%BC%80%E7%AF%87/"/>
      <url>/2019/11/09/%E5%BC%80%E7%AF%87/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h3 id="原本想使用-spring-boot-vue-开发一款博客系统-但是平时也没有多少时间-做出来的样式也不是很喜欢。今天无意间发现Hexo这个开源的博客框架-决定拿来试一试-效果还不错-今后会继续完善下去-我也会将-简书、掘金的一些之前写作的文章导入进来-希望通过它能让我养成技术文档整理归纳的好习惯-我也会在此更新一些生活上的故事和心得体悟。"><a href="#原本想使用-spring-boot-vue-开发一款博客系统-但是平时也没有多少时间-做出来的样式也不是很喜欢。今天无意间发现Hexo这个开源的博客框架-决定拿来试一试-效果还不错-今后会继续完善下去-我也会将-简书、掘金的一些之前写作的文章导入进来-希望通过它能让我养成技术文档整理归纳的好习惯-我也会在此更新一些生活上的故事和心得体悟。" class="headerlink" title="原本想使用 spring-boot + vue 开发一款博客系统, 但是平时也没有多少时间, 做出来的样式也不是很喜欢。今天无意间发现Hexo这个开源的博客框架, 决定拿来试一试, 效果还不错, 今后会继续完善下去, 我也会将 简书、掘金的一些之前写作的文章导入进来, 希望通过它能让我养成技术文档整理归纳的好习惯, 我也会在此更新一些生活上的故事和心得体悟。"></a>原本想使用 spring-boot + vue 开发一款博客系统, 但是平时也没有多少时间, 做出来的样式也不是很喜欢。今天无意间发现Hexo这个开源的博客框架, 决定拿来试一试, 效果还不错, 今后会继续完善下去, 我也会将 简书、掘金的一些之前写作的文章导入进来, 希望通过它能让我养成技术文档整理归纳的好习惯, 我也会在此更新一些生活上的故事和心得体悟。</h3>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>记录一次微信小程序调用Eharts</title>
      <link href="/2019/11/09/%E8%AE%B0%E5%BD%95%E4%B8%80%E6%AC%A1%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E8%B0%83%E7%94%A8Echarts/"/>
      <url>/2019/11/09/%E8%AE%B0%E5%BD%95%E4%B8%80%E6%AC%A1%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E8%B0%83%E7%94%A8Echarts/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h2 id="记录一次微信小程序调用Eharts-柱状图"><a href="#记录一次微信小程序调用Eharts-柱状图" class="headerlink" title="记录一次微信小程序调用Eharts(柱状图)"></a>记录一次微信小程序调用Eharts(柱状图)</h2><p>Echarts 微信小程序版本地址: <a href="https://github.com/ecomfe/echarts-for-weixin" target="_blank" rel="noopener"></a></p><p>可以参考其使用文档进行操作, 写的比较详细了.</p><h5 id="下面说下我的操作方式及遇到的一些问题"><a href="#下面说下我的操作方式及遇到的一些问题" class="headerlink" title="下面说下我的操作方式及遇到的一些问题:"></a>下面说下我的操作方式及遇到的一些问题:</h5><ol><li><p>下载github上的项目到本地, 然后拷贝项目内的ec-canvas文件至我的项目内, 因为我的项目是用npm导包, 所以我为了统一, 拷贝至了根目录下的node_modules目录下. 其实直接放根目录就行了</p></li><li><p>小程序新建一个页面用来展示报表<br><img alt data-src="https://s2.ax1x.com/2019/11/14/MNpXqS.png" class="lazyload"></p></li><li><p>在 dataShow.json 内添加引用的组件 供wxml内使用</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">"usingComponents"</span>: &#123;</span><br><span class="line">    <span class="string">"ec-canvas"</span>: <span class="string">"../../miniprogram_npm/ec-canvas/ec-canvas"</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>在 dataShow.js 内引用echarts  并定义个全局变量 chat<br><code>import * as echarts from &#39;../../miniprogram_npm/ec-canvas/echarts&#39;;</code></p><p><code>let chart = null;</code></p></li><li><p>在 dataShow.wxml编辑</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">"container"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">ec-canvas</span> <span class="attr">ec</span>=<span class="string">"&#123;&#123; ec &#125;&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">ec-canvas</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>dataShow.js  在data内定义这个ec对象</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">data: &#123;</span><br><span class="line">    ec: &#123;</span><br><span class="line">      onInit: initChart</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">//  histogramData 为网络请求的数据</span></span><br><span class="line">    histogramData: &#123;&#125;</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure></li><li><p>上文的 initChart 是个函数, 我们在js内实现, 注意这个函数写在Page外, 我试过写在Page内,会发现视图的点击触发事件动画没有,就是下面这个图内箭头指向的.<br><img alt data-src="https://s2.ax1x.com/2019/11/14/MNiLWj.png" class="lazyload"></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//初始化 echart</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">initChart</span>(<span class="params">canvas, width, height</span>) </span>&#123;</span><br><span class="line">  chart = echarts.init(canvas, <span class="literal">null</span>, &#123;</span><br><span class="line">    width: width,</span><br><span class="line">    height: height</span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="comment">//这里可以先设置Option, 或许会防止视图加载抖动, 但是我试了好像没啥用, 可能我数据量小, 暂时还是请求数据后再设置吧</span></span><br><span class="line">  <span class="comment">// var op = getOption(&#123;&#125;);</span></span><br><span class="line">  <span class="comment">// chart.setOption(op);</span></span><br><span class="line">  canvas.setChart(chart);</span><br><span class="line">  <span class="keyword">return</span> chart;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><ol start="8"><li><p>同样我们也在js里声明一个获取Option的函数 <code>getOption</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//为Echar提供数据 histogramData是我们请求数据后获取的数据</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getOption</span>(<span class="params">histogramData</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> option = &#123;</span><br><span class="line">    color: [<span class="string">'#37a2da'</span>, <span class="string">'#32c5e9'</span>, <span class="string">'#67e0e3'</span>],</span><br><span class="line">    tooltip: &#123;</span><br><span class="line">      trigger: <span class="string">'axis'</span>,</span><br><span class="line">      axisPointer: &#123;   <span class="comment">// 坐标轴指示器，坐标轴触发有效</span></span><br><span class="line">        type: <span class="string">'shadow'</span> <span class="comment">// 默认为直线，可选为：'line' |'shadow'</span></span><br><span class="line">      &#125;,</span><br><span class="line">      confine: <span class="literal">true</span></span><br><span class="line">    &#125;,</span><br><span class="line">    legend: &#123;</span><br><span class="line">      data: [<span class="string">'不满意'</span>, <span class="string">'满意'</span>, <span class="string">'非常满意'</span>]</span><br><span class="line">    &#125;,</span><br><span class="line">    grid: &#123;</span><br><span class="line">      left: <span class="number">20</span>,</span><br><span class="line">      right: <span class="number">20</span>,</span><br><span class="line">      bottom: <span class="number">15</span>,</span><br><span class="line">      top: <span class="number">40</span>,</span><br><span class="line">      containLabel: <span class="literal">true</span></span><br><span class="line">    &#125;,</span><br><span class="line">    xAxis: [</span><br><span class="line">      &#123;</span><br><span class="line">        type: <span class="string">'value'</span>,</span><br><span class="line">        axisLine: &#123;</span><br><span class="line">          lineStyle: &#123;</span><br><span class="line">            color: <span class="string">'#999'</span></span><br><span class="line">          &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        axisLabel: &#123;</span><br><span class="line">          color: <span class="string">'#666'</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    ],</span><br><span class="line">    yAxis: [</span><br><span class="line">      &#123;</span><br><span class="line">        type: <span class="string">'category'</span>,</span><br><span class="line">        axisTick: &#123; <span class="attr">show</span>: <span class="literal">false</span> &#125;,</span><br><span class="line">        data: histogramData.names || [],</span><br><span class="line">        axisLine: &#123;</span><br><span class="line">          lineStyle: &#123;</span><br><span class="line">            color: <span class="string">'#999'</span></span><br><span class="line">          &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        axisLabel: &#123;</span><br><span class="line">          color: <span class="string">'#666'</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    ],</span><br><span class="line">    series: [</span><br><span class="line">      &#123;</span><br><span class="line">        name: <span class="string">'不满意'</span>,</span><br><span class="line">        type: <span class="string">'bar'</span>,</span><br><span class="line">        label: &#123;</span><br><span class="line">          normal: &#123;</span><br><span class="line">            position: <span class="string">'inside'</span></span><br><span class="line">          &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        data: histogramData.noGoods || [],</span><br><span class="line">        itemStyle: &#123;</span><br><span class="line">          normal: &#123;</span><br><span class="line">            color: <span class="string">'#D7322D'</span></span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        name: <span class="string">'满意'</span>,</span><br><span class="line">        type: <span class="string">'bar'</span>,</span><br><span class="line">        data: histogramData.goods || [],</span><br><span class="line">        itemStyle: &#123;</span><br><span class="line">          normal: &#123;</span><br><span class="line">            color: <span class="string">'#3A8BFB'</span></span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        name: <span class="string">'非常满意'</span>,</span><br><span class="line">        type: <span class="string">'bar'</span>,</span><br><span class="line">        label: &#123;</span><br><span class="line">          normal: &#123;</span><br><span class="line">            color: <span class="string">'#1AB16C'</span></span><br><span class="line">          &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        data: histogramData.veryGoods,</span><br><span class="line">        itemStyle: &#123;</span><br><span class="line">          normal: &#123;</span><br><span class="line">            color: <span class="string">'#1AB16C'</span></span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;;</span><br><span class="line">  <span class="keyword">return</span> option;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><ol start="9"><li><p>在请求数据的函数内设置Option  注:histogramData是网络请求封装</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">loadData() &#123;</span><br><span class="line">    <span class="keyword">var</span> that = <span class="keyword">this</span>;</span><br><span class="line">    histogramData().then(<span class="function"><span class="params">data</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="comment">//调取getOption函数 传入数据</span></span><br><span class="line">      <span class="keyword">var</span> op = getOption(data.histogramData);</span><br><span class="line">      <span class="comment">//设置Option</span></span><br><span class="line">      chart.setOption(op);     </span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;,</span><br></pre></td></tr></table></figure></li></ol><ol start="10"><li>如果想使用本地数据验证代码可行性, 可以在 <code>getOption</code> 函数里设置一些本地数据, 就是把<code>histogramData</code>涉及到的地方替换成本地数据 例 <code>[1,2,3,4,5,6]</code> 将series里面的三个<code>data</code>都设置了就行了<br><img alt data-src="https://s2.ax1x.com/2019/11/14/MNAMzd.png" class="lazyload"></li></ol><pre><code>### 最后的效果图我就不放了, 在上面有!!!</code></pre>]]></content>
      
      
      <categories>
          
          <category> 微信小程序 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>SpringBoot 定时任务内 使用@Autowired注入Service 获取不到的问题</title>
      <link href="/2019/10/06/SpringBoot%20%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1%E5%86%85%20%E4%BD%BF%E7%94%A8@Autowired%E6%B3%A8%E5%85%A5Service%20%E8%8E%B7%E5%8F%96%E4%B8%8D%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98/"/>
      <url>/2019/10/06/SpringBoot%20%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1%E5%86%85%20%E4%BD%BF%E7%94%A8@Autowired%E6%B3%A8%E5%85%A5Service%20%E8%8E%B7%E5%8F%96%E4%B8%8D%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>近段时间使用微信Web版的API,实现一个微信机器人, 想每天早上像微信群发送天气预报, 在创建定时任务的时候,发现抛出异常,断点发现是在定时任务里获取不到ChatroomDescriptionService 这个service, 在网上查了查,发现需要手动去配置一个类，主动获取实例来解决这个问题。</p><p>首先创建一个工具类:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cherry.jeeves.utils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.BeansException;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.ApplicationContext;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.ApplicationContextAware;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@className</span>: ApplicationContextUtil</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>: 解决定时任务获取不到service的问题</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span> moneylee</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span> 2019-05-11 14:28</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Version</span> 1.0</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ApplicationContextUtil</span> <span class="keyword">implements</span> <span class="title">ApplicationContextAware</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> ApplicationContext applicationContext;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> ApplicationContext <span class="title">getApplicationContext</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> applicationContext;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setApplicationContext</span><span class="params">(ApplicationContext applicationContext)</span> <span class="keyword">throws</span> BeansException </span>&#123;</span><br><span class="line">        ApplicationContextUtil.applicationContext = applicationContext;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Object <span class="title">getBean</span><span class="params">(String beanName)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> applicationContext.getBean(beanName);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在serivice上添加注解 @Service(“chatroomDescriptionService”)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cherry.jeeves.service.Impl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.core.metadata.IPage;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.cherry.jeeves.dao.ChatroomDescriptionDao;</span><br><span class="line"><span class="keyword">import</span> com.cherry.jeeves.entity.ChatroomDescriptionEntity;</span><br><span class="line"><span class="keyword">import</span> com.cherry.jeeves.service.ChatroomDescriptionService;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@Service</span>(<span class="string">"chatroomDescriptionService"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ChatroomDescriptionServiceImpl</span> <span class="keyword">extends</span> <span class="title">ServiceImpl</span>&lt;<span class="title">ChatroomDescriptionDao</span>, <span class="title">ChatroomDescriptionEntity</span>&gt; <span class="keyword">implements</span> <span class="title">ChatroomDescriptionService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在定时任务类中获取该service</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ChatroomDescriptionService chatroomDescriptionService = (ChatroomDescriptionService) ApplicationContextUtil.getBean(<span class="string">"chatroomDescriptionService"</span>);</span><br></pre></td></tr></table></figure><p>参考文章: <a href="https://www.cnblogs.com/doudou2018/p/10416043.html" target="_blank" rel="noopener">https://www.cnblogs.com/doudou2018/p/10416043.html</a></p>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Docker 部署Nginx 并且挂载默认请求路径和配置文件</title>
      <link href="/2019/08/16/Docker%20%E9%83%A8%E7%BD%B2Nginx%20%E5%B9%B6%E4%B8%94%E6%8C%82%E8%BD%BD%E9%BB%98%E8%AE%A4%E8%AF%B7%E6%B1%82%E8%B7%AF%E5%BE%84%E5%92%8C%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/"/>
      <url>/2019/08/16/Docker%20%E9%83%A8%E7%BD%B2Nginx%20%E5%B9%B6%E4%B8%94%E6%8C%82%E8%BD%BD%E9%BB%98%E8%AE%A4%E8%AF%B7%E6%B1%82%E8%B7%AF%E5%BE%84%E5%92%8C%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>首先进入宿主机终端命令行 启动docker</p><p><code>service docker start</code></p><p>查看已安装docker镜像列表</p><p><code>docker images</code></p><p><img alt data-src="https://tva1.sinaimg.cn/large/006tNbRwly1g9sjoiuq3hj30hf01u74j.jpg" class="lazyload"></p><p>如果没有安装就安装下</p><p><code>docker pull nginx</code></p><p>然后得启动这个镜像 正常启动是下面的命令,但是先别着急敲</p><p><code>docker run -d -p 80:80 nginx</code></p><p>简单解释下这里面的值都代表啥意思 <code>-d</code>是让这个nginx容器服务后台运行 <code>-p</code>是指定端口 后面跟的80:80 前面的80是宿主机的端口 后面的是容器里nginx的端口, 比如改成 8080:80 那么我们在外部访问这个nginx服务 地址应该是 <a href="http://xx.xx.xx.xx:8080/" target="_blank" rel="noopener">xx.xx.xx.xx:8080</a> 就可以看到nginx的欢迎页了</p><p><code>nginx</code>当然是启动的镜像名字啦</p><p>但是啊,这么写不好,如果你像改这个nginx的配置文件,或者改个静态页咋改啊,我们得到这个容器的内部去改啊, 简单说下如何进入这个容器的内部</p><p>先获取到这个nginx容器的id , 查询所有容器 无论是运行的还是exit的,其实在不在执行你都能看出来了,因为上面有exit标识着呢</p><p><code>docker ps -a</code></p><p><img alt="16aa0b5e75088978" data-src="https://tva1.sinaimg.cn/large/006tNbRwly1g9sjs03539j30hv02rq3h.jpg" class="lazyload"></p><p>你看,映射的端口号都给你了,我这里面没有其他被关闭的容器服务,我有强迫症,都清理了,你也有的话执行这个命令 xxxxx是这个容器的id 图里有</p><p><code>docker rm xxxxx</code></p><p>扯这么多没用的,现在开始说重点的,如果去改这个nginx容器里的配置文件,日志文件的具体路径和内容呢,这就要使用到挂载,我理解的挂载的意思就是在使用这个nginx容器的时候,不去使用容器内的配置和文件路径,使用宿主机上的资源文件,对了 我还没说怎么去容器内,执行这个命令,对了 你要是不是root用户前面加 sudo</p><p><code>docker exec -it xxxx bash</code></p><p>xxxx是容器id</p><p><img alt="16aa0bd1e50158e8" data-src="https://tva1.sinaimg.cn/large/006tNbRwly1g9sju4ig21j30ef02gjrr.jpg" class="lazyload"></p><p>是不是有点眼熟 其实这个镜像自己的世界,不受外界打扰,但是功能指定没有宿主机全啊,比如你想在里面使用vim命令….</p><p>我们接着回来谈挂载,既然你想挂载,你得知道你镜像里面nginx的配置文件啥的都在哪吧,然后挂载到你宿主机的指定位置啊,所以我们先看看他们都在哪呢<br> 镜像中nginx.conf配置文件路径</p><p><code>/etc/nginx/nginx.conf</code></p><p>default.conf配置文件的路径</p><p><code>/etc/nginx/conf.d/default.conf</code></p><p>默认首页文件夹html路径</p><p><code>/usr/share/nginx/html</code></p><p>日志文件路径</p><p><code>/var/log/nginx</code></p><p><img alt="16aa0c396fe621b7" data-src="https://tva1.sinaimg.cn/large/006tNbRwly1g9sjx7ip6rj30ec074mz9.jpg" class="lazyload"></p><p>来个图验证一下, 然后输入 <code>exit</code> 退出nginx容器回到宿主机</p><p>下面在宿主机上建挂载使用的文件夹</p><p><code>mkdir -p /nginx/{conf,conf.d,html,logs}</code></p><p>建这4个文件夹都知道是干啥用的了吧, 没权限记住前面加 <code>sudo</code></p><p><img alt="16aa0ccb2a0d8482" data-src="https://tva1.sinaimg.cn/large/006tNbRwly1g9sjy43q42j30fg031dg9.jpg" class="lazyload"></p><p>下面就开始往对应的路径扔配置文件或者资源文件了,logs里不用,挂载好自动往里输出 error.log 和 access.log<br> html里你放首页需要展示的.html文件,然后你在访问,你加进来的html就把默认的nginx欢迎界面替换掉了…现在整没有用啊,你还没挂载呢,等会的。</p><p>conf里放 nginx.conf 配置文件, 这个文件的内容要从镜像里的复制出来哦,我们尽量保持和镜像里面的一致<br> 下面我们再来说说怎么将刚刚在容器里看到的配置文件copy到宿主机里面</p><p>前面是容器的路径 后面是宿主机的路径:</p><p><code>docker cp 容器id:/etc/nginx/nginx.conf /nginx/conf/nginx.conf</code></p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="attribute">user</span>  nginx;</span><br><span class="line"><span class="attribute">worker_processes</span>  <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="attribute">error_log</span>  /var/log/nginx/error.log <span class="literal">warn</span>;</span><br><span class="line"><span class="attribute">pid</span>        /var/run/nginx.pid;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="section">events</span> &#123;</span><br><span class="line">    <span class="attribute">worker_connections</span>  <span class="number">1024</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="section">http</span> &#123;</span><br><span class="line">    <span class="attribute">include</span>       /etc/nginx/mime.types;</span><br><span class="line">    <span class="attribute">default_type</span>  application/octet-stream;</span><br><span class="line"></span><br><span class="line">    <span class="attribute">log_format</span>  main  <span class="string">'<span class="variable">$remote_addr</span> - <span class="variable">$remote_user</span> [<span class="variable">$time_local</span>] "<span class="variable">$request</span>" '</span></span><br><span class="line">                      <span class="string">'<span class="variable">$status</span> <span class="variable">$body_bytes_sent</span> "<span class="variable">$http_referer</span>" '</span></span><br><span class="line">                      <span class="string">'"<span class="variable">$http_user_agent</span>" "<span class="variable">$http_x_forwarded_for</span>"'</span>;</span><br><span class="line"></span><br><span class="line">    <span class="attribute">access_log</span>  /var/log/nginx/access.log  main;</span><br><span class="line"></span><br><span class="line">    <span class="attribute">sendfile</span>        <span class="literal">on</span>;</span><br><span class="line">    <span class="comment">#tcp_nopush     on;</span></span><br><span class="line"></span><br><span class="line">    <span class="attribute">keepalive_timeout</span>  <span class="number">65</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">#gzip  on;</span></span><br><span class="line"></span><br><span class="line">    <span class="attribute">include</span> /etc/nginx/conf.d/<span class="regexp">*.conf</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>同样在把conf.d 下的default.conf 复制过来</p><p><code>docker cp 容器id:/etc/nginx/conf.d/default.conf /nginx/conf.d/default.conf</code></p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">server</span> &#123;</span><br><span class="line">    <span class="attribute">listen</span>       <span class="number">80</span>;</span><br><span class="line">    <span class="attribute">server_name</span>  localhost;</span><br><span class="line"></span><br><span class="line">    <span class="comment">#charset koi8-r;</span></span><br><span class="line">    <span class="comment">#access_log  /var/log/nginx/host.access.log  main;</span></span><br><span class="line"></span><br><span class="line">    <span class="attribute">location</span> / &#123;</span><br><span class="line">        <span class="attribute">root</span>   /usr/share/nginx/html;</span><br><span class="line">        <span class="attribute">index</span>  index.html index.htm;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">#error_page  404              /404.html;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># redirect server error pages to the static page /50x.html</span></span><br><span class="line">    <span class="comment">#</span></span><br><span class="line">    <span class="attribute">error_page</span>   <span class="number">500</span> <span class="number">502</span> <span class="number">503</span> <span class="number">504</span>  /50x.html;</span><br><span class="line">    <span class="attribute">location</span> = /50x.html &#123;</span><br><span class="line">        <span class="attribute">root</span>   /usr/share/nginx/html;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment"># proxy the PHP scripts to Apache listening on 127.0.0.1:80</span></span><br><span class="line">    <span class="comment">#</span></span><br><span class="line">    <span class="comment">#location ~ \.php$ &#123;</span></span><br><span class="line">    <span class="comment">#    proxy_pass   http://127.0.0.1;</span></span><br><span class="line">    <span class="comment">#&#125;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000</span></span><br><span class="line">    <span class="comment">#</span></span><br><span class="line">    <span class="comment">#location ~ \.php$ &#123;</span></span><br><span class="line">    <span class="comment">#    root           html;</span></span><br><span class="line">    <span class="comment">#    fastcgi_pass   127.0.0.1:9000;</span></span><br><span class="line">    <span class="comment">#    fastcgi_index  index.php;</span></span><br><span class="line">    <span class="comment">#    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;</span></span><br><span class="line">    <span class="comment">#    include        fastcgi_params;</span></span><br><span class="line">    <span class="comment">#&#125;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># deny access to .htaccess files, if Apache's document root</span></span><br><span class="line">    <span class="comment"># concurs with nginx's one</span></span><br><span class="line">    <span class="comment">#</span></span><br><span class="line">    <span class="comment">#location ~ /\.ht &#123;</span></span><br><span class="line">    <span class="comment">#    deny  all;</span></span><br><span class="line">    <span class="comment">#&#125;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后,我们自己写一个简单的html页面,给他随意命个名,我就不改了,叫index.html</p><p><img alt="16aa10120b7d7dcb" data-src="https://tva1.sinaimg.cn/large/006tNbRwly1g9sk0tyra8j309t07bgm3.jpg" class="lazyload"></p><p>然后把这个文件丢到 宿主机的 <code>/nginx/html/</code> 路径下</p><p>我是用FileZilla工具传输文件到宿主机的</p><p><img alt="16aa10469e7d8a51" data-src="https://tva1.sinaimg.cn/large/006tNbRwly1g9sk1d4rvej30fo09djry.jpg" class="lazyload"></p><p>最后到了最关键的环节了</p><p>开始挂载了 我们先把之前起的nginx容器服务关闭了 我直接一点, <code>docker rm 容器id</code></p><p>OMG 我们得先关闭再删除,<code>docker stop 容器id</code></p><p>都弄好了之后再次启动 这次和上次不同之处就是需要用到 <code>-v</code> 进行挂载了</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="keyword">run</span><span class="bash"> --name mynginx -d -p 80:80 -v /nginx/html:/usr/share/nginx/html -v /nginx/conf/nginx.conf:/etc/nginx/nginx.conf -v /nginx/conf.d/default.conf:/etc/nginx/conf.d/default.conf -v /nginx/logs:/var/<span class="built_in">log</span>/nginx nginx</span></span><br></pre></td></tr></table></figure><p>前面是宿主机路径 后面的nginx容器路径</p><p><img alt="16aa4cac7a47445b" data-src="https://tva1.sinaimg.cn/large/006tNbRwly1g9sk2m2eapj309b04faa6.jpg" class="lazyload"></p><p>我也是初学Java和Docker 哪有有不足请多指教,主要是给自己留个记录</p>]]></content>
      
      
      <categories>
          
          <category> Docker </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Swift开发的一些小知识点(更新状态)</title>
      <link href="/2016/11/15/Swift%E5%BC%80%E5%8F%91%E4%B8%80%E4%BA%9B%E5%B0%8F%E7%9F%A5%E8%AF%86%E7%82%B9/"/>
      <url>/2016/11/15/Swift%E5%BC%80%E5%8F%91%E4%B8%80%E4%BA%9B%E5%B0%8F%E7%9F%A5%E8%AF%86%E7%82%B9/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h3 id="Swift项目程序入口main函数在哪"><a href="#Swift项目程序入口main函数在哪" class="headerlink" title="Swift项目程序入口main函数在哪?"></a>Swift项目程序入口main函数在哪?</h3><p>Xcode新建的Swift项目中 发现没有main函数入口, 哪里去了呢, 在Appdelegate.swfit 上发现一个注解</p><p><code>@UIApplicationMain</code></p><p>这个注解会自动生成一个程序的入口, 但是如果在一些特殊情况下, 我们需要自定义 UIApplication该怎么办呢, 新建一个Swift文件, 命名为 main.swift    在其内实现main函数</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> UIKit</span><br><span class="line"><span class="comment">//自定义UIApplication</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyApplication</span>: <span class="title">UIApplication</span> </span>&#123;&#125;</span><br><span class="line"><span class="comment">//使用自定义的UIApplication</span></span><br><span class="line"><span class="type">UIApplicationMain</span>(<span class="type">CommandLine</span>.argc, <span class="type">CommandLine</span>.unsafeArgv, <span class="type">NSStringFromClass</span>(<span class="type">MyApplication</span>.<span class="keyword">self</span>), <span class="type">NSStringFromClass</span>(<span class="type">AppDelegate</span>.<span class="keyword">self</span>))</span><br></pre></td></tr></table></figure><h3 id="Swift调用OC"><a href="#Swift调用OC" class="headerlink" title="Swift调用OC"></a>Swift调用OC</h3><p>在swift项目新建OC类, 会弹出提示如下图</p><p><img alt="截屏2019-11-12下午10.44.09" data-src="https://tva1.sinaimg.cn/large/006y8mN6ly1g8vn1f9shqj30va07gjx0.jpg" class="lazyload"></p><p>会询问你是否创建桥接文件, 点击创建桥接文件, 在工程目录内会出现产生的桥接文件</p><p><img alt="Snip20191112_1" data-src="https://tva1.sinaimg.cn/large/006y8mN6ly1g8vn39auvvj307903u3yn.jpg" class="lazyload"></p><p>桥接文件的文件名固定格式 <strong>{targetName}-Bridging-Header.h</strong></p><p>这个头文件,引入一些OC的类, 暴露给Swift使用.</p><p><code>#import &quot;Change.h&quot;</code></p>]]></content>
      
      
      <categories>
          
          <category> iOS </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>《如何使用CocoaPods：2016.11.15版》</title>
      <link href="/2016/11/15/%E3%80%8A%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8CocoaPods%EF%BC%9A2016.11.15%E7%89%88%E3%80%8B/"/>
      <url>/2016/11/15/%E3%80%8A%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8CocoaPods%EF%BC%9A2016.11.15%E7%89%88%E3%80%8B/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>一、CocoaPods的简介：</p><p>CocoaPods是一个负责管理iOS项目中第三方开源库的工具。CocoaPods的项目源码在Github上管理。该项目开始于2011年8月12日，在这两年多的时间里，它持续保持活跃更新。开发iOS项目不可避免地要使用第三方开源库，CocoaPods的出现使得我们可以节省设置和更新第三方开源库的时间</p><p>在我们有了CocoaPods这个工具之后，只需要将用到的第三方开源库放到一个名为Podfile的文件中，然后在命令行执行$ pod install命令。CocoaPods就会自动将这些第三方开源库的源码下载下来，并且为我的工程设置好相应的系统依赖和编译参数，下面咱们开始步入正题。</p><p>二、安装CocoaPods：</p><p>安装的方式非常简单，Mac下已经自带了ruby，如果你不确定是否存在可以在终端输入  ruby -v（记住ruby后有个空格），之后你会看到下图，上面显示了你的ruby版本号。</p><p><img alt data-src="https://tva1.sinaimg.cn/large/006y8mN6ly1g8va82yqrmj30qe06sgow.jpg" class="lazyload"></p><p>ps: 现在安装cocoapods ruby环境需要 2.2.2 以上 之前的 2.0.0 不可以了  所以我们要升级一下ruby环境</p><p>查看目前的所有ruby版本：</p><p>$rvm list known  如果提示command not found 请先安装rvm</p><p>$curl -L get.rvm.io | bash -s stable</p><p>安装好后 退掉终端 然后再打开 rvm list known  出现所有版本</p><p><img alt data-src="https://tva1.sinaimg.cn/large/006y8mN6ly1g8vaardrunj310c0ne4gi.jpg" class="lazyload"></p><p>安装2.2.2  $rvm install 2.2.2</p><p>按照提示操作 安装完成</p><p>但是到这里还不行，我们要更换一下镜像站点，因为天朝你懂得，我们将原有的替换成淘宝的镜像站点。首先移除原有的镜像站点 （在这里我要说一下如何快速的打开终端，本人习惯 control+空格 然后输入ter 不知道的小伙伴可以试一下）</p><p>gem sources –remove <a href="https://rubygems.org/" target="_blank" rel="noopener">https://rubygems.org/</a>           //移除原有站点</p><p>gem sources -a <a href="https://ruby.taobao.org/" target="_blank" rel="noopener">https://ruby.taobao.org/</a>                   //使用新站点</p><p>gem sources -l                                                            //查看是否修改成功</p><p>最终应该是这样事的！就证明替换成功了！</p><p><img alt data-src="https://tva1.sinaimg.cn/large/006y8mN6ly1g8vacb04dqj30og0cc45g.jpg" class="lazyload"></p><p>准备工作完成了  开始安装CocoaPods：继续终端操作</p><p>sudo gem install cocoapods        //Cocoapods</p><p>提示输入密码 回车   等待安装。。。</p><p>三、Cocoapods的使用</p><p>创建好工程，然后打开终端 输入 cd空格  然后将你的工程从桌面拖拽到终端里</p><p>ls 确认路径是否正确</p><p><img alt data-src="https://tva1.sinaimg.cn/large/006y8mN6ly1g8vafqunf9j30jq06ugpa.jpg" class="lazyload"></p><p>然后终端     vim Podfile 回车  这里注意Podfile P要大写！！！</p><p><img alt data-src="https://tva1.sinaimg.cn/large/006y8mN6ly1g8vagcq1bpj30mi0kotbj.jpg" class="lazyload"></p><p>输入 i   最下方的 ”Podfile“ 【New File】自动改为 –INSERT–  （我就不截图了）然后继续</p><p><img alt data-src="https://tva1.sinaimg.cn/large/006y8mN6ly1g8vamadt03j30n80k8aaf.jpg" class="lazyload"></p><p>下面讲一下上图中输入的都代表什么意思吧   platform空格:ios,空格’8.0’    //表示所有库所支持的最低版本</p><p>target “cocoapods”do     //这个是改动的地方  之前这句话不用写 但是现在要添加上 否则会报错，系统会找不到你要添加的库的位置，反正我的会报错😢 “”号内为你的工程名。</p><p>pod空格‘FMDB’  和  pod空格 ‘AFNetworking’都是你要添加的库 如果你要设定你所导入的库的版本号 可以pod ‘FMDB’,’~&gt;2.6’设定其为2.6版本的。</p><p>版本号的规则：</p><p>‘&gt;1.0’ 可以安装任何高于1.0的版本</p><p>‘&gt;=1.0’ 可以安装任何高于或等于1.0的版本</p><p>‘&lt;1.0’ 任何低于1.0的版本</p><p>‘&lt;=1.0’ 任何低于或等于1.0的版本</p><p>不写版本号的话 默认安装最高版本的。</p><p> 对了 这里有一个小技巧，如果这个时候你忘记了你要添加的库的全名了，你可以模糊查找， 在选中终端窗口的前提下  command+N，会再打开一个终端窗口  输入  pod空格search空格+你要查找的库的关键字比如下图 我要查找SDWebImage 只需要输入SDWeb</p><p><img alt="截屏2019-11-12下午3.20.07" data-src="https://tva1.sinaimg.cn/large/006y8mN6ly1g8vamy4m9fj30iu0640st.jpg" class="lazyload"></p><p>详细显示了该库的版本等信息</p><p><img alt="截屏2019-11-12下午3.20.13" data-src="https://tva1.sinaimg.cn/large/006y8mN6ly1g8vancnatij30re0jydrh.jpg" class="lazyload"></p><p>好了  添加完所需要的库了，我们开始导入吧。按ESC 在下方输入  :wq 后回车</p><p><img alt="截屏2019-11-12下午3.20.19" data-src="https://tva1.sinaimg.cn/large/006y8mN6ly1g8vanp1vsij30cq0kcq52.jpg" class="lazyload"></p><p>然后界面切入到这里  在这里输入  pod空格install  如下图</p><p><img alt="截屏2019-11-12下午3.20.24" data-src="https://tva1.sinaimg.cn/large/006y8mN6ly1g8vao3yju7j30hg07ujue.jpg" class="lazyload"></p><p>最终结果：</p><p><img alt="截屏2019-11-12下午3.20.30" data-src="https://tva1.sinaimg.cn/large/006y8mN6ly1g8vaohqfhrj30rc0huwp1.jpg" class="lazyload"></p><p>安装三方库完成，下面打开你的工程，你会发现多了一个白色的文件，以后再运行工程就要打开它了。</p><p><img alt="截屏2019-11-12下午3.20.36" data-src="https://tva1.sinaimg.cn/large/006y8mN6ly1g8vaowag4nj30ti0dcwki.jpg" class="lazyload"></p><p>ps: 如果导入成功后出现导入头文件没有提示  进行如下操作</p><p>选着TARGETS -&gt;Build Settings -&gt;搜索sea 找到Search Paths</p><p><img alt="截屏2019-11-12下午3.20.43" data-src="https://tva1.sinaimg.cn/large/006y8mN6ly1g8vap8toc1j311w09eafw.jpg" class="lazyload"></p><p>找到 User Header Search Paths  双击后面空白处 点击+号 输入 $(PODS_ROOT) 最有改选 recursive</p><p><img alt="截屏2019-11-12下午3.20.50" data-src="https://tva1.sinaimg.cn/large/006y8mN6ly1g8vapkh4awj311a0g0jwh.jpg" class="lazyload"></p><p>大功告成！</p>]]></content>
      
      
      <categories>
          
          <category> iOS </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Linux常用命令</title>
      <link href="/2016/08/06/Linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
      <url>/2016/08/06/Linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h4 id="守护进程启动spring-boot项目"><a href="#守护进程启动spring-boot项目" class="headerlink" title="守护进程启动spring-boot项目:"></a>守护进程启动spring-boot项目:</h4><p><code>nohup java -jar repair-api.jar &gt; log.file 2&gt;&amp;1 &amp;</code></p><h4 id="实时查看日志信息-接上"><a href="#实时查看日志信息-接上" class="headerlink" title="实时查看日志信息(接上):"></a>实时查看日志信息(接上):</h4><p><code>tail -f log.file</code></p><h4 id="查看某个端口的进程id"><a href="#查看某个端口的进程id" class="headerlink" title="查看某个端口的进程id:"></a>查看某个端口的进程id:</h4><p><code>losof -i:8080</code></p><h4 id="通过进程id-关闭某个端口-注-中括号请忽略"><a href="#通过进程id-关闭某个端口-注-中括号请忽略" class="headerlink" title="通过进程id 关闭某个端口(注:中括号请忽略):"></a>通过进程id 关闭某个端口(注:中括号请忽略):</h4><p><code>kill -9 [从上面获取的进程id]</code></p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
    </entry>
    
    
  
  
</search>
