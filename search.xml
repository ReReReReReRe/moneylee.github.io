<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>CentOS7.4安装java8环境</title>
      <link href="/2020/06/10/CentOS7.4%E5%AE%89%E8%A3%85java8%E7%8E%AF%E5%A2%83/"/>
      <url>/2020/06/10/CentOS7.4%E5%AE%89%E8%A3%85java8%E7%8E%AF%E5%A2%83/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p><code>https://www.oracle.com/java/technologies/javase/javase-jdk8-downloads.html</code></p><p><img alt="Snip20200612_9" data-src="https://tva1.sinaimg.cn/large/007S8ZIlly1gfplf1zx0gj30ys0fv0vs.jpg" class="lazyload"></p><h5 id="创建安装目录"><a href="#创建安装目录" class="headerlink" title="创建安装目录"></a>创建安装目录</h5><p><code>mkdir /usr/local/java/</code></p><h5 id="解压到安装目录"><a href="#解压到安装目录" class="headerlink" title="解压到安装目录"></a>解压到安装目录</h5><p><code>tar -zxvf jdk-8u171-linux-x64.tar.gz -C /usr/local/java/</code></p><h5 id="设置环境变量"><a href="#设置环境变量" class="headerlink" title="设置环境变量"></a>设置环境变量</h5><p><code>vim /etc/profile</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">export JAVA_HOME=/usr/local/java/jdk1.8.0_171</span><br><span class="line">export JRE_HOME=$&#123;JAVA_HOME&#125;/jre</span><br><span class="line">export CLASSPATH=.:$&#123;JAVA_HOME&#125;/lib:$&#123;JRE_HOME&#125;/lib</span><br><span class="line">export PATH=$&#123;JAVA_HOME&#125;/bin:$PATH</span><br></pre></td></tr></table></figure><p>使环境变量生效</p><p><code>source /etc/profile</code></p><p>添加软连接</p><p><code>ln -s /usr/local/java/jdk1.8.0_171/bin/java /usr/bin/java</code></p><p>检查</p><p><code>java -version</code></p>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>人工智能学习整理_07Day</title>
      <link href="/2020/05/18/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E5%AD%A6%E4%B9%A0%E6%95%B4%E7%90%86_07Day(Tensorflow%E5%AE%9E%E8%B7%B5)/"/>
      <url>/2020/05/18/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E5%AD%A6%E4%B9%A0%E6%95%B4%E7%90%86_07Day(Tensorflow%E5%AE%9E%E8%B7%B5)/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1 id="北京大学-人工智能实践：Tensorflow笔记"><a href="#北京大学-人工智能实践：Tensorflow笔记" class="headerlink" title="北京大学 人工智能实践：Tensorflow笔记"></a>北京大学 人工智能实践：Tensorflow笔记</h1><p><a href="https://www.icourse163.org/course/PKU-1002536002" target="_blank" rel="noopener">学习地址</a></p><h4 id="课程概述"><a href="#课程概述" class="headerlink" title="课程概述"></a>课程概述</h4><p>课程梳理出Tensorflow2搭建优化神经网络的八股，带你逐步完善代码，实现图像识别与股票预测。课程以录像形式讲解知识点，以录屏形式分析源代码，通过助教的Tensorflow笔记实现回顾与扩展。内容包括：深度学习、神经网络的基本概念原理和代码实现示例。</p><h4 id="课程大纲"><a href="#课程大纲" class="headerlink" title="课程大纲"></a>课程大纲</h4><p>第一讲、讲解神经网络的计算过程，搭建出你的第一个神经网络模型；</p><p>第二讲、讲解神经网络的优化方法，掌握学习率、激活函数、损失函数和正则化的使用，用Python语言写出5种反向传播优化器（SGD、Momentum、Adagrad、RMSProp、Adam）。</p><p>第三讲、分享神经网络的搭建八股，用“六步法”， 不到20行代码，写出手写数字识别训练模型。</p><p>第四讲、对神经网络的八股进行扩展，增加自制数据集、数据增强，断点续训，参数提取和acc/loss可视化，最后实现给图识物的应用程序。</p><p>第五讲、讲解卷积神经网络，用基础CNN、LeNet、AlexNet、VGGNet、InceptionNet和ResNet实现图像识别。</p><p>第六讲、讲解循环神经网络，用基础RNN、LSTM、GRU实现股票预测。</p><h4 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h4><p>源码下载链接：<a href="https://pan.baidu.com/s/19XC28Hz_TwnSQeuVifg1UQ" target="_blank" rel="noopener">https://pan.baidu.com/s/19XC28Hz_TwnSQeuVifg1UQ</a> </p><p>提取码：<code>mocm</code></p>]]></content>
      
      
      <categories>
          
          <category> 人工智能 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>人工智能学习整理_06Day</title>
      <link href="/2020/05/16/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E5%AD%A6%E4%B9%A0%E6%95%B4%E7%90%86_06Day(Tensorflow%E5%AE%89%E8%A3%85)/"/>
      <url>/2020/05/16/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E5%AD%A6%E4%B9%A0%E6%95%B4%E7%90%86_06Day(Tensorflow%E5%AE%89%E8%A3%85)/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>#Tensorflow安装说明</p><p>前置条件：win7或win10 64位操作系统   推荐<strong>win10 64位操作系统</strong></p><p>Python：3.6以上版本 推荐用 <strong>anaconda3</strong> </p><p>百度网盘下载地址：<code>https://pan.baidu.com/s/1k-1m2jshv2J_j3zFWQJSyg</code> </p><p>提取码：<code>tm7c</code></p><p><strong>安装注意勾选环境变量</strong></p><p><img alt="图片11" data-src="https://tva1.sinaimg.cn/large/007S8ZIlly1gft9ywuoh8j30h70d7gr2.jpg" class="lazyload"></p><h3 id="CPU和GPU二选一"><a href="#CPU和GPU二选一" class="headerlink" title="CPU和GPU二选一"></a>CPU和GPU二选一</h3><p>1、CPU版本：</p><p>​      适合集成显卡，amd显卡全部，或者低于英伟达gt750M的电脑</p><p>​      在CMD里面输入：</p><p>​      <code>pip install tensorflow==1.13.0 -i https://pypi.douban.com/simple</code></p><p>​      <img alt="图片12" data-src="https://tva1.sinaimg.cn/large/007S8ZIlly1gfta3kbq1lj30iw044wf4.jpg" class="lazyload"></p><p>2、安装GPU的tensorflow （电脑必须有英伟达的显卡，并且性能要求高于gt750M以上 如果您的电脑才购买一年,就基本上可以）</p><p>下载 cuda10.0 和 cudnn7.6</p><p>下载地址:</p><p><code>https://pan.baidu.com/s/1PHbc0t15u4d9zknY08jzhw</code></p><p>提取码: <code>t0pr</code></p><p>安装的时候选择自定义。安装选项参考下图:</p><p><img alt="图片13" data-src="https://tva1.sinaimg.cn/large/007S8ZIlly1gfta7y786bj30km0f8acn.jpg" class="lazyload"></p><p>然后点击下一步就可以了。</p><p>Cudnn7.6解压缩， 得到一个cuda文件夹，复制里面的所有文件，粘贴到如下位置：</p><p><img alt="图片14" data-src="https://tva1.sinaimg.cn/large/007S8ZIlly1gftamwbtk2j30t90jujst.jpg" class="lazyload"></p><p>然后在cmd内输入安装命令：</p><p><code>pip install tensorflow-gpu==1.14.0 -i https://pypi.douban.com/simple</code></p>]]></content>
      
      
      <categories>
          
          <category> 人工智能 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>人工智能学习整理_05Day</title>
      <link href="/2020/05/15/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E5%AD%A6%E4%B9%A0%E6%95%B4%E7%90%86_05Day(%E5%8F%8D%E5%90%91%E4%BC%A0%E6%92%AD%E7%AE%97%E6%B3%95)/"/>
      <url>/2020/05/15/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E5%AD%A6%E4%B9%A0%E6%95%B4%E7%90%86_05Day(%E5%8F%8D%E5%90%91%E4%BC%A0%E6%92%AD%E7%AE%97%E6%B3%95)/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1 id="零基础入门深度学习-神经网络和反向传播算法"><a href="#零基础入门深度学习-神经网络和反向传播算法" class="headerlink" title="零基础入门深度学习- 神经网络和反向传播算法"></a>零基础入门深度学习- 神经网络和反向传播算法</h1><p><a href="https://www.zybuluo.com/hanbingtao/note/476663" target="_blank" rel="noopener">学习地址</a></p>]]></content>
      
      
      <categories>
          
          <category> 人工智能 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>人工智能学习整理_04Day</title>
      <link href="/2020/05/13/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E5%AD%A6%E4%B9%A0%E6%95%B4%E7%90%86_04Day(%E6%A2%AF%E5%BA%A6%E4%B8%8E%E6%A2%AF%E5%BA%A6%E4%B8%8B%E9%99%8D)/"/>
      <url>/2020/05/13/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E5%AD%A6%E4%B9%A0%E6%95%B4%E7%90%86_04Day(%E6%A2%AF%E5%BA%A6%E4%B8%8E%E6%A2%AF%E5%BA%A6%E4%B8%8B%E9%99%8D)/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1 id="机器学习-ML重要概念：梯度（Gradient）与梯度下降法（Gradient-Descent）"><a href="#机器学习-ML重要概念：梯度（Gradient）与梯度下降法（Gradient-Descent）" class="headerlink" title="[机器学习] ML重要概念：梯度（Gradient）与梯度下降法（Gradient Descent）"></a>[机器学习] ML重要概念：梯度（Gradient）与梯度下降法（Gradient Descent）</h1><p>####引言<br>　机器学习栏目记录我在学习Machine Learning过程的一些心得笔记，涵盖线性回归、逻辑回归、Softmax回归、神经网络和SVM等等，主要学习资料来自网上的免费课程和一些经典书籍，免费课程例如Standford Andrew Ng老师在Coursera的教程以及UFLDL Tutorial，经典书籍例如《统计学习方法》等，同时也参考了大量网上的相关资料（在后面列出）。　　</p><p>####前言<br>　机器学习中的大部分问题都是优化问题，而绝大部分优化问题都可以使用梯度下降法处理，那么搞懂什么是梯度，什么是梯度下降法就非常重要！这是基础中的基础，也是必须掌握的概念！<br>　提到梯度，就必须从导数（derivative）、偏导数（partial derivative）和方向导数（directional derivative）讲起，弄清楚这些概念，才能够正确理解为什么在优化问题中使用梯度下降法来优化目标函数，并熟练掌握梯度下降法（Gradient Descent）。</p><p>　本文主要记录我在学习机器学习过程中对梯度概念复习的笔记，主要参考《高等数学》《简明微积分》以及维基百科上的资料为主，文章小节安排如下：<br>　1）导数<br>　2）导数和偏导数<br>　3）导数与方向导数<br>　4）导数与梯度<br>　5）梯度下降法<br>　6）参考资料<br>　7）结语　</p><h4 id="导数"><a href="#导数" class="headerlink" title="导数"></a>导数</h4><p>　一张图读懂导数与微分：</p><p>　<img alt="20160325131532476" data-src="https://tva1.sinaimg.cn/large/007S8ZIlly1gft95bn3m7j30bu0abmyl.jpg" class="lazyload"><br>　这是高数中的一张经典图，如果忘记了导数微分的概念，基本看着这张图就能全部想起来。<br>　导数定义如下：</p><p><img alt="2" data-src="https://tva1.sinaimg.cn/large/007S8ZIlly1gft96q5cshj30as01ua9u.jpg" class="lazyload"></p><p>　<strong>反映的是函数y=f(x)在某一点处沿x轴正方向的变化率。</strong>再强调一遍，是<strong>函数f(x)在x轴上某一点处沿着x轴正方向的变化率/变化趋势。直观地看，也就是在x轴上某一点处，如果f’(x)&gt;0，说明f(x)的函数值在x点沿x轴正方向是趋于增加的；如果f’(x)&lt;0，说明f(x)的函数值在x点沿x轴正方向是趋于减少的</strong>。</p><p>　这里补充上图中的Δy、dy等符号的意义及关系如下：<br>　Δx：x的变化量；<br>　dx：x的变化量Δx趋于0时，则记作微元dx；<br>　Δy：Δy=f(x0+Δx)-f(x0)，是函数的增量；<br>　dy：dy=f’(x0)dx，是切线的增量；<br>　当Δx→0时，dy与Δy都是无穷小，dy是Δy的主部，即Δy=dy+o(Δx).　</p><p>####导数和偏导数<br>　偏导数的定义如下：</p><p>​    <img alt="3" data-src="https://tva1.sinaimg.cn/large/007S8ZIlly1gft99z7am6j30jj01ta9v.jpg" class="lazyload">　　</p><p>可以看到，<strong>导数与偏导数本质是一致的，都是当自变量的变化量趋于0时，函数值的变化量与自变量变化量比值的极限。直观地说，偏导数也就是函数在某一点上沿坐标轴正方向的的变化率。</strong><br>　区别在于：<br>　导数，指的是一元函数中，函数y=f(x)在某一点处沿x轴正方向的变化率；<br>　偏导数，指的是多元函数中，函数y=f(x1,x2,…,xn)在某一点处沿某一坐标轴（x1,x2,…,xn）正方向的变化率。　</p><h4 id="导数与方向导数："><a href="#导数与方向导数：" class="headerlink" title="导数与方向导数："></a>导数与方向导数：</h4><p>　方向导数的定义如下：<br>　<img alt="4" data-src="https://tva1.sinaimg.cn/large/007S8ZIlly1gft9c7a5d0j30ly03uglh.jpg" class="lazyload">　</p><p>在前面导数和偏导数的定义中，均是沿坐标轴正方向讨论函数的变化率。那么当我们讨论函数沿任意方向的变化率时，也就引出了方向导数的定义，即：<strong>某一点在某一趋近方向上的导数值。</strong><br>　通俗的解释是：<br>　我们不仅要知道函数在坐标轴正方向上的变化率（即偏导数），而且还要设法求得函数在其他特定方向上的变化率。而方向导数就是函数在其他特定方向上的变化率。　</p><h4 id="导数与梯度"><a href="#导数与梯度" class="headerlink" title="导数与梯度"></a>导数与梯度</h4><p>　梯度的定义如下：</p><p>​    　<img alt="5" data-src="https://tva1.sinaimg.cn/large/007S8ZIlly1gft9cw05n0j30av01ydfm.jpg" class="lazyload"><br>　梯度的提出只为回答一个问题：<br>　函数在变量空间的某一点处，沿着哪一个方向有最大的变化率？<br>　梯度定义如下：</p><p>　<strong>函数在某一点的梯度是这样一个向量，它的方向与取得最大方向导数的方向一致，而它的模为方向导数的最大值。</strong></p><p>　这里注意三点：<br>　1）梯度是一个向量，即有方向有大小；<br>　2）梯度的方向是最大方向导数的方向；<br>　3）梯度的值是最大方向导数的值。　</p><h4 id="导数与向量"><a href="#导数与向量" class="headerlink" title="导数与向量"></a>导数与向量</h4><p>　<strong>提问：导数与偏导数与方向导数是向量么？</strong><br>　向量的定义是有方向（direction）有大小（magnitude）的量。<br>　从前面的定义可以这样看出，偏导数和方向导数表达的是函数在某一点沿某一方向的变化率，也是具有方向和大小的。因此从这个角度来理解，我们也可以把偏导数和方向导数看作是一个向量，向量的方向就是变化率的方向，向量的模，就是变化率的大小。<br>　那么沿着这样一种思路，就可以如下理解梯度：<br>　<strong>梯度即函数在某一点最大的方向导数，函数沿梯度方向函数有最大的变化率。</strong>　　</p><h4 id="梯度下降法"><a href="#梯度下降法" class="headerlink" title="梯度下降法"></a>梯度下降法</h4><p>　既然在变量空间的某一点处，函数沿梯度方向具有最大的变化率，那么在优化目标函数的时候，自然是沿着<strong>负梯度方向</strong>去减小函数值，以此达到我们的优化目标。<br>　如何沿着负梯度方向减小函数值呢？既然梯度是偏导数的集合，如下：</p><p>​          　<img alt="1" data-src="https://tva1.sinaimg.cn/large/007S8ZIlly1gft9ejgih8j30av01ydfm.jpg" class="lazyload"><br>　同时梯度和偏导数都是向量，那么参考向量运算法则，我们在每个变量轴上减小对应变量值即可，梯度下降法可以描述如下：<br>​                    　<img alt="3" data-src="https://tva1.sinaimg.cn/large/007S8ZIlly1gft9f712azj304u080q2r.jpg" class="lazyload"></p><p>　以上就是梯度下降法的由来，大部分的机器学习任务，都可以利用Gradient Descent来进行优化。　　</p><p>参考资料<br>参考书：<br>《高等数学》<br>《简明微积分》<br>参考链接：<br>梯度<br><a href="https://zh.wikipedia.org/zh-cn/%E5%81%8F%E5%AF%BC%E6%95%B0" target="_blank" rel="noopener">https://zh.wikipedia.org/zh-cn/%E5%81%8F%E5%AF%BC%E6%95%B0</a><br>方向导数和梯度<br><a href="http://blog.csdn.net/wolenski/article/details/8030654" target="_blank" rel="noopener">http://blog.csdn.net/wolenski/article/details/8030654</a></p><p>附：<br>维基百科的可用Hosts文件<br><a href="http://www.williamlong.info/archives/4456.html" target="_blank" rel="noopener">http://www.williamlong.info/archives/4456.html</a><br>　<br>　<br>本文摘自CSDN博主「WangBo_NLPR」的原创文章<br>原文链接：<a href="https://blog.csdn.net/walilk/article/details/50978864" target="_blank" rel="noopener">https://blog.csdn.net/walilk/article/details/50978864</a></p>]]></content>
      
      
      <categories>
          
          <category> 人工智能 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>人工智能学习整理_03Day</title>
      <link href="/2020/05/13/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E5%AD%A6%E4%B9%A0%E6%95%B4%E7%90%86_03Day(%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E6%B5%85%E8%B0%88)/"/>
      <url>/2020/05/13/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E5%AD%A6%E4%B9%A0%E6%95%B4%E7%90%86_03Day(%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E6%B5%85%E8%B0%88)/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h3 id="神经网络浅讲：从神经元到深度学习"><a href="#神经网络浅讲：从神经元到深度学习" class="headerlink" title="神经网络浅讲：从神经元到深度学习"></a>神经网络浅讲：从神经元到深度学习</h3><p>神经网络是一门重要的机器学习技术。它是目前最为火热的研究方向–深度学习的基础。学习神经网络不仅可以让你掌握一门强大的机器学习方法，同时也可以更好地帮助你理解深度学习技术。</p><p>　　本文以一种简单的，循序的方式讲解神经网络。适合对神经网络了解不多的同学。本文对阅读没有一定的前提要求，但是懂一些<a href="http://www.cnblogs.com/subconscious/p/4107357.html" target="_blank" rel="noopener">机器学习</a>基础会更好地帮助理解本文。</p><p>　　神经网络是一种模拟人脑的神经网络以期能够实现类人工智能的机器学习技术。人脑中的神经网络是一个非常复杂的组织。成人的大脑中估计有1000亿个神经元之多。</p><p><img alt="img" data-src="https://images2015.cnblogs.com/blog/673793/201512/673793-20151229110952448-2017198041.jpg" class="lazyload"></p><p>图1 人脑神经网络</p><p>　　那么机器学习中的神经网络是如何实现这种模拟的，并且达到一个惊人的良好效果的？通过本文，你可以了解到这些问题的答案，同时还能知道神经网络的历史，以及如何较好地学习它。</p><p>　　由于本文较长，为方便读者，以下是本文的目录：</p><p>　　一.<a href="https://www.cnblogs.com/subconscious/p/5058741.html#first" target="_blank" rel="noopener">前言</a></p><p>　　二.<a href="https://www.cnblogs.com/subconscious/p/5058741.html#second" target="_blank" rel="noopener">神经元</a></p><p>　　三.<a href="https://www.cnblogs.com/subconscious/p/5058741.html#third" target="_blank" rel="noopener">单层神经网络（感知器）</a></p><p>　　四.<a href="https://www.cnblogs.com/subconscious/p/5058741.html#fourth" target="_blank" rel="noopener">两层神经网络（多层感知器）</a></p><p>　　五.<a href="https://www.cnblogs.com/subconscious/p/5058741.html#fifth" target="_blank" rel="noopener">多层神经网络（深度学习）</a></p><p>　　六.<a href="https://www.cnblogs.com/subconscious/p/5058741.html#sixth" target="_blank" rel="noopener">回顾</a></p><p>　　七.<a href="https://www.cnblogs.com/subconscious/p/5058741.html#seventh" target="_blank" rel="noopener">展望</a><a href="https://www.cnblogs.com/subconscious/p/5058741.html#sixth" target="_blank" rel="noopener"></a></p><p>　　八.<a href="https://www.cnblogs.com/subconscious/p/5058741.html#eighth" target="_blank" rel="noopener">总结</a><a href="https://www.cnblogs.com/subconscious/p/5058741.html#nineth" target="_blank" rel="noopener"></a></p><p>　　九.<a href="https://www.cnblogs.com/subconscious/p/5058741.html#nineth" target="_blank" rel="noopener">后记</a></p><p>　　十.<a href="https://www.cnblogs.com/subconscious/p/5058741.html#tenth" target="_blank" rel="noopener">备注</a><a href="https://www.cnblogs.com/subconscious/p/5058741.html#tenth" target="_blank" rel="noopener"></a></p><p><strong>一. 前言</strong></p><p>　　让我们来看一个经典的神经网络。这是一个包含三个层次的神经网络。红色的是<strong>输入层</strong>，绿色的是<strong>输出层</strong>，紫色的是<strong>中间层</strong>（也叫<strong>隐藏层</strong>）。输入层有3个输入单元，隐藏层有4个单元，输出层有2个单元。后文中，我们统一使用这种颜色来表达神经网络的结构。</p><p><img alt="img" data-src="https://images2015.cnblogs.com/blog/673793/201512/673793-20151219151604318-1557737289.jpg" class="lazyload"></p><p>图2 神经网络结构图</p><p>　　在开始介绍前，有一些知识可以先记在心里：</p><ol><li>设计一个神经网络时，输入层与输出层的节点数往往是固定的，中间层则可以自由指定；</li><li>神经网络结构图中的拓扑与箭头代表着<strong>预测</strong>过程时数据的流向，跟<strong>训练</strong>时的数据流有一定的区别；</li><li>结构图里的关键不是圆圈（代表“神经元”），而是连接线（代表“神经元”之间的连接）。每个连接线对应一个不同的<strong>权重</strong>（其值称为<strong>权值</strong>），这是需要训练得到的。 </li></ol><p>　　除了从左到右的形式表达的结构图，还有一种常见的表达形式是从下到上来表示一个神经网络。这时候，输入层在图的最下方。输出层则在图的最上方，如下图：</p><p><img alt="img" data-src="https://images2015.cnblogs.com/blog/673793/201512/673793-20151219174631693-775181930.jpg" class="lazyload"></p><p>图3 从下到上的神经网络结构图 </p><p>　　从左到右的表达形式以Andrew Ng和LeCun的文献使用较多，Caffe里使用的则是从下到上的表达。在本文中使用Andrew Ng代表的从左到右的表达形式。</p><p>　　下面从简单的神经元开始说起，一步一步介绍神经网络复杂结构的形成。</p><p><strong>二. 神经元</strong></p><p>　　<strong>1.引子</strong>　</p><p>　　对于神经元的研究由来已久，1904年生物学家就已经知晓了神经元的组成结构。</p><p>　　一个神经元通常具有多个<strong>树突</strong>，主要用来接受传入信息；而<strong>轴突</strong>只有一条，轴突尾端有许多轴突末梢可以给其他多个神经元传递信息。轴突末梢跟其他神经元的树突产生连接，从而传递信号。这个连接的位置在生物学上叫做“<strong>突触</strong>”。</p><p>　　人脑中的神经元形状可以用下图做简单的说明：</p><p><img alt="img" data-src="https://images2015.cnblogs.com/blog/673793/201512/673793-20151229121248198-818698949.jpg" class="lazyload"></p><p>图4 神经元</p><p> 　1943年，心理学家McCulloch和数学家Pitts参考了生物神经元的结构，发表了抽象的神经元模型MP。在下文中，我们会具体介绍神经元模型。</p><p><img alt="img" data-src="https://images2015.cnblogs.com/blog/673793/201512/673793-20151219175550990-1730772549.jpg" class="lazyload">  <img alt="img" data-src="https://images2015.cnblogs.com/blog/673793/201512/673793-20151219175600006-1000051743.jpg" class="lazyload"></p><p>图5 Warren McCulloch（左）和 Walter Pitts（右） </p><p>　　<strong>2.结构</strong> </p><p>　　神经元模型是一个包含输入，输出与计算功能的模型。输入可以类比为神经元的树突，而输出可以类比为神经元的轴突，计算则可以类比为细胞核。</p><p>　　下图是一个典型的神经元模型：包含有3个输入，1个输出，以及2个计算功能。</p><p>　　注意中间的箭头线。这些线称为“连接”。每个上有一个“权值”。</p><p><img alt="img" data-src="https://images2015.cnblogs.com/blog/673793/201512/673793-20151219153856802-307732621.jpg" class="lazyload"></p><p>图6 神经元模型 </p><p>　　连接是神经元中最重要的东西。每一个连接上都有一个权重。</p><p>　　一个神经网络的训练算法就是让权重的值调整到最佳，以使得整个网络的预测效果最好。</p><p>　　我们使用a来表示输入，用w来表示权值。一个表示连接的有向箭头可以这样理解：在初端，传递的信号大小仍然是a，端中间有加权参数w，经过这个加权后的信号会变成a<em>w，因此在连接的末端，信号的大小就变成了a</em>w。</p><p>　　在其他绘图模型里，有向箭头可能表示的是值的不变传递。而在神经元模型里，每个有向箭头表示的是值的加权传递。</p><p><img alt="img" data-src="https://images2015.cnblogs.com/blog/673793/201512/673793-20151219180614819-1652574235.jpg" class="lazyload"></p><p>图7 连接（connection） </p><p>　　如果我们将神经元图中的所有变量用符号表示，并且写出输出的计算公式的话，就是下图。</p><p><img alt="img" data-src="https://images2015.cnblogs.com/blog/673793/201512/673793-20151230201441792-1505283920.jpg" class="lazyload"></p><p>图8 神经元计算 </p><p>　　可见z是在输入和权值的线性加权和叠加了一个<strong>函数g</strong>的值。在MP模型里，函数g是sgn函数，也就是取符号函数。这个函数当输入大于0时，输出1，否则输出0。</p><p>　　下面对神经元模型的图进行一些扩展。首先将sum函数与sgn函数合并到一个圆圈里，代表神经元的内部计算。其次，把输入a与输出z写到连接线的左上方，便于后面画复杂的网络。最后说明，一个神经元可以引出多个代表输出的有向箭头，但值都是一样的。</p><p>　　神经元可以看作一个计算与存储单元。计算是神经元对其的输入进行计算功能。存储是神经元会暂存计算结果，并传递到下一层。</p><p><img alt="img" data-src="https://images2015.cnblogs.com/blog/673793/201512/673793-20151230204036479-461440948.jpg" class="lazyload"></p><p>图9 神经元扩展 </p><p>　　当我们用“神经元”组成网络以后，描述网络中的某个“神经元”时，我们更多地会用“<strong>单元</strong>”（unit）来指代。同时由于神经网络的表现形式是一个有向图，有时也会用“<strong>节点</strong>”（node）来表达同样的意思。 </p><p>　　<strong>3.效果</strong> </p><p>　　神经元模型的使用可以这样理解：</p><p>　　我们有一个数据，称之为样本。样本有四个属性，其中三个属性已知，一个属性未知。我们需要做的就是通过三个已知属性<strong>预测</strong>未知属性。</p><p>　　具体办法就是使用神经元的公式进行计算。三个已知属性的值是a1，a2，a3，未知属性的值是z。z可以通过公式计算出来。</p><p>　　这里，已知的属性称之为<strong>特征</strong>，未知的属性称之为<strong>目标</strong>。假设特征与目标之间确实是线性关系，并且我们已经得到表示这个关系的权值w1，w2，w3。那么，我们就可以通过神经元模型预测新样本的目标。</p><p>　　<strong>4.影响</strong></p><p>　　1943年发布的MP模型，虽然简单，但已经建立了神经网络大厦的地基。但是，MP模型中，权重的值都是预先设置的，因此不能学习。</p><p>　　1949年心理学家Hebb提出了Hebb学习率，认为人脑神经细胞的<strong>突触</strong>（也就是连接）上的强度上可以变化的。于是计算科学家们开始考虑用调整权值的方法来让机器学习。这为后面的学习算法奠定了基础。</p><p><img alt="img" data-src="https://images2015.cnblogs.com/blog/673793/201512/673793-20151219175742677-1785435491.gif" class="lazyload"></p><p>图10 Donald Olding Hebb </p><p>　　尽管神经元模型与Hebb学习律都已诞生，但限于当时的计算机能力，直到接近10年后，第一个真正意义的神经网络才诞生。</p><p><strong>三. 单层神经网络（感知器）</strong></p><p>　　<strong>1.引子</strong>　　</p><p>　　1958年，计算科学家Rosenblatt提出了由两层神经元组成的神经网络。他给它起了一个名字–“感知器”（Perceptron）（有的文献翻译成“感知机”，下文统一用“感知器”来指代）。</p><p>　　感知器是当时首个可以学习的人工神经网络。Rosenblatt现场演示了其学习识别简单图像的过程，在当时的社会引起了轰动。</p><p>　　人们认为已经发现了智能的奥秘，许多学者和科研机构纷纷投入到神经网络的研究中。美国军方大力资助了神经网络的研究，并认为神经网络比“原子弹工程”更重要。这段时间直到1969年才结束，这个时期可以看作神经网络的第一次高潮。</p><p><img alt="img" data-src="https://images2015.cnblogs.com/blog/673793/201512/673793-20151221153812609-1784157068.jpg" class="lazyload"></p><p>图11 Rosenblat与感知器 </p><p>　　<strong>2.结构</strong></p><p>　　下面来说明感知器模型。</p><p>　　在原来MP模型的“输入”位置添加神经元节点，标志其为“输入单元”。其余不变，于是我们就有了下图：从本图开始，我们将权值w1, w2, w3写到“连接线”的中间。</p><p><img alt="img" data-src="https://images2015.cnblogs.com/blog/673793/201512/673793-20151221151959015-1876891081.jpg" class="lazyload"></p><p>图12 单层神经网络 </p><p>　　在“感知器”中，有两个层次。分别是输入层和输出层。输入层里的“输入单元”只负责传输数据，不做计算。输出层里的“输出单元”则需要对前面一层的输入进行计算。</p><p>　　我们把需要计算的层次称之为“计算层”，并把拥有一个计算层的网络称之为“单层神经网络”。有一些文献会按照网络拥有的层数来命名，例如把“感知器”称为两层神经网络。但在本文里，我们根据计算层的数量来命名。</p><p>　　假如我们要预测的目标不再是一个值，而是一个向量，例如[2,3]。那么可以在输出层再增加一个“输出单元”。</p><p>　　下图显示了带有两个输出单元的单层神经网络，其中输出单元z1的计算公式如下图。</p><p><img alt="img" data-src="https://images2015.cnblogs.com/blog/673793/201512/673793-20151230204223917-579926148.jpg" class="lazyload"></p><p>图13 单层神经网络(Z1)</p><p>　　可以看到，z1的计算跟原先的z并没有区别。</p><p>　　我们已知一个神经元的输出可以向多个神经元传递，因此z2的计算公式如下图。</p><p><img alt="img" data-src="https://images2015.cnblogs.com/blog/673793/201512/673793-20151230204258057-82126781.jpg" class="lazyload"></p><p>图14 单层神经网络(Z2)</p><p>　　可以看到，z2的计算中除了三个新的权值：w4，w5，w6以外，其他与z1是一样的。</p><p>　　整个网络的输出如下图。</p><p><img alt="img" data-src="https://images2015.cnblogs.com/blog/673793/201512/673793-20151230204606760-610264555.jpg" class="lazyload"></p><p>图15 单层神经网络(Z1和Z2)</p><p>　　目前的表达公式有一点不让人满意的就是：w4，w5，w6是后来加的，很难表现出跟原先的w1，w2，w3的关系。</p><p>　　因此我们改用二维的下标，用wx,y来表达一个权值。下标中的x代表后一层神经元的序号，而y代表前一层神经元的序号（序号的顺序从上到下）。</p><p>　　例如，w1,2代表后一层的第1个神经元与前一层的第2个神经元的连接的权值（这种标记方式参照了Andrew Ng的课件）。根据以上方法标记，我们有了下图。</p><p><img alt="img" data-src="https://images2015.cnblogs.com/blog/673793/201512/673793-20151230205437995-673856644.jpg" class="lazyload"></p><p>图16 单层神经网络(扩展)</p><p>　　如果我们仔细看输出的计算公式，会发现这两个公式就是线性代数方程组。因此可以用矩阵乘法来表达这两个公式。</p><p>　　例如，输入的变量是[a1，a2，a3]T（代表由a1，a2，a3组成的列向量），用向量<strong>a</strong>来表示。方程的左边是[z1，z2]T，用向量<strong>z</strong>来表示。</p><p>　　系数则是矩阵<strong>W</strong>（2行3列的矩阵，排列形式与公式中的一样）。</p><p>　　于是，输出公式可以改写成：</p><p>g(<strong>W</strong> * <strong>a</strong>) = <strong>z</strong>;</p><p>　　这个公式就是神经网络中从前一层计算后一层的<strong>矩阵运算。</strong></p><p>　　<strong>3.效果</strong></p><p>　　与神经元模型不同，感知器中的权值是通过训练得到的。因此，根据以前的知识我们知道，感知器类似一个<strong>逻辑回归</strong>模型，可以做线性分类任务。</p><p>　　我们可以用<strong>决策分界</strong>来形象的表达分类的效果。决策分界就是在二维的数据平面中划出一条直线，当数据的维度是3维的时候，就是划出一个平面，当数据的维度是n维时，就是划出一个n-1维的超平面。</p><p>　　下图显示了在二维平面中划出决策分界的效果，也就是感知器的分类效果。</p><p><img alt="img" data-src="https://images2015.cnblogs.com/blog/673793/201512/673793-20151231073138323-962584420.png" class="lazyload"></p><p>图17 单层神经网络（决策分界）</p><p>　　</p><p>　　<strong>4.影响</strong>　</p><p>　　感知器只能做简单的线性分类任务。但是当时的人们热情太过于高涨，并没有人清醒的认识到这点。于是，当人工智能领域的巨擘Minsky指出这点时，事态就发生了变化。</p><p>　　Minsky在1969年出版了一本叫《Perceptron》的书，里面用详细的数学证明了感知器的弱点，尤其是感知器对XOR（异或）这样的简单分类任务都无法解决。</p><p>　　Minsky认为，如果将计算层增加到两层，计算量则过大，而且没有有效的学习算法。所以，他认为研究更深层的网络是没有价值的。（本文成文后一个月，即2016年1月，<a href="http://cacm.acm.org/news/197529-in-memoriam-marvin-minsky-1927-2016/fulltext" target="_blank" rel="noopener">Minsky在美国去世</a>。谨在本文中纪念这位著名的计算机研究专家与大拿。）</p><p><img alt="img" data-src="https://images2015.cnblogs.com/blog/673793/201512/673793-20151221213056031-351364155.jpg" class="lazyload">  </p><p>图18 Marvin Minsky</p><p>　　</p><p>　　由于Minsky的巨大影响力以及书中呈现的悲观态度，让很多学者和实验室纷纷放弃了神经网络的研究。神经网络的研究陷入了冰河期。这个时期又被称为“AI winter”。</p><p>　　接近10年以后，对于两层神经网络的研究才带来神经网络的复苏。</p><p><strong>四. 两层神经网络（多层感知器）</strong></p><p>　　<strong>1.引子</strong></p><p>　　两层神经网络是本文的重点，因为正是在这时候，神经网络开始了大范围的推广与使用。</p><p>　　Minsky说过单层神经网络无法解决异或问题。但是当增加一个计算层以后，两层神经网络不仅可以解决异或问题，而且具有非常好的非线性分类效果。不过两层神经网络的计算是一个问题，没有一个较好的解法。</p><p>　　1986年，Rumelhar和Hinton等人提出了反向传播（Backpropagation，BP）算法，解决了两层神经网络所需要的复杂计算量问题，从而带动了业界使用两层神经网络研究的热潮。目前，大量的教授神经网络的教材，都是重点介绍两层（带一个隐藏层）神经网络的内容。 </p><p>　　这时候的Hinton还很年轻，30年以后，正是他重新定义了神经网络，带来了神经网络复苏的又一春。</p><p>  <img alt="img" data-src="https://images2015.cnblogs.com/blog/673793/201512/673793-20151222162306171-1025091923.jpg" class="lazyload">  <img alt="img" data-src="https://images2015.cnblogs.com/blog/673793/201512/673793-20151222163144687-406696976.jpg" class="lazyload"></p><p>图19 David Rumelhart（左）以及 Geoffery Hinton（右）</p><p>　　<strong>2.结构</strong></p><p>　　两层神经网络除了包含一个输入层，一个输出层以外，还增加了一个中间层。此时，中间层和输出层都是计算层。我们扩展上节的单层神经网络，在右边新加一个层次（只含有一个节点）。</p><p>　　现在，我们的权值矩阵增加到了两个，我们用上标来区分不同层次之间的变量。</p><p>　　例如ax(y)代表第y层的第x个节点。z1，z2变成了a1(2)，a2(2)。下图给出了a1(2)，a2(2)的计算公式。</p><p><img alt="img" data-src="https://images2015.cnblogs.com/blog/673793/201512/673793-20151222164731249-360921014.jpg" class="lazyload"></p><p>图20 两层神经网络（中间层计算）</p><p>　　计算最终输出z的方式是利用了中间层的a1(2)，a2(2)和第二个权值矩阵计算得到的，如下图。</p><p><img alt="img" data-src="https://images2015.cnblogs.com/blog/673793/201512/673793-20151222171056156-387680541.jpg" class="lazyload"></p><p>图21 两层神经网络（输出层计算）</p><p>　　假设我们的预测目标是一个向量，那么与前面类似，只需要在“输出层”再增加节点即可。</p><p>　　我们使用向量和矩阵来表示层次中的变量。<strong>a</strong>(1)，<strong>a</strong>(2)，<strong>z</strong>是网络中传输的向量数据。<strong>W</strong>(1)和<strong>W</strong>(2)是网络的矩阵参数。如下图。</p><p><img alt="img" data-src="https://images2015.cnblogs.com/blog/673793/201512/673793-20151222171328140-1303075636.jpg" class="lazyload"></p><p>图22 两层神经网络（向量形式）</p><p>　　使用矩阵运算来表达整个计算公式的话如下：</p><p> g(<strong>W</strong>(1) * <strong>a</strong>(1)) = <strong>a</strong>(2); </p><p>g(<strong>W</strong>(2) * <strong>a</strong>(2)) = <strong>z</strong>;</p><p>　　由此可见，使用矩阵运算来表达是很简洁的，而且也不会受到节点数增多的影响（无论有多少节点参与运算，乘法两端都只有一个变量）。因此神经网络的教程中大量使用矩阵运算来描述。</p><p>　　需要说明的是，至今为止，我们对神经网络的结构图的讨论中都没有提到偏置节点（bias unit）。事实上，这些节点是默认存在的。它本质上是一个只含有存储功能，且存储值永远为1的单元。在神经网络的每个层次中，除了输出层以外，都会含有这样一个偏置单元。正如线性回归模型与逻辑回归模型中的一样。</p><p>　　偏置单元与后一层的所有节点都有连接，我们设这些参数值为向量<strong>b</strong>，称之为偏置。如下图。</p><p><img alt="img" data-src="https://images2015.cnblogs.com/blog/673793/201512/673793-20151226111144687-604911384.jpg" class="lazyload"></p><p>图23 两层神经网络（考虑偏置节点）</p><p>　　可以看出，偏置节点很好认，因为其没有输入（前一层中没有箭头指向它）。有些神经网络的结构图中会把偏置节点明显画出来，有些不会。一般情况下，我们都不会明确画出偏置节点。 </p><p>　　在考虑了偏置以后的一个神经网络的矩阵运算如下：</p><p> g(<strong>W</strong>(1) * <strong>a</strong>(1) + <strong>b</strong>(1)) = <strong>a</strong>(2); </p><p>g(<strong>W</strong>(2) * <strong>a</strong>(2) + <strong>b</strong>(2)) = <strong>z</strong>;</p><p>　　需要说明的是，在两层神经网络中，我们不再使用sgn函数作为函数g，而是使用平滑函数sigmoid作为函数g。我们把函数g也称作激活函数（active function）。</p><p>　　事实上，神经网络的本质就是通过参数与激活函数来拟合特征与目标之间的真实函数关系。初学者可能认为画神经网络的结构图是为了在程序中实现这些圆圈与线，但在一个神经网络的程序中，既没有“线”这个对象，也没有“单元”这个对象。实现一个神经网络最需要的是线性代数库。</p><p>　　<strong>3.效果</strong></p><p>　　与单层神经网络不同。理论证明，两层神经网络可以无限逼近任意连续函数。</p><p>　　这是什么意思呢？也就是说，面对复杂的非线性分类任务，两层（带一个隐藏层）神经网络可以分类的很好。</p><p>　　下面就是一个例子（此两图来自colah的<a href="http://colah.github.io/posts/2014-03-NN-Manifolds-Topology/" target="_blank" rel="noopener">博客</a>），红色的线与蓝色的线代表数据。而红色区域和蓝色区域代表由神经网络划开的区域，两者的分界线就是决策分界。</p><p><img alt="img" data-src="https://images2015.cnblogs.com/blog/673793/201512/673793-20151231073619073-461403542.png" class="lazyload"></p><p>图24 两层神经网络（决策分界）</p><p>　　</p><p>　　可以看到，这个两层神经网络的决策分界是非常平滑的曲线，而且分类的很好。有趣的是，前面已经学到过，单层网络只能做线性分类任务。而两层神经网络中的后一层也是线性分类层，应该只能做线性分类任务。为什么两个线性分类任务结合就可以做非线性分类任务？</p><p>　　我们可以把输出层的决策分界单独拿出来看一下。就是下图。</p><p><img alt="img" data-src="https://images2015.cnblogs.com/blog/673793/201512/673793-20151231074314604-2050732128.png" class="lazyload"></p><p>图25 两层神经网络（空间变换）</p><p>　　可以看到，输出层的决策分界仍然是直线。关键就是，从输入层到隐藏层时，数据发生了空间变换。也就是说，两层神经网络中，隐藏层对原始的数据进行了一个空间变换，使其可以被线性分类，然后输出层的决策分界划出了一个线性分类分界线，对其进行分类。</p><p>　　这样就导出了两层神经网络可以做非线性分类的关键–隐藏层。联想到我们一开始推导出的矩阵公式，我们知道，矩阵和向量相乘，本质上就是对向量的坐标空间进行一个变换。因此，隐藏层的参数矩阵的作用就是使得数据的原始坐标空间从线性不可分，转换成了线性可分。</p><p>　　两层神经网络通过两层的线性模型模拟了数据内真实的非线性函数。因此，多层的神经网络的本质就是复杂函数拟合。</p><p>　　下面来讨论一下隐藏层的节点数设计。在设计一个神经网络时，输入层的节点数需要与特征的维度匹配，输出层的节点数要与目标的维度匹配。而中间层的节点数，却是由设计者指定的。因此，“自由”把握在设计者的手中。但是，节点数设置的多少，却会影响到整个模型的效果。如何决定这个自由层的节点数呢？目前业界没有完善的理论来指导这个决策。一般是根据经验来设置。较好的方法就是预先设定几个可选值，通过切换这几个值来看整个模型的预测效果，选择效果最好的值作为最终选择。这种方法又叫做Grid Search（网格搜索）。</p><p>　　了解了两层神经网络的结构以后，我们就可以看懂其它类似的结构图。例如EasyPR字符识别网络架构（下图）。</p><p><img alt="img" data-src="https://images2015.cnblogs.com/blog/673793/201512/673793-20151226122337406-1923048422.jpg" class="lazyload"></p><p>图26 EasyPR字符识别网络</p><p>　　EasyPR使用了字符的图像去进行字符文字的识别。输入是120维的向量。输出是要预测的文字类别，共有65类。根据实验，我们测试了一些隐藏层数目，发现当值为40时，整个网络在测试集上的效果较好，因此选择网络的最终结构就是120，40，65。</p><p>　　<strong>4.训练</strong></p><p>　　下面简单介绍一下两层神经网络的训练。</p><p>　　在Rosenblat提出的感知器模型中，模型中的参数可以被训练，但是使用的方法较为简单，并没有使用目前机器学习中通用的方法，这导致其扩展性与适用性非常有限。从两层神经网络开始，神经网络的研究人员开始使用机器学习相关的技术进行神经网络的训练。例如用大量的数据（1000-10000左右），使用算法进行优化等等，从而使得模型训练可以获得性能与数据利用上的双重优势。</p><p>　　机器学习模型训练的目的，就是使得参数尽可能的与真实的模型逼近。具体做法是这样的。首先给所有参数赋上随机值。我们使用这些随机生成的参数值，来预测训练数据中的样本。样本的预测目标为yp，真实目标为y。那么，定义一个值loss，计算公式如下。</p><p>loss = (yp - y)2</p><p>　　这个值称之为<strong>损失</strong>（loss），我们的目标就是使对所有训练数据的损失和尽可能的小。</p><p>　　如果将先前的神经网络预测的矩阵公式带入到yp中（因为有z=yp），那么我们可以把损失写为关于参数（parameter）的函数，这个函数称之为<strong>损失函数</strong>（loss function）。下面的问题就是求：如何优化参数，能够让损失函数的值最小。</p><p>　　此时这个问题就被转化为一个优化问题。一个常用方法就是高等数学中的求导，但是这里的问题由于参数不止一个，求导后计算导数等于0的运算量很大，所以一般来说解决这个优化问题使用的是<strong>梯度下降</strong>算法。梯度下降算法每次计算参数在当前的梯度，然后让参数向着梯度的反方向前进一段距离，不断重复，直到梯度接近零时截止。一般这个时候，所有的参数恰好达到使损失函数达到一个最低值的状态。</p><p>　　在神经网络模型中，由于结构复杂，每次计算梯度的代价很大。因此还需要使用<strong>反向传播</strong>算法。反向传播算法是利用了神经网络的结构进行的计算。不一次计算所有参数的梯度，而是从后往前。首先计算输出层的梯度，然后是第二个参数矩阵的梯度，接着是中间层的梯度，再然后是第一个参数矩阵的梯度，最后是输入层的梯度。计算结束以后，所要的两个参数矩阵的梯度就都有了。</p><p>　　反向传播算法可以直观的理解为下图。梯度的计算从后往前，一层层反向传播。前缀E代表着相对导数的意思。</p><p><img alt="img" data-src="https://images2015.cnblogs.com/blog/673793/201512/673793-20151229120754198-2003498733.jpg" class="lazyload"></p><p>图27 反向传播算法</p><p>　　反向传播算法的启示是数学中的<strong>链式法则</strong>。在此需要说明的是，尽管早期神经网络的研究人员努力从生物学中得到启发，但从BP算法开始，研究者们更多地从数学上寻求问题的最优解。不再盲目模拟人脑网络是神经网络研究走向成熟的标志。正如科学家们可以从鸟类的飞行中得到启发，但没有必要一定要完全模拟鸟类的飞行方式，也能制造可以飞天的飞机。</p><p>　　优化问题只是训练中的一个部分。机器学习问题之所以称为学习问题，而不是优化问题，就是因为它不仅要求数据在训练集上求得一个较小的误差，在测试集上也要表现好。因为模型最终是要部署到没有见过训练数据的真实场景。提升模型在测试集上的预测效果的主题叫做<strong>泛化</strong>（generalization），相关方法被称作正则化（regularization）。神经网络中常用的泛化技术有<strong>权重衰减</strong>等。</p><p>　　<strong>5.影响</strong></p><p>　　两层神经网络在多个地方的应用说明了其效用与价值。10年前困扰神经网络界的异或问题被轻松解决。神经网络在这个时候，已经可以发力于语音识别，图像识别，自动驾驶等多个领域。</p><p>　　历史总是惊人的相似，神经网络的学者们再次登上了《纽约时报》的专访。人们认为神经网络可以解决许多问题。就连娱乐界都开始受到了影响，当年的《终结者》电影中的阿诺都赶时髦地说一句：我的CPU是一个神经网络处理器，一个会学习的计算机。</p><p>　　但是神经网络仍然存在若干的问题：尽管使用了BP算法，一次神经网络的训练仍然耗时太久，而且困扰训练优化的一个问题就是局部最优解问题，这使得神经网络的优化较为困难。同时，隐藏层的节点数需要调参，这使得使用不太方便，工程和研究人员对此多有抱怨。</p><p>　　90年代中期，由Vapnik等人发明的SVM（Support Vector Machines，支持向量机）算法诞生，很快就在若干个方面体现出了对比神经网络的优势：无需调参；高效；全局最优解。基于以上种种理由，SVM迅速打败了神经网络算法成为主流。</p><p><img alt="img" data-src="https://images2015.cnblogs.com/blog/673793/201512/673793-20151224114218312-1112152935.jpg" class="lazyload"></p><p>图28 Vladimir Vapnik</p><p>　　神经网络的研究再次陷入了冰河期。当时，只要你的论文中包含神经网络相关的字眼，非常容易被会议和期刊拒收，研究界那时对神经网络的不待见可想而知。</p><p><strong>五. 多层神经网络（深度学习）</strong></p><p>　　<strong>1.引子</strong>　　</p><p>　　在被人摒弃的10年中，有几个学者仍然在坚持研究。这其中的棋手就是加拿大多伦多大学的Geoffery Hinton教授。</p><p>　　2006年，Hinton在《Science》和相关期刊上发表了论文，首次提出了“深度信念网络”的概念。与传统的训练方式不同，“深度信念网络”有一个“<strong>预训练</strong>”（pre-training）的过程，这可以方便的让神经网络中的权值找到一个接近最优解的值，之后再使用“<strong>微调</strong>”(fine-tuning)技术来对整个网络进行优化训练。这两个技术的运用大幅度减少了训练多层神经网络的时间。他给多层神经网络相关的学习方法赋予了一个新名词–“<strong>深度学习</strong>”。</p><p> 　很快，深度学习在语音识别领域暂露头角。接着，2012年，深度学习技术又在图像识别领域大展拳脚。Hinton与他的学生在ImageNet竞赛中，用多层的卷积神经网络成功地对包含一千类别的一百万张图片进行了训练，取得了分类错误率15%的好成绩，这个成绩比第二名高了近11个百分点，充分证明了多层神经网络识别效果的优越性。</p><p>　　在这之后，关于深度神经网络的研究与应用不断涌现。</p><p><img alt="img" data-src="https://images2015.cnblogs.com/blog/673793/201512/673793-20151224145544656-1225191900.jpg" class="lazyload"></p><p>图29 Geoffery Hinton </p><p>　　由于篇幅原因，本文不介绍CNN（Conventional Neural Network，卷积神经网络）与RNN（Recurrent Neural Network，递归神经网络）的架构，下面我们只讨论普通的多层神经网络。</p><p>　　<strong>2.结构</strong></p><p>　　我们延续两层神经网络的方式来设计一个多层神经网络。</p><p>　　在两层神经网络的输出层后面，继续添加层次。原来的输出层变成中间层，新加的层次成为新的输出层。所以可以得到下图。</p><p><img alt="img" data-src="https://images2015.cnblogs.com/blog/673793/201512/673793-20151224204339234-1994620313.jpg" class="lazyload"></p><p>图30 多层神经网络</p><p>　　依照这样的方式不断添加，我们可以得到更多层的多层神经网络。公式推导的话其实跟两层神经网络类似，使用矩阵运算的话就仅仅是加一个公式而已。</p><p>　　在已知输入<strong>a</strong>(1)，参数<strong>W</strong>(1)，<strong>W</strong>(2)，<strong>W</strong>(3)的情况下，输出<strong>z</strong>的推导公式如下：</p><p>   g(<strong>W</strong>(1) * <strong>a</strong>(1)) = <strong>a</strong>(2); </p><p>  g(<strong>W</strong>(2) * <strong>a</strong>(2)) = <strong>a</strong>(3);</p><p>g(<strong>W</strong>(3) * <strong>a</strong>(3)) = <strong>z</strong>;</p><p>　　多层神经网络中，输出也是按照一层一层的方式来计算。从最外面的层开始，算出所有单元的值以后，再继续计算更深一层。只有当前层所有单元的值都计算完毕以后，才会算下一层。有点像计算向前不断推进的感觉。所以这个过程叫做“正向传播”。</p><p>　　下面讨论一下多层神经网络中的参数。</p><p>　　首先我们看第一张图，可以看出<strong>W</strong>(1)中有6个参数，<strong>W</strong>(2)中有4个参数，<strong>W</strong>(3)中有6个参数，所以整个神经网络中的参数有16个（这里我们不考虑偏置节点，下同）。</p><p><img alt="img" data-src="https://images2015.cnblogs.com/blog/673793/201512/673793-20151224212531484-570745053.jpg" class="lazyload"> </p><p>图31 多层神经网络（较少参数）</p><p>　　假设我们将中间层的节点数做一下调整。第一个中间层改为3个单元，第二个中间层改为4个单元。</p><p>　　经过调整以后，整个网络的参数变成了33个。</p><p><img alt="img" data-src="https://images2015.cnblogs.com/blog/673793/201512/673793-20151224213620234-1075501325.jpg" class="lazyload"> </p><p>图32 多层神经网络（较多参数）</p><p>　　虽然层数保持不变，但是第二个神经网络的参数数量却是第一个神经网络的接近两倍之多，从而带来了更好的表示（represention）能力。表示能力是多层神经网络的一个重要性质，下面会做介绍。</p><p>　　在参数一致的情况下，我们也可以获得一个“更深”的网络。</p><p><img alt="img" data-src="https://images2015.cnblogs.com/blog/673793/201512/673793-20151224213703109-813423001.jpg" class="lazyload"> </p><p>图33 多层神经网络（更深的层次）</p><p>　　上图的网络中，虽然参数数量仍然是33，但却有4个中间层，是原来层数的接近两倍。这意味着一样的参数数量，可以用更深的层次去表达。</p><p>　　<strong>3.效果</strong></p><p>　　与两层层神经网络不同。多层神经网络中的层数增加了很多。</p><p>　　增加更多的层次有什么好处？更深入的表示特征，以及更强的函数模拟能力。</p><p>　　更深入的表示特征可以这样理解，随着网络的层数增加，每一层对于前一层次的抽象表示更深入。在神经网络中，每一层神经元学习到的是前一层神经元值的更抽象的表示。例如第一个隐藏层学习到的是“边缘”的特征，第二个隐藏层学习到的是由“边缘”组成的“形状”的特征，第三个隐藏层学习到的是由“形状”组成的“图案”的特征，最后的隐藏层学习到的是由“图案”组成的“目标”的特征。通过抽取更抽象的特征来对事物进行区分，从而获得更好的区分与分类能力。</p><p>　　关于逐层特征学习的例子，可以参考下图。</p><p><img alt="img" data-src="https://images2015.cnblogs.com/blog/673793/201512/673793-20151231075103229-1126297331.png" class="lazyload"> </p><p>图34 多层神经网络（特征学习）</p><p>　　更强的函数模拟能力是由于随着层数的增加，整个网络的参数就越多。而神经网络其实本质就是模拟特征与目标之间的真实关系函数的方法，更多的参数意味着其模拟的函数可以更加的复杂，可以有更多的<strong>容量</strong>（capcity）去拟合真正的关系。</p><p>　　通过研究发现，在参数数量一样的情况下，更深的网络往往具有比浅层的网络更好的识别效率。这点也在ImageNet的多次大赛中得到了证实。从2012年起，每年获得ImageNet冠军的深度神经网络的层数逐年增加，2015年最好的方法GoogleNet是一个多达22层的神经网络。</p><p>　　在最新一届的ImageNet大赛上，目前拿到最好成绩的MSRA团队的方法使用的更是一个深达152层的网络！关于这个方法更多的信息有兴趣的可以查阅ImageNet网站。</p><p>　　<strong>4.训练</strong></p><p>　　在单层神经网络时，我们使用的激活函数是sgn函数。到了两层神经网络时，我们使用的最多的是sigmoid函数。而到了多层神经网络时，通过一系列的研究发现，ReLU函数在训练多层神经网络时，更容易收敛，并且预测性能更好。因此，目前在深度学习中，最流行的非线性函数是ReLU函数。ReLU函数不是传统的非线性函数，而是分段线性函数。其表达式非常简单，就是y=max(x,0)。简而言之，在x大于0，输出就是输入，而在x小于0时，输出就保持为0。这种函数的设计启发来自于生物神经元对于激励的线性响应，以及当低于某个阈值后就不再响应的模拟。</p><p>　　在多层神经网络中，训练的主题仍然是优化和泛化。当使用足够强的计算芯片（例如GPU图形加速卡）时，梯度下降算法以及反向传播算法在多层神经网络中的训练中仍然工作的很好。目前学术界主要的研究既在于开发新的算法，也在于对这两个算法进行不断的优化，例如，增加了一种带动量因子（momentum）的梯度下降算法。　</p><p>　　在深度学习中，泛化技术变的比以往更加的重要。这主要是因为神经网络的层数增加了，参数也增加了，表示能力大幅度增强，很容易出现<strong>过拟合现象</strong>。因此正则化技术就显得十分重要。目前，Dropout技术，以及数据扩容（Data-Augmentation）技术是目前使用的最多的正则化技术。</p><p>　　<strong>5.影响</strong></p><p>　　目前，深度神经网络在人工智能界占据统治地位。但凡有关人工智能的产业报道，必然离不开深度学习。神经网络界当下的四位引领者除了前文所说的Ng，Hinton以外，还有CNN的发明人Yann Lecun，以及《Deep Learning》的作者Bengio。</p><p>　　前段时间一直对人工智能持谨慎态度的马斯克，搞了一个<a href="http://news.cnblogs.com/n/534878/" target="_blank" rel="noopener">OpenAI项目</a>，邀请Bengio作为高级顾问。马斯克认为，人工智能技术不应该掌握在大公司如Google，Facebook的手里，更应该作为一种开放技术，让所有人都可以参与研究。马斯克的这种精神值得让人敬佩。</p><p><img alt="img" data-src="https://images2015.cnblogs.com/blog/673793/201512/673793-20151228131815214-368589404.png" class="lazyload">  <img alt="img" data-src="https://images2015.cnblogs.com/blog/673793/201512/673793-20151228131718948-1881649621.png" class="lazyload"></p><p>图35 Yann LeCun（左）和 Yoshua Bengio（右）</p><p>　　多层神经网络的研究仍在进行中。现在最为火热的研究技术包括RNN，LSTM等，研究方向则是图像理解方面。图像理解技术是给计算机一幅图片，让它用语言来表达这幅图片的意思。ImageNet竞赛也在不断召开，有更多的方法涌现出来，刷新以往的正确率。</p><p><strong>六. 回顾</strong></p><p>　　<strong>1.影响</strong>　　</p><p>　　我们回顾一下神经网络发展的历程。神经网络的发展历史曲折荡漾，既有被人捧上天的时刻，也有摔落在街头无人问津的时段，中间经历了数次大起大落。</p><p>　　从单层神经网络（感知器）开始，到包含一个隐藏层的两层神经网络，再到多层的深度神经网络，一共有三次兴起过程。详见下图。</p><p><img alt="img" data-src="https://images2015.cnblogs.com/blog/673793/201512/673793-20151228170208120-1856567090.jpg" class="lazyload"> </p><p>图36 三起三落的神经网络</p><p>　　上图中的顶点与谷底可以看作神经网络发展的高峰与低谷。图中的横轴是时间，以年为单位。纵轴是一个神经网络影响力的示意表示。如果把1949年Hebb模型提出到1958年的感知机诞生这个10年视为落下（没有兴起）的话，那么神经网络算是经历了“三起三落”这样一个过程，跟“小平”同志类似。俗话说，天将降大任于斯人也，必先苦其心志，劳其筋骨。经历过如此多波折的神经网络能够在现阶段取得成功也可以被看做是磨砺的积累吧。</p><p>　　历史最大的好处是可以给现在做参考。科学的研究呈现螺旋形上升的过程，不可能一帆风顺。同时，这也给现在过分热衷深度学习与人工智能的人敲响警钟，因为这不是第一次人们因为神经网络而疯狂了。1958年到1969年，以及1985年到1995，这两个十年间人们对于神经网络以及人工智能的期待并不现在低，可结果如何大家也能看的很清楚。</p><p>　　因此，冷静才是对待目前深度学习热潮的最好办法。如果因为深度学习火热，或者可以有“钱景”就一窝蜂的涌入，那么最终的受害人只能是自己。神经网络界已经两次有被人们捧上天了的境况，相信也对于捧得越高，摔得越惨这句话深有体会。因此，神经网络界的学者也必须给这股热潮浇上一盆水，不要让媒体以及投资家们过分的高看这门技术。很有可能，三十年河东，三十年河西，在几年后，神经网络就再次陷入谷底。根据上图的历史曲线图，这是很有可能的。</p><p>　　<strong>2.效果</strong>　　</p><p>　　下面说一下神经网络为什么能这么火热？简而言之，就是其学习效果的强大。随着神经网络的发展，其表示性能越来越强。</p><p>　　从单层神经网络，到两层神经网络，再到多层神经网络，下图说明了，随着网络层数的增加，以及激活函数的调整，神经网络所能拟合的决策分界平面的能力。</p><p><img alt="img" data-src="https://images2015.cnblogs.com/blog/673793/201512/673793-20151228134016120-1091351096.jpg" class="lazyload"> </p><p>图37 表示能力不断增强</p><p>　　可以看出，随着层数增加，其非线性分界拟合能力不断增强。图中的分界线并不代表真实训练出的效果，更多的是示意效果。</p><p>　　神经网络的研究与应用之所以能够不断地火热发展下去，与其强大的函数拟合能力是分不开关系的。</p><p>　　<strong>3.外因</strong>　　</p><p>　　当然，光有强大的内在能力，并不一定能成功。一个成功的技术与方法，不仅需要内因的作用，还需要时势与环境的配合。神经网络的发展背后的外在原因可以被总结为：更强的计算性能，更多的数据，以及更好的训练方法。只有满足这些条件时，神经网络的函数拟合能力才能得已体现，见下图。</p><p><img alt="img" data-src="https://images2015.cnblogs.com/blog/673793/201512/673793-20151228170149135-2107087462.jpg" class="lazyload"> </p><p>图38 发展的外在原因</p><p>　　之所以在单层神经网络年代，Rosenblat无法制作一个双层分类器，就在于当时的计算性能不足，Minsky也以此来打压神经网络。但是Minsky没有料到，仅仅10年以后，计算机CPU的快速发展已经使得我们可以做两层神经网络的训练，并且还有快速的学习算法BP。</p><p>　　但是在两层神经网络快速流行的年代。更高层的神经网络由于计算性能的问题，以及一些计算方法的问题，其优势无法得到体现。直到2012年，研究人员发现，用于高性能计算的图形加速卡（GPU）可以极佳地匹配神经网络训练所需要的要求：高并行性，高存储，没有太多的控制需求，配合预训练等算法，神经网络才得以大放光彩。</p><p>　　互联网时代，大量的数据被收集整理，更好的训练方法不断被发现。所有这一切都满足了多层神经网络发挥能力的条件。</p><p>　　“时势造英雄”，正如Hinton在2006年的论文里说道的</p><p>　　“<strong>… provided that computers were fast enough, data sets were big enough, and the initial weights were close enough to a good solution. All three conditions are now satisfied.</strong>”，</p><p>　　外在条件的满足也是神经网络从神经元得以发展到目前的深度神经网络的重要因素。</p><p>　　除此以外，一门技术的发扬没有“伯乐”也是不行的。在神经网络漫长的历史中，正是由于许多研究人员的锲而不舍，不断钻研，才能有了现在的成就。前期的Rosenblat，Rumelhart没有见证到神经网络如今的流行与地位。但是在那个时代，他们为神经网络的发展所打下的基础，却会永远流传下去，不会退色。</p><p><strong>七. 展望</strong></p><p>　　<strong><em>\</em>1.量子计算**</strong></p><p>　　回到我们对神经网络历史的讨论，根据历史趋势图来看，神经网络以及深度学习会不会像以往一样再次陷入谷底？作者认为，这个过程可能取决于量子计算机的发展。</p><p>　　根据一些最近的研究发现，人脑内部进行的计算可能是类似于量子计算形态的东西。而且目前已知的最大神经网络跟人脑的神经元数量相比，仍然显得非常小，仅不及1%左右。所以未来真正想实现人脑神经网络的模拟，可能需要借助量子计算的强大计算能力。</p><p>　　各大研究组也已经认识到了量子计算的重要性。谷歌就在开展量子计算机D-wave的研究，希望用量子计算来进行机器学习，并且在前段时间有了突破性的<a href="http://news.cnblogs.com/n/535307/" target="_blank" rel="noopener">进展</a>。国内方面，阿里和中科院合作成立了<a href="http://news.sciencenet.cn/htmlnews/2015/7/323963.shtm" target="_blank" rel="noopener">量子计算实验室</a>，意图进行量子计算的研究。</p><p>　　如果量子计算发展不力，仍然需要数十年才能使我们的计算能力得以突飞猛进的发展，那么缺少了强大计算能力的神经网络可能会无法一帆风顺的发展下去。这种情况可以类比为80-90年时期神经网络因为计算能力的限制而被低估与忽视。假设量子计算机真的能够与神经网络结合，并且助力真正的人工智能技术的诞生，而且量子计算机发展需要10年的话，那么神经网络可能还有10年的发展期。直到那时期以后，神经网络才能真正接近实现AI这一目标。</p><p><img alt="img" data-src="https://images2015.cnblogs.com/blog/673793/201512/673793-20151227175114031-277810977.jpg" class="lazyload"> </p><p>图39 量子计算</p><p>　　<strong><em>\</em>2.人工智能**</strong></p><p>　　最后，作者想简单地谈谈对目前人工智能的看法。虽然现在人工智能非常火热，但是距离真正的人工智能还有很大的距离。就拿计算机视觉方向来说，面对稍微复杂一些的场景，以及易于混淆的图像，计算机就可能难以识别。因此，这个方向还有很多的工作要做。</p><p>　　就普通人看来，这么辛苦的做各种实验，以及投入大量的人力就是为了实现一些不及孩童能力的视觉能力，未免有些不值。但是这只是第一步。虽然计算机需要很大的运算量才能完成一个普通人简单能完成的识图工作，但计算机最大的优势在于并行化与批量推广能力。使用计算机以后，我们可以很轻易地将以前需要人眼去判断的工作交给计算机做，而且几乎没有任何的推广成本。这就具有很大的价值。正如火车刚诞生的时候，有人嘲笑它又笨又重，速度还没有马快。但是很快规模化推广的火车就替代了马车的使用。人工智能也是如此。这也是为什么目前世界上各著名公司以及政府都对此热衷的原因。</p><p>　　目前看来，神经网络要想实现人工智能还有很多的路要走，但方向至少是正确的，下面就要看后来者的不断努力了。</p><p><img alt="img" data-src="https://images2015.cnblogs.com/blog/673793/201512/673793-20151231172950167-1599238944.jpg" class="lazyload"></p><p>图40 人工智能</p><p><strong>八 总结</strong></p><p>　　本文回顾了神经网络的发展历史，从神经元开始，历经单层神经网络，两层神经网络，直到多层神经网络。在历史介绍中穿插讲解神经网络的结构，分类效果以及训练方法等。本文说明了神经网络内部实际上就是矩阵计算，在程序中的实现没有“点”和“线”的对象。本文说明了神经网络强大预测能力的根本，就是多层的神经网络可以无限逼近真实的对应函数，从而模拟数据之间的真实关系。除此之外，本文回顾了神经网络发展的历程，分析了神经网络发展的外在原因，包括计算能力的增强，数据的增多，以及方法的创新等。最后，本文对神经网络的未来进行了展望，包括量子计算与神经网络结合的可能性，以及探讨未来人工智能发展的前景与价值。</p><p><strong>九. 后记</strong></p><p>　　本篇文章可以视为作者一年来对神经网络的理解与总结，包括实验的体会，书籍的阅读，以及思考的火花等。神经网络虽然重要，但学习并不容易。这主要是由于其结构图较为难懂，以及历史发展的原因，导致概念容易混淆，一些介绍的博客与网站内容新旧不齐。本篇文章着眼于这些问题，没有太多的数学推导，意图以一种简单的，直观的方式对神经网络进行讲解。在2015年最后一天终于写完。希望本文可以对各位有所帮助。</p><p>　　<strong>作者很感谢能够阅读到这里的读者。如果看完觉得好的话，还请轻轻点一下赞，你们的鼓励就是作者继续行文的动力。本文的备注部分是一些对神经网络学习的建议，供补充阅读与参考。</strong></p><p>　　</p><p>　　<em>目前为止，<a href="https://github.com/liuruoze/EasyPR" target="_blank" rel="noopener">EasyPR</a>的1.4版已经将神经网络（ANN）训练的模块加以开放，开发者们可以使用这个模块来进行自己的字符模型的训练。有兴趣的可以<a href="https://github.com/liuruoze/EasyPR" target="_blank" rel="noopener">下载</a>。</em></p><p><strong>十. 备注</strong></p><p>　　神经网络虽然很重要，但是对于神经网络的学习，却并不容易。这些学习困难主要来自以下三个方面：概念，类别，教程。下面简单说明这三点。</p><p>　　<strong>1.概念</strong></p><p>　　对于一门技术的学习而言，首先最重要的是弄清概念。只有将概念理解清楚，才能顺畅的进行后面的学习。由于神经网络漫长的发展历史，经常会有一些概念容易混淆，让人学习中产生困惑。这里面包括历史的术语，不一致的说法，以及被遗忘的研究等。　</p><p>　　<strong>历史的术语</strong></p><p>　　这个的代表就是多层感知器（MLP）这个术语。起初看文献时很难理解的一个问题就是，为什么神经网络又有另一个名称：MLP。其实MLP（Multi-Layer Perceptron）的名称起源于50-60年代的感知器（Perceptron）。由于我们在感知器之上又增加了一个计算层，因此称为多层感知器。值得注意的是，虽然叫“多层”，MLP一般都指的是两层（带一个隐藏层的）神经网络。</p><p>　　MLP这个术语属于历史遗留的产物。现在我们一般就说神经网络，以及深度神经网络。前者代表带一个隐藏层的两层神经网络，也是EasyPR目前使用的识别网络，后者指深度学习的网络。</p><p>　　*<em>不一致的说法<br>*</em></p><p>　　这个最明显的代表就是损失函数loss function，这个还有两个说法是跟它完全一致的意思，分别是残差函数error function，以及代价函数cost function。loss function是目前深度学习里用的较多的一种说法，caffe里也是这么叫的。cost function则是Ng在coursera教学视频里用到的统一说法。这三者都是同一个意思，都是优化问题所需要求解的方程。虽然在使用的时候不做规定，但是在听到各种讲解时要心里明白。</p><p>　　再来就是权重weight和参数parameter的说法，神经网络界由于以前的惯例，一般会将训练得到的参数称之为权重，而不像其他机器学习方法就称之为参数。这个需要记住就好。不过在目前的使用惯例中，也有这样一种规定。那就是非偏置节点连接上的值称之为权重，而偏置节点上的值称之为偏置，两者统一起来称之为参数。</p><p>　　另外一个同义词就是激活函数active function和转移函数transfer function了。同样，他们代表一个意思，都是叠加的非线性函数的说法。</p><p>　　*<em>被遗忘的研究<br>*</em></p><p>　　由于神经网络发展历史已经有70年的漫长历史，因此在研究过程中，必然有一些研究分支属于被遗忘阶段。这里面包括各种不同的网络，例如SOM（Self-Organizing Map，自组织特征映射网络），SNN（Synergetic Neural Network，协同神经网络），ART（Adaptive Resonance Theory，自适应共振理论网络）等等。所以看历史文献时会看到许多没见过的概念与名词。</p><p>　　有些历史网络甚至会重新成为新的研究热点，例如RNN与LSTM就是80年代左右开始的研究，目前已经是深度学习研究中的重要一门技术，在语音与文字识别中有很好的效果。　</p><p>　　对于这些易于混淆以及弄错的概念，务必需要多方参考文献，理清上下文，这样才不会在学习与阅读过程中迷糊。</p><p>　　<strong>2.类别</strong></p><p>　　下面谈一下关于神经网络中的不同类别。</p><p>　　其实本文的名字“神经网络浅讲”并不合适，因为本文并不是讲的是“神经网络”的内容，而是其中的一个子类，也是目前最常说的<strong>前馈神经网络</strong>。根据下图的分类可以看出。</p><p><img alt="img" data-src="https://images2015.cnblogs.com/blog/673793/201512/673793-20151227190543499-2614280.jpg" class="lazyload"> </p><p>图41 神经网络的类别</p><p>　　神经网络其实是一个非常宽泛的称呼，它包括两类，一类是用计算机的方式去模拟人脑，这就是我们常说的ANN（人工神经网络），另一类是研究生物学上的神经网络，又叫生物神经网络。对于我们计算机人士而言，肯定是研究前者。</p><p>　　在人工神经网络之中，又分为前馈神经网络和反馈神经网络这两种。那么它们两者的区别是什么呢？这个其实在于它们的结构图。我们可以把结构图看作是一个有向图。其中神经元代表顶点，连接代表有向边。对于前馈神经网络中，这个有向图是没有回路的。你可以仔细观察本文中出现的所有神经网络的结构图，确认一下。而对于反馈神经网络中，结构图的有向图是有回路的。反馈神经网络也是一类重要的神经网络。其中Hopfield网络就是反馈神经网络。深度学习中的RNN也属于一种反馈神经网络。</p><p>　　具体到前馈神经网络中，就有了本文中所分别描述的三个网络：单层神经网络，双层神经网络，以及多层神经网络。深度学习中的CNN属于一种特殊的多层神经网络。另外，在一些Blog中和文献中看到的BP神经网络是什么？其实它们就是使用了反向传播BP算法的两层前馈神经网络。也是最普遍的一种两层神经网络。</p><p>　　通过以上分析可以看出，神经网络这种说法其实是非常广义的，具体在文章中说的是什么网络，需要根据文中的内容加以区分。</p><p>　　<strong>3.教程</strong></p><p>　　如何更好的学习神经网络，认真的学习一门课程或者看一本著作都是很有必要的。</p><p>　　说到网络教程的话，这里必须说一下Ng的机器学习课程。对于一个初学者而言，Ng的课程视频是非常有帮助的。Ng一共开设过两门机器学习公开课程：一个是2003年在Standford开设的，面向全球的学生，这个视频现在可以在网易公开课上找到；另一个是2010年专门为Coursera上的用户开设的，需要登陆Coursera上才能学习。</p><p>　　但是，需要注意点是，这两个课程对待神经网络的态度有点不同。早些的课程一共有20节课，Ng花了若干节课去专门讲SVM以及SVM的推导，而当时的神经网络，仅仅放了几段视频，花了大概不到20分钟（一节课60分钟左右）。而到了后来的课程时，总共10节的课程中，Ng给了完整的两节给神经网络，详细介绍了神经网络的反向传播算法。同时给SVM只有一节课，并且没有再讲SVM的推导过程。下面两张图分别是Ng介绍神经网络的开篇，可以大致看出一些端倪。</p><p><img alt="img" data-src="https://images2015.cnblogs.com/blog/673793/201512/673793-20151230155838057-551533589.jpg" class="lazyload"> </p><p>图42 Ng与神经网络</p><p>　　为什么Ng对待神经网络的反应前后相差那么大？事实上就是深度学习的原因。Ng实践了深度学习的效果，认识到深度学习的基础–神经网络的重要性。这就是他在后面重点介绍神经网络的原因。总之，对于神经网络的学习而言，我更推荐Coursera上的。因为在那个时候，Ng才是真正的把神经网络作为一门重要的机器学习方法去传授。你可以从他上课的态度中感受到他的重视，以及他希望你能学好的期望。</p><p>本人的所有图片和文字摘自博客园  原文地址 <a href="https://www.cnblogs.com/subconscious/p/5058741.html" target="_blank" rel="noopener">https://www.cnblogs.com/subconscious/p/5058741.html</a></p>]]></content>
      
      
      <categories>
          
          <category> 人工智能 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>人工智能学习整理_02Day</title>
      <link href="/2020/05/10/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E5%AD%A6%E4%B9%A0%E6%95%B4%E7%90%86_02Day(3%E5%A4%A7%E5%9F%BA%E7%A1%80%E5%BA%93)/"/>
      <url>/2020/05/10/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E5%AD%A6%E4%B9%A0%E6%95%B4%E7%90%86_02Day(3%E5%A4%A7%E5%9F%BA%E7%A1%80%E5%BA%93)/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h5 id="学习机器学习常用的三个基础包-numpy，pandas，matplotlib"><a href="#学习机器学习常用的三个基础包-numpy，pandas，matplotlib" class="headerlink" title="学习机器学习常用的三个基础包 numpy，pandas，matplotlib"></a>学习机器学习常用的三个基础包 numpy，pandas，matplotlib</h5><p>numpy用来做矩阵计算</p><p>pandas用来做数据预处理</p><p>matplotlib用来绘图</p><p>学习资源上传至百度网盘：</p><p><code>链接:https://pan.baidu.com/s/1LI4OwWNT9crAXn8Q4tI1Aw  密码:v5ds</code></p><p><img alt="截屏2020-06-15下午8.14.14" data-src="https://tva1.sinaimg.cn/large/007S8ZIlly1gft8umczpgj30rq0bcdhy.jpg" class="lazyload"></p>]]></content>
      
      
      <categories>
          
          <category> 人工智能 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>人工智能学习整理_01Day</title>
      <link href="/2020/05/09/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E5%AD%A6%E4%B9%A0%E6%95%B4%E7%90%86_01Day(%E7%8E%AF%E5%A2%83%E5%8F%8A%E5%B7%A5%E5%85%B7)/"/>
      <url>/2020/05/09/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E5%AD%A6%E4%B9%A0%E6%95%B4%E7%90%86_01Day(%E7%8E%AF%E5%A2%83%E5%8F%8A%E5%B7%A5%E5%85%B7)/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h5 id="安装学习需要使用到的工具-anaconda"><a href="#安装学习需要使用到的工具-anaconda" class="headerlink" title="安装学习需要使用到的工具 anaconda"></a>安装学习需要使用到的工具 anaconda</h5><p>Anaconda（<a href="https://link.jianshu.com/?t=https%3A%2F%2Fwww.anaconda.com%2Fdownload%2F%23macos" target="_blank" rel="noopener">官方网站</a>）可以便捷获取包且对包能够进行管理，同时对环境可以统一管理的发行版本。Anaconda包含了conda、Python在内的超过180个科学包及其依赖项。</p><h5 id="学习jupyter的使用"><a href="#学习jupyter的使用" class="headerlink" title="学习jupyter的使用"></a>学习jupyter的使用</h5><p>Jupyter是一种交互式的编程工具，生成的文件是ipynb后缀的文件。它最大的优势是可以将编程的运行过程记录下来。所以被广泛应用在教学演示中。</p><h6 id="Jupyter在使用中的一些技巧："><a href="#Jupyter在使用中的一些技巧：" class="headerlink" title="Jupyter在使用中的一些技巧："></a>Jupyter在使用中的一些技巧：</h6><p>1、启动Jupyter</p><p>​      我们可以新建一个文件夹、叫做abc，然后把编程的jupyter代码文件放到这个abc文件内，我们可以从abc文件夹启动Jupyter。方法是：打开abc文件，然后按住shift不放，然后空白处鼠标右击，选择“在此处打开XXX”，然后会弹出一个cmd窗口，输入：ipython notebook 回车即可打开jupyter。如下图所示：</p><p><img alt="图片1" data-src="https://tva1.sinaimg.cn/large/007S8ZIlly1gft03vaytij30d809k3yv.jpg" class="lazyload"></p><p><img alt="图片2" data-src="https://tva1.sinaimg.cn/large/007S8ZIlly1gft03zf5jxj30gf08l747.jpg" class="lazyload"></p><p>2、jupyter的常规操作：</p><p>2.1 新建一个ipynb文件</p><p><img alt="图片3" data-src="https://tva1.sinaimg.cn/large/007S8ZIlly1gft07ixdnoj30zl07d3yp.jpg" class="lazyload"></p><p>2.2 ipynb文件的重命名</p><p><img alt="图片4" data-src="https://tva1.sinaimg.cn/large/007S8ZIlly1gft08502bij30wx07674s.jpg" class="lazyload"></p><p>2.3 代码编写和运行</p><p><img alt="图片5" data-src="https://tva1.sinaimg.cn/large/007S8ZIlly1gft090szgwj30yf08hwev.jpg" class="lazyload"></p><p>关于运行，点击2即可，也可以用快捷键 shift+回车 或者 ctrl+回车。区别是前者运行后，会新建一个cell，后者仅仅是运行。手动新建cell点击4即可。数字编号（图示3）表示运行的次数，无实际意义（注意：如果是※，表示当前cell还没有运行，或者正在运行，需要等待其变为数字）</p><p>2.4 代码提示</p><p>代码提示快捷键是tab</p><p><img alt="图片6" data-src="https://tva1.sinaimg.cn/large/007S8ZIlly1gft0emftvhj30yn04rglf.jpg" class="lazyload"></p><p>代码补齐是tab键  查看函数定义是 shift+tab</p><p>2.5 显示行号</p><p><img alt="图片8" data-src="https://tva1.sinaimg.cn/large/007S8ZIlly1gft0h8n5hnj30lq05274d.jpg" class="lazyload"></p><p><img alt="图片9" data-src="https://tva1.sinaimg.cn/large/007S8ZIlly1gft0he8hszj30x808fjs2.jpg" class="lazyload"></p><p>2.6 保存为 .py 文件</p><p><img alt="图片10" data-src="https://tva1.sinaimg.cn/large/007S8ZIlly1gft0iub3v2j30yy0e975b.jpg" class="lazyload"></p>]]></content>
      
      
      <categories>
          
          <category> 人工智能 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>iOS13适配深色模式</title>
      <link href="/2020/02/03/iOS13%E9%80%82%E9%85%8D%E6%B7%B1%E8%89%B2%E6%A8%A1%E5%BC%8F/"/>
      <url>/2020/02/03/iOS13%E9%80%82%E9%85%8D%E6%B7%B1%E8%89%B2%E6%A8%A1%E5%BC%8F/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>前段时间收到客户的反应 说试用中的App 有的界面UI有问题,  之前都是真机调试过的, 心里也很诧异, 然后用自己的手机试了下, 果然有的文本输入框的文字不显示, 有的列表背景颜色是黑色, 我就有点迷糊, 怎么会突然出现这种问题, 我首先想到的是修改代码, 给个颜色看看显示不, 然后相继的将有问题的位置都添加了Color, 一切正常, 但是这样显然没有解决隐患啊,  然后我又想到了是不是iOS13系统的原因, 因为我手机也是最近才升级了, 并且我使用了深色模式, 问题应该出现在这里, 果然我在手机设置里设置为浅色模式, 之前出现的问题就没了, 唉… 怎么可以这样,最后的解决办法 在 info.plist文件内添加<code>User Interface Style</code> 并且设置值为 <code>Light</code></p><p>就会轻松解决上面的问题, 也不用担心我哪里漏掉这种显示Bug</p>]]></content>
      
      
      <categories>
          
          <category> iOS </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Mysql5.7.26离线安装教程</title>
      <link href="/2019/12/10/CentOS7.4%20Mysql5.7.26%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/"/>
      <url>/2019/12/10/CentOS7.4%20Mysql5.7.26%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h5 id="mysql离线安装包下载地址："><a href="#mysql离线安装包下载地址：" class="headerlink" title="mysql离线安装包下载地址："></a>mysql离线安装包下载地址：</h5><p><code>https://downloads.mysql.com/archives/community/</code></p><p>查看当前系统内核：</p><p><code>uname -a</code></p><p><img alt="Snip20200612_2" data-src="https://tva1.sinaimg.cn/large/007S8ZIlly1gfpc68wqr8j30fm01wjrq.jpg" class="lazyload"></p><h5 id="下载对应的mysql离线安装包："><a href="#下载对应的mysql离线安装包：" class="headerlink" title="下载对应的mysql离线安装包："></a>下载对应的mysql离线安装包：</h5><p><img alt="Snip20200612_4" data-src="https://tva1.sinaimg.cn/large/007S8ZIlly1gfpc12777ij30z40d8q5x.jpg" class="lazyload"></p><h5 id="卸载Centos7-4自带的Mariadb数据库："><a href="#卸载Centos7-4自带的Mariadb数据库：" class="headerlink" title="卸载Centos7.4自带的Mariadb数据库："></a>卸载Centos7.4自带的Mariadb数据库：</h5><p><code>rpm -qa|grep mariadb</code></p><p><code>rpm -e --nodeps mariadb-libs-5.5.64-1.el7.x86_64</code></p><p><img alt="Snip20200612_5" data-src="https://tva1.sinaimg.cn/large/007S8ZIlly1gfpfhmgcmzj30fv02874p.jpg" class="lazyload"></p><h5 id="删除-etc下my-cnf配置文件（如果存在）、检查mysql文件是否存在"><a href="#删除-etc下my-cnf配置文件（如果存在）、检查mysql文件是否存在" class="headerlink" title="删除 /etc下my.cnf配置文件（如果存在）、检查mysql文件是否存在"></a>删除 /etc下my.cnf配置文件（如果存在）、检查mysql文件是否存在</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@hecs-x-medium-2-linux-20200612090121 ~]# rm -rf /etc/my.cnf</span><br><span class="line">[root@hecs-x-medium-2-linux-20200612090121 ~]# rpm -qa | grep mysql</span><br></pre></td></tr></table></figure><h5 id="检查mysql用户组、用户是否存在、不存在则创建"><a href="#检查mysql用户组、用户是否存在、不存在则创建" class="headerlink" title="检查mysql用户组、用户是否存在、不存在则创建"></a>检查mysql用户组、用户是否存在、不存在则创建</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@hecs-x-medium-2-linux-20200612090121 ~]# cat /etc/group | grep mysql</span><br><span class="line">[root@hecs-x-medium-2-linux-20200612090121 ~]# cat /etc/passwd | grep mysql</span><br><span class="line">[root@hecs-x-medium-2-linux-20200612090121 ~]# groupadd mysql</span><br><span class="line">[root@hecs-x-medium-2-linux-20200612090121 ~]# useradd -g mysql mysql</span><br></pre></td></tr></table></figure><h5 id="通过FTP文件传输工具将之前下载好的离线安装包传输到服务器"><a href="#通过FTP文件传输工具将之前下载好的离线安装包传输到服务器" class="headerlink" title="通过FTP文件传输工具将之前下载好的离线安装包传输到服务器"></a>通过FTP文件传输工具将之前下载好的离线安装包传输到服务器</h5><p>在服务器创建文件夹路径  <code>/usr/local/mysql5.7</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@hecs-x-medium-2-linux-20200612090121 ~]# mkdir -p /usr/local/mysql5.7</span><br></pre></td></tr></table></figure><p>文件传输到此文件夹内（我使用的是File Zilla）</p><p><img alt="Snip20200612_7" data-src="https://tva1.sinaimg.cn/large/007S8ZIlly1gfpgcn8uevj30fi08it9a.jpg" class="lazyload"></p><h5 id="解压到mysql5-7文件夹内"><a href="#解压到mysql5-7文件夹内" class="headerlink" title="解压到mysql5.7文件夹内"></a>解压到mysql5.7文件夹内</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@hecs-x-medium-2-linux-20200612090121 mysql5.7]# tar -zxf mysql-5.7.26-linux-glibc2.12-x86_64.tar.gz</span><br></pre></td></tr></table></figure><h5 id="将安装包移动到资源文件夹内"><a href="#将安装包移动到资源文件夹内" class="headerlink" title="将安装包移动到资源文件夹内"></a>将安装包移动到资源文件夹内</h5><p>创建个存放安装包的文件夹 <code>mkdir -p /usr/local/src</code></p><p>移动安装包 <code>mv /usr/local/mysql5.7/mysql-5.7.26-linux-glibc2.12-x86_64.tar.gz /usr/local/src/</code></p><p>将解压得到的文件夹内的文件移动到上一级目录 也就是mysql5.7文件夹内</p><p><code>mv * ../</code></p><p>删除掉空文件夹</p><p><code>rm -rf mysql-5.7.26-linux-glibc2.12-x86_64/</code></p><p>在mysql5.7文件夹内创建 data log文件夹 并且在log文件夹内创建log日志文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mkdir /usr/local/mysql5.7/data</span><br><span class="line">mkdir /usr/local/mysql5.7/log</span><br><span class="line">touch /usr/local/mysql5.7/log/mysqld.log</span><br></pre></td></tr></table></figure><p>开放mysql5.7文件夹权限</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">chown -R mysql /usr/local/mysql5.7/</span><br><span class="line">chgrp -R mysql /usr/local/mysql5.7/</span><br></pre></td></tr></table></figure><h5 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h5><p>初始化数据库：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/local/mysql5.7/bin/mysql_install_db --user=mysql --basedir=/usr/local/mysql5.7/ --datadir=/usr/local/mysql5.7/data/</span><br></pre></td></tr></table></figure><p>创建配置文件my.cnf</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/my.cnf</span><br><span class="line">chown 777 /etc/my.cnf</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">[mysqld]</span><br><span class="line">basedir=/usr/local/mysql5.7/</span><br><span class="line">datadir=/usr/local/mysql5.7/data</span><br><span class="line">socket=/tmp/mysql.sock</span><br><span class="line">user=mysql</span><br><span class="line">symbolic-links=0</span><br><span class="line">lower_case_table_names=1</span><br><span class="line"><span class="meta">#</span><span class="bash"> 允许最大连接数</span></span><br><span class="line">max_connections=200</span><br><span class="line"><span class="meta">#</span><span class="bash"> 服务端使用的字符集默认为8比特编码的latin1字符集</span></span><br><span class="line">character-set-server=utf8</span><br><span class="line"><span class="meta">#</span><span class="bash"> 创建新表时将使用的默认存储引擎</span></span><br><span class="line">default-storage-engine=INNODB</span><br><span class="line">max_allowed_packet=16M</span><br><span class="line"> </span><br><span class="line">[client]</span><br><span class="line">port=3306</span><br><span class="line"> </span><br><span class="line">[mysqld_safe]</span><br><span class="line">log-error=/usr/local/mysql5.7/log/mysqld.log</span><br></pre></td></tr></table></figure><h5 id="启动mysql服务"><a href="#启动mysql服务" class="headerlink" title="启动mysql服务"></a>启动mysql服务</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cp /usr/local/mysql5.7/support-files/mysql.server /etc/init.d/mysqld</span><br><span class="line">chmod +x /etc/init.d/mysqld</span><br><span class="line">service mysqld start</span><br></pre></td></tr></table></figure><h5 id="添加环境变量"><a href="#添加环境变量" class="headerlink" title="添加环境变量"></a>添加环境变量</h5><p><code>vi /etc/profile</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> MYSQL</span></span><br><span class="line">export MYSQL_HOME="/usr/local/mysql5.7/"</span><br><span class="line">export PATH="$PATH:$MYSQL_HOME/bin"</span><br></pre></td></tr></table></figure><p>使环境变量生效</p><p><code>source /etc/profile</code></p><h5 id="获取初始密码，更改密码，-允许远程访问"><a href="#获取初始密码，更改密码，-允许远程访问" class="headerlink" title="获取初始密码，更改密码， 允许远程访问"></a>获取初始密码，更改密码， 允许远程访问</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@hecs-x-medium-2-linux-20200612090121 data]# cat /root/.mysql_secret</span><br><span class="line"><span class="meta">#</span><span class="bash"> Password <span class="built_in">set</span> <span class="keyword">for</span> user <span class="string">'root@localhost'</span> at 2020-06-12 14:36:41 </span></span><br><span class="line">xodl!;hIMEuu</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">[root@hecs-x-medium-2-linux-20200612090121 data]# mysql -uroot -p</span><br><span class="line">Enter password: </span><br><span class="line">Welcome to the MySQL monitor.  Commands end with ; or \g.</span><br><span class="line">Your MySQL connection id is 2</span><br><span class="line">Server version: 5.7.26</span><br><span class="line"></span><br><span class="line">Copyright (c) 2000, 2019, Oracle and/or its affiliates. All rights reserved.</span><br><span class="line"></span><br><span class="line">Oracle is a registered trademark of Oracle Corporation and/or its</span><br><span class="line">affiliates. Other names may be trademarks of their respective</span><br><span class="line">owners.</span><br><span class="line"></span><br><span class="line">Type 'help;' or '\h' for help. Type '\c' to clear the current input statement.</span><br><span class="line"></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> <span class="built_in">set</span> PASSWORD = PASSWORD(<span class="string">'123456'</span>);</span></span><br><span class="line">Query OK, 0 rows affected, 1 warning (0.00 sec)</span><br><span class="line"></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> flush privileges;</span></span><br><span class="line">Query OK, 0 rows affected (0.01 sec)</span><br></pre></td></tr></table></figure><p>允许远程访问</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> use mysql</span></span><br><span class="line">Reading table information for completion of table and column names</span><br><span class="line">You can turn off this feature to get a quicker startup with -A</span><br><span class="line"></span><br><span class="line">Database changed</span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> select host,user from user;</span></span><br><span class="line">+-----------+---------------+</span><br><span class="line">| host      | user          |</span><br><span class="line">+-----------+---------------+</span><br><span class="line">| localhost | mysql.session |</span><br><span class="line">| localhost | mysql.sys     |</span><br><span class="line">| localhost | root          |</span><br><span class="line">+-----------+---------------+</span><br><span class="line">3 rows in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">update user set host = '%' where user = 'root'; (使mysql root用户可以连接上任意的ip地址)</span><br><span class="line"></span><br><span class="line">FLUSH PRIVILEGES;</span><br></pre></td></tr></table></figure><p>如果远程连接失败 检查3306端口防火墙设置</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@hecs-x-medium-2-linux-20200612090121 data]# firewall-cmd --zone=public --add-port=3306/tcp --permanent </span><br><span class="line">success</span><br><span class="line">[root@hecs-x-medium-2-linux-20200612090121 data]# firewall-cmd --reload</span><br><span class="line">success</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>数据库常见问题汇总</title>
      <link href="/2019/12/10/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
      <url>/2019/12/10/%E6%95%B0%E6%8D%AE%E5%BA%93/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h3 id="1153-Got-a-packet-bigger-than-‘max-allowed-packet’-bytes"><a href="#1153-Got-a-packet-bigger-than-‘max-allowed-packet’-bytes" class="headerlink" title="1153 - Got a packet bigger than ‘max_allowed_packet’ bytes"></a>1153 - Got a packet bigger than ‘max_allowed_packet’ bytes</h3><p>数据库数据同步导入时,文件过大导致出现此错误, 注意: 此种方式不用重启sql服务,只是临时修改.</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; show VARIABLES like '%max_allowed_packet%';</span><br><span class="line">+<span class="comment">--------------------------+-------+</span></span><br><span class="line">| Variable_name            | Value |</span><br><span class="line">+<span class="comment">--------------------------+-------+</span></span><br><span class="line">| max_allowed_packet       | 2048  |</span><br><span class="line">| slave_max_allowed_packet | 2048  |</span><br><span class="line">+<span class="comment">--------------------------+-------+</span></span><br><span class="line">2 rows in <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; <span class="keyword">set</span> <span class="keyword">global</span> net_buffer_length=<span class="number">1000000</span>;</span><br><span class="line">Query OK, 0 rows affected, 1 warning (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; set global max_allowed_packet=1000000000;</span><br><span class="line">Query OK, 0 rows affected, 1 warning (0.00 sec)</span><br></pre></td></tr></table></figure><h3 id="Mac启动MySql服务-ERROR-1045-28000-Access-denied-for-user-‘root’-’localhost’-using-password-NO"><a href="#Mac启动MySql服务-ERROR-1045-28000-Access-denied-for-user-‘root’-’localhost’-using-password-NO" class="headerlink" title="Mac启动MySql服务 ERROR 1045 (28000): Access denied for user ‘root’@’localhost’ (using password: NO)"></a>Mac启动MySql服务 ERROR 1045 (28000): Access denied for user ‘root’@’localhost’ (using password: NO)</h3><p>解决方法：<br>第一步：如果mysql服务正在进行，将之停止。<br>第二步：在终端中以管理员权限启动mysqld_safe，命令如下：</p><p><code>sudo /usr/local/mysql/bin/mysqld_safe --skip-grant-tables</code></p><p>执行结果如下：</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2016</span><span class="number">-06</span><span class="number">-12</span>T08:<span class="number">29</span>:<span class="number">17.6</span>NZ mysqld_safe Logging to <span class="string">'/usr/local/mysql/data/lyqdeMacBook-Pro.local.err'</span>.</span><br><span class="line"><span class="number">2016</span><span class="number">-06</span><span class="number">-12</span>T08:<span class="number">29</span>:<span class="number">17.6</span>NZ mysqld_safe Starting mysqld daemon <span class="keyword">with</span> databases <span class="keyword">from</span> /usr/local/mysql/data</span><br></pre></td></tr></table></figure><p>第三步：不要关闭当前的终端窗口，新建一个终端窗口，输入如下命令，回车登录mysql</p><p><code>/usr/local/mysql/bin/mysql</code></p><p>登录后，看到欢迎信息：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">Welcome to the MySQL monitor.  Commands end with ; or \g.</span><br><span class="line">Your MySQL connection id is 37</span><br><span class="line">Server version: 5.7.13 MySQL Community Server (GPL)</span><br><span class="line"></span><br><span class="line">Copyright (c) 2000, 2016, Oracle and/or its affiliates. All rights reserved.</span><br><span class="line"></span><br><span class="line">Oracle is a registered trademark of Oracle Corporation and/or its</span><br><span class="line">affiliates. Other names may be trademarks of their respective</span><br><span class="line">owners.</span><br><span class="line"></span><br><span class="line">Type &apos;help;&apos; or &apos;\h&apos; for help. Type &apos;\c&apos; to clear the current input statement.</span><br><span class="line"></span><br><span class="line">mysql&gt;</span><br></pre></td></tr></table></figure><p>打开”mysql”这个数据库，SQL如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Reading table information for completion of table and column names</span><br><span class="line">You can turn off this feature to get a quicker startup with -A</span><br><span class="line"></span><br><span class="line">Database changed</span><br><span class="line">mysql&gt;</span><br></pre></td></tr></table></figure><p>然后，更新root的密码，SQL如下：</p><p><code>mysql&gt; update user set authentication_string=password(&#39;root&#39;) where Host=&#39;localhost&#39; and User=&#39;root&#39;;</code></p><p>注意：<br>①有的版本的mysql中，密码可能存储在password字段中，可以使用”describe user;”命令来查看下表结构再操作</p><p>②authentication_string的值一定通过password函数来计算(password(‘root’))</p><p>执行结果如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Query OK, 1 row affected, 1 warning (0.01 sec)</span><br><span class="line">Rows matched: 1  Changed: 1  Warnings: 1</span><br></pre></td></tr></table></figure><p>退出mysql（执行sql语句：exit)</p><p>最后一步：将mysqld_safe进程杀死，重启mysqld。</p><p>可能会遇到的问题</p><p>登录mysql</p><p><code>/usr/local/mysql/bin/mysql -uroot -proot</code></p><p>这个时候，如果执行查询之类的操作，比如执行”show databases;”，可能会有如下提示:</p><p><code>ERROR 1820 (HY000): You must reset your password using ALTER USER statement before executing this statement.</code></p><p>根据提示进行操作，输入如下SQL语句，这个语句的作用是修改root用户的口令为root：</p><p><code>mysql&gt; alter user &#39;root&#39;@&#39;localhost&#39; identified by &#39;root&#39;;</code></p><p>结果：</p><p><code>Query OK, 0 rows affected</code></p><h3 id="MySql-数据库-插入表情字符报错-java-sql-SQLException-Incorrect-string-value-‘-xF0-x9F-x98-x87"><a href="#MySql-数据库-插入表情字符报错-java-sql-SQLException-Incorrect-string-value-‘-xF0-x9F-x98-x87" class="headerlink" title="MySql 数据库 插入表情字符报错 [java.sql.SQLException: Incorrect string value: ‘\xF0\x9F\x98\x87]"></a>MySql 数据库 插入表情字符报错 [java.sql.SQLException: Incorrect string value: ‘\xF0\x9F\x98\x87]</h3><p>解决办法: mysql安装目录下找到 my.ini 文件并做修改</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[mysqld]</span><br><span class="line">character-set-server=utf8mb4</span><br><span class="line">[mysql]</span><br><span class="line">default-character-set=utf8mb4</span><br></pre></td></tr></table></figure><p>修改后重启mysql</p><p>将已经建好的表转成utf8mb4</p><p>更改数据库编码:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ALTER DATABASE 数据库名 CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci;</span><br></pre></td></tr></table></figure><p>更改表的编码:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alter table 表名 convert to character set utf8mb4 collate utf8mb4_bin;</span><br></pre></td></tr></table></figure><p>修改mysql配置文件my.cnf (windows为my.ini)</p><p>my.cnf一般在etc/mysql/my.cnf位置。找到后请在以下三部分里添加如下内容：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[client] </span><br><span class="line">default-character-set = utf8mb4 </span><br><span class="line">[mysql] </span><br><span class="line">default-character-set = utf8mb4 </span><br><span class="line">[mysqld] </span><br><span class="line">character-set-client-handshake = FALSE </span><br><span class="line">character-set-server = utf8mb4 </span><br><span class="line">collation-server = utf8mb4_unicode_ci </span><br><span class="line">init_connect=&apos;SET NAMES utf8mb4&apos;</span><br></pre></td></tr></table></figure><p> 解决Mysql报错缺少libaio.so.1:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">64位系统安装：</span><br><span class="line"></span><br><span class="line">wget http://mirror.centos.org/centos/6/os/x86_64/Packages/libaio-0.3.107-10.el6.x86_64.rpm</span><br><span class="line"></span><br><span class="line">rpm -ivh libaio-0.3.107-10.el6.x86_64.rpm</span><br><span class="line"></span><br><span class="line">32位系统现在很少了，yum似乎默认安装32位的：</span><br><span class="line"></span><br><span class="line">yum install libaio.so.1</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>数据库自动备份</title>
      <link href="/2019/12/10/%E6%95%B0%E6%8D%AE%E5%BA%93%E8%87%AA%E5%8A%A8%E5%A4%87%E4%BB%BD/"/>
      <url>/2019/12/10/%E6%95%B0%E6%8D%AE%E5%BA%93%E8%87%AA%E5%8A%A8%E5%A4%87%E4%BB%BD/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>shell脚本</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">db_user="test"</span><br><span class="line">db_passwd="test@xxxx"</span><br><span class="line">db_name="bf_test"</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">进入备份目录将之前的移动到old目录</span></span><br><span class="line">cd /mnt/backup/bakmysql</span><br><span class="line">echo "you are in bakmysql directory now"</span><br><span class="line"><span class="meta">#</span><span class="bash">将当前备份的数据移动到旧文件夹内</span></span><br><span class="line">mv bf_test* /mnt/backup/bakmysqlold</span><br><span class="line">echo "Old databases are moved to bakmysqlold folder"</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 备份目录</span></span><br><span class="line">backup_dir="/mnt/backup/bakmysql"</span><br><span class="line"><span class="meta">#</span><span class="bash"> 备份日期</span></span><br><span class="line">time=$(date +"%Y-%m-%d")</span><br><span class="line">mysqldump --single-transaction -u$db_user  -p$db_passwd $db_name  &gt; "$backup_dir/$db_name"_"$time.sql"</span><br><span class="line">echo "your database backup successfully completed"</span><br><span class="line"><span class="meta">#</span><span class="bash">这里将7天之前的备份文件删掉</span></span><br><span class="line">SevenDays=$(date -d -7day  +"%Y-%m-%d")</span><br><span class="line">if [ -f /mnt/backup/bakmysqlold/bf_test_$SevenDays.sql ]</span><br><span class="line">then</span><br><span class="line">rm -rf /mnt/backup/bakmysqlold/bf_test_$SevenDays.sql</span><br><span class="line">echo "you have delete 7days ago bak sql file "</span><br><span class="line">else</span><br><span class="line">echo "7days ago bak sql file not exist "</span><br><span class="line">echo "bash complete"</span><br><span class="line">fi</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>常用工具</title>
      <link href="/2019/12/04/%E5%B8%B8%E7%94%A8%E5%B7%A5%E5%85%B7/"/>
      <url>/2019/12/04/%E5%B8%B8%E7%94%A8%E5%B7%A5%E5%85%B7/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h2 id="常用工具汇总"><a href="#常用工具汇总" class="headerlink" title="常用工具汇总"></a>常用工具汇总</h2><h3 id="Pulse-Secure-for-Mac-VPN工具"><a href="#Pulse-Secure-for-Mac-VPN工具" class="headerlink" title="Pulse Secure for Mac (VPN工具)"></a>Pulse Secure for Mac (VPN工具)</h3><p>官网地址: <a href="https://www.pulsesecure.net/" target="_blank" rel="noopener">https://www.pulsesecure.net/</a></p><p>需要填写相关资料 邮件的方式获取下载地址, 我的mac电脑升级10.15之后 之前的版本不能用了, 在网上也没有找到安装包, 只好重新在官网申请, 另外官网给你发的下载地址需要翻墙, 所以不能翻墙就用我下面提供的吧, 应该是最新的版本: ps-pulse-mac-9.0r4.0-b1731-installer</p><p><a href="https://pan.baidu.com/s/1-6xBeghJy5h8g_MGrS_LYw" target="_blank" rel="noopener">百度云下载地址</a> 密码: h7z6</p><h3 id="蓝灯-lantern-翻墙工具"><a href="#蓝灯-lantern-翻墙工具" class="headerlink" title="蓝灯 lantern (翻墙工具)"></a>蓝灯 lantern (翻墙工具)</h3><p>下载地址: <a href="https://github.com/getlantern/download" target="_blank" rel="noopener">https://github.com/getlantern/download</a></p><h3 id="TeamViewer检测到商业用途的解决办法-包含-Mac-Windows-安卓"><a href="#TeamViewer检测到商业用途的解决办法-包含-Mac-Windows-安卓" class="headerlink" title="TeamViewer检测到商业用途的解决办法(包含 Mac Windows 安卓)"></a>TeamViewer检测到商业用途的解决办法(包含 Mac Windows 安卓)</h3><p>能这么办 用破解版呗! 仅供个人学习娱乐使用, 严禁商业用途。记得在高级设置里将版本自动更新关闭, 否者会出现双方版本不一致无法使用的情况!!!</p><p>百度云下载地址: <a href="https://pan.baidu.com/s/1eVPo-Ubz54GEaPmwEM32dg" target="_blank" rel="noopener">https://pan.baidu.com/s/1eVPo-Ubz54GEaPmwEM32dg</a></p>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Windows Server 2002 使用记录</title>
      <link href="/2019/11/09/Windows%20Server%202002%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%80%E6%AC%A1%E4%BD%BF%E7%94%A8%E8%AE%B0%E5%BD%95/"/>
      <url>/2019/11/09/Windows%20Server%202002%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%80%E6%AC%A1%E4%BD%BF%E7%94%A8%E8%AE%B0%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>前段时间接到一个为公司客户开发官网的任务, 框架使用Jeesite, 前后端分离项目, 数据库是Mysql5.7。接下来就记录下遭遇的一切。</p><p>大约三天开发完后台服务及管理界面的配置, 配合前台接口调试用了一天, 然后客户购买的阿里云服务器, 我原以为是Linux服务器, 所以也没多问就按照之前的习惯, 用Mac的ssh直接连接, 提示 22端口访问被拒绝, 什么鬼? 22端口没开, 然后几经辗转要到阿里云账号并登录到管理后台, 重置了实例密码(因为客户也不知道密码是啥), 说实在的, 我连Windows电脑都好些年不用了, 所有的命令行也不怎么会, 这可难到我了,  研究了好一阵子, 我才知道windows有自己的远程连接工具, 并且需要开放的端口是 3389, 然后阿里云后台配置网络安全组, 开放 80, 3389 , 3306 入规则访问权限, 分别是网路请求, 远程控制 和 数据库, 方便我以后的开发调试工作, 等真正交付的时候再关闭掉 3389和3306,  然后用Tomcat开始部署, 其实使用这一个服务就可以了, 但是个人习惯还是兼顾使用了 Nginx服务, 然后 下载Java JDK 配置环境变量这一套常规操作。</p><p>远程访问我用客户的账号配置好后台网络, 然后重置并获取到新的服务器密码后, (这里再插一句, 服务器主机的开机账号密码默认是 administrator  和 服务器密码 我才知道 之前以为是俩密码) 然后安装了Teamviewer工具, 为了双保险又安装了蒲公英, 之前Team不说是有漏洞嘛, 但是我觉得蒲公英免费版的太慢了, 卡的很难受, 还是Team比较快捷高效 然后磕磕绊绊的服务起开了, 根据IP外网也能访问了</p><p>第二天客户说访问不到服务了, 我登录发现密码错误, 难道客户密码改了? 但是客户说没改, 我又远程访问的客户电脑, 再通过他的浏览器访问的服务器, 然后重置了密码, 一顿操作还是没发现问题, localhost访问服务没问题, 那就是网络的问题了, 发现防火墙被用户开启了, 那就是防火墙的问题了, 单独开放了80端口, 搞定, 可以正常外网访问了, 然后防止客户重启服务器 服务中断的问题, 需要配置Tomcat和Nginx自启服务, Tomcat服务自启比较简单</p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>记录一次微信小程序调用Eharts</title>
      <link href="/2019/11/09/%E8%AE%B0%E5%BD%95%E4%B8%80%E6%AC%A1%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E8%B0%83%E7%94%A8Echarts/"/>
      <url>/2019/11/09/%E8%AE%B0%E5%BD%95%E4%B8%80%E6%AC%A1%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E8%B0%83%E7%94%A8Echarts/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h2 id="记录一次微信小程序调用Eharts-柱状图"><a href="#记录一次微信小程序调用Eharts-柱状图" class="headerlink" title="记录一次微信小程序调用Eharts(柱状图)"></a>记录一次微信小程序调用Eharts(柱状图)</h2><p>Echarts 微信小程序版本地址: <a href="https://github.com/ecomfe/echarts-for-weixin" target="_blank" rel="noopener"></a></p><p>可以参考其使用文档进行操作, 写的比较详细了.</p><h5 id="下面说下我的操作方式及遇到的一些问题"><a href="#下面说下我的操作方式及遇到的一些问题" class="headerlink" title="下面说下我的操作方式及遇到的一些问题:"></a>下面说下我的操作方式及遇到的一些问题:</h5><ol><li><p>下载github上的项目到本地, 然后拷贝项目内的ec-canvas文件至我的项目内, 因为我的项目是用npm导包, 所以我为了统一, 拷贝至了根目录下的node_modules目录下. 其实直接放根目录就行了</p></li><li><p>小程序新建一个页面用来展示报表<br><img alt data-src="https://s2.ax1x.com/2019/11/14/MNpXqS.png" class="lazyload"></p></li><li><p>在 dataShow.json 内添加引用的组件 供wxml内使用</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">"usingComponents"</span>: &#123;</span><br><span class="line">    <span class="string">"ec-canvas"</span>: <span class="string">"../../miniprogram_npm/ec-canvas/ec-canvas"</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>在 dataShow.js 内引用echarts  并定义个全局变量 chat<br><code>import * as echarts from &#39;../../miniprogram_npm/ec-canvas/echarts&#39;;</code></p><p><code>let chart = null;</code></p></li><li><p>在 dataShow.wxml编辑</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">"container"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">ec-canvas</span> <span class="attr">ec</span>=<span class="string">"&#123;&#123; ec &#125;&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">ec-canvas</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>dataShow.js  在data内定义这个ec对象</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">data: &#123;</span><br><span class="line">    ec: &#123;</span><br><span class="line">      onInit: initChart</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">//  histogramData 为网络请求的数据</span></span><br><span class="line">    histogramData: &#123;&#125;</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure></li><li><p>上文的 initChart 是个函数, 我们在js内实现, 注意这个函数写在Page外, 我试过写在Page内,会发现视图的点击触发事件动画没有,就是下面这个图内箭头指向的.<br><img alt data-src="https://s2.ax1x.com/2019/11/14/MNiLWj.png" class="lazyload"></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//初始化 echart</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">initChart</span>(<span class="params">canvas, width, height</span>) </span>&#123;</span><br><span class="line">  chart = echarts.init(canvas, <span class="literal">null</span>, &#123;</span><br><span class="line">    width: width,</span><br><span class="line">    height: height</span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="comment">//这里可以先设置Option, 或许会防止视图加载抖动, 但是我试了好像没啥用, 可能我数据量小, 暂时还是请求数据后再设置吧</span></span><br><span class="line">  <span class="comment">// var op = getOption(&#123;&#125;);</span></span><br><span class="line">  <span class="comment">// chart.setOption(op);</span></span><br><span class="line">  canvas.setChart(chart);</span><br><span class="line">  <span class="keyword">return</span> chart;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><ol start="8"><li><p>同样我们也在js里声明一个获取Option的函数 <code>getOption</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//为Echar提供数据 histogramData是我们请求数据后获取的数据</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getOption</span>(<span class="params">histogramData</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> option = &#123;</span><br><span class="line">    color: [<span class="string">'#37a2da'</span>, <span class="string">'#32c5e9'</span>, <span class="string">'#67e0e3'</span>],</span><br><span class="line">    tooltip: &#123;</span><br><span class="line">      trigger: <span class="string">'axis'</span>,</span><br><span class="line">      axisPointer: &#123;   <span class="comment">// 坐标轴指示器，坐标轴触发有效</span></span><br><span class="line">        type: <span class="string">'shadow'</span> <span class="comment">// 默认为直线，可选为：'line' |'shadow'</span></span><br><span class="line">      &#125;,</span><br><span class="line">      confine: <span class="literal">true</span></span><br><span class="line">    &#125;,</span><br><span class="line">    legend: &#123;</span><br><span class="line">      data: [<span class="string">'不满意'</span>, <span class="string">'满意'</span>, <span class="string">'非常满意'</span>]</span><br><span class="line">    &#125;,</span><br><span class="line">    grid: &#123;</span><br><span class="line">      left: <span class="number">20</span>,</span><br><span class="line">      right: <span class="number">20</span>,</span><br><span class="line">      bottom: <span class="number">15</span>,</span><br><span class="line">      top: <span class="number">40</span>,</span><br><span class="line">      containLabel: <span class="literal">true</span></span><br><span class="line">    &#125;,</span><br><span class="line">    xAxis: [</span><br><span class="line">      &#123;</span><br><span class="line">        type: <span class="string">'value'</span>,</span><br><span class="line">        axisLine: &#123;</span><br><span class="line">          lineStyle: &#123;</span><br><span class="line">            color: <span class="string">'#999'</span></span><br><span class="line">          &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        axisLabel: &#123;</span><br><span class="line">          color: <span class="string">'#666'</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    ],</span><br><span class="line">    yAxis: [</span><br><span class="line">      &#123;</span><br><span class="line">        type: <span class="string">'category'</span>,</span><br><span class="line">        axisTick: &#123; <span class="attr">show</span>: <span class="literal">false</span> &#125;,</span><br><span class="line">        data: histogramData.names || [],</span><br><span class="line">        axisLine: &#123;</span><br><span class="line">          lineStyle: &#123;</span><br><span class="line">            color: <span class="string">'#999'</span></span><br><span class="line">          &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        axisLabel: &#123;</span><br><span class="line">          color: <span class="string">'#666'</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    ],</span><br><span class="line">    series: [</span><br><span class="line">      &#123;</span><br><span class="line">        name: <span class="string">'不满意'</span>,</span><br><span class="line">        type: <span class="string">'bar'</span>,</span><br><span class="line">        label: &#123;</span><br><span class="line">          normal: &#123;</span><br><span class="line">            position: <span class="string">'inside'</span></span><br><span class="line">          &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        data: histogramData.noGoods || [],</span><br><span class="line">        itemStyle: &#123;</span><br><span class="line">          normal: &#123;</span><br><span class="line">            color: <span class="string">'#D7322D'</span></span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        name: <span class="string">'满意'</span>,</span><br><span class="line">        type: <span class="string">'bar'</span>,</span><br><span class="line">        data: histogramData.goods || [],</span><br><span class="line">        itemStyle: &#123;</span><br><span class="line">          normal: &#123;</span><br><span class="line">            color: <span class="string">'#3A8BFB'</span></span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        name: <span class="string">'非常满意'</span>,</span><br><span class="line">        type: <span class="string">'bar'</span>,</span><br><span class="line">        label: &#123;</span><br><span class="line">          normal: &#123;</span><br><span class="line">            color: <span class="string">'#1AB16C'</span></span><br><span class="line">          &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        data: histogramData.veryGoods,</span><br><span class="line">        itemStyle: &#123;</span><br><span class="line">          normal: &#123;</span><br><span class="line">            color: <span class="string">'#1AB16C'</span></span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;;</span><br><span class="line">  <span class="keyword">return</span> option;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><ol start="9"><li><p>在请求数据的函数内设置Option  注:histogramData是网络请求封装</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">loadData() &#123;</span><br><span class="line">    <span class="keyword">var</span> that = <span class="keyword">this</span>;</span><br><span class="line">    histogramData().then(<span class="function"><span class="params">data</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="comment">//调取getOption函数 传入数据</span></span><br><span class="line">      <span class="keyword">var</span> op = getOption(data.histogramData);</span><br><span class="line">      <span class="comment">//设置Option</span></span><br><span class="line">      chart.setOption(op);     </span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;,</span><br></pre></td></tr></table></figure></li></ol><ol start="10"><li>如果想使用本地数据验证代码可行性, 可以在 <code>getOption</code> 函数里设置一些本地数据, 就是把<code>histogramData</code>涉及到的地方替换成本地数据 例 <code>[1,2,3,4,5,6]</code> 将series里面的三个<code>data</code>都设置了就行了<br><img alt data-src="https://s2.ax1x.com/2019/11/14/MNAMzd.png" class="lazyload"></li></ol><pre><code>### 最后的效果图我就不放了, 在上面有!!!</code></pre>]]></content>
      
      
      <categories>
          
          <category> 微信小程序 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>开篇</title>
      <link href="/2019/11/09/%E5%BC%80%E7%AF%87/"/>
      <url>/2019/11/09/%E5%BC%80%E7%AF%87/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h3 id="原本想使用-spring-boot-vue-开发一款博客系统-但是平时也没有多少时间-做出来的样式也不是很喜欢。今天无意间发现Hexo这个开源的博客框架-决定拿来试一试-效果还不错-今后会继续完善下去-我也会将-简书、掘金的一些之前写作的文章导入进来-希望通过它能让我养成技术文档整理归纳的好习惯-我也会在此更新一些生活上的故事和心得体悟。"><a href="#原本想使用-spring-boot-vue-开发一款博客系统-但是平时也没有多少时间-做出来的样式也不是很喜欢。今天无意间发现Hexo这个开源的博客框架-决定拿来试一试-效果还不错-今后会继续完善下去-我也会将-简书、掘金的一些之前写作的文章导入进来-希望通过它能让我养成技术文档整理归纳的好习惯-我也会在此更新一些生活上的故事和心得体悟。" class="headerlink" title="原本想使用 spring-boot + vue 开发一款博客系统, 但是平时也没有多少时间, 做出来的样式也不是很喜欢。今天无意间发现Hexo这个开源的博客框架, 决定拿来试一试, 效果还不错, 今后会继续完善下去, 我也会将 简书、掘金的一些之前写作的文章导入进来, 希望通过它能让我养成技术文档整理归纳的好习惯, 我也会在此更新一些生活上的故事和心得体悟。"></a>原本想使用 spring-boot + vue 开发一款博客系统, 但是平时也没有多少时间, 做出来的样式也不是很喜欢。今天无意间发现Hexo这个开源的博客框架, 决定拿来试一试, 效果还不错, 今后会继续完善下去, 我也会将 简书、掘金的一些之前写作的文章导入进来, 希望通过它能让我养成技术文档整理归纳的好习惯, 我也会在此更新一些生活上的故事和心得体悟。</h3>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>SpringBoot 定时任务内 使用@Autowired注入Service 获取不到的问题</title>
      <link href="/2019/10/06/SpringBoot%20%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1%E5%86%85%20%E4%BD%BF%E7%94%A8@Autowired%E6%B3%A8%E5%85%A5Service%20%E8%8E%B7%E5%8F%96%E4%B8%8D%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98/"/>
      <url>/2019/10/06/SpringBoot%20%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1%E5%86%85%20%E4%BD%BF%E7%94%A8@Autowired%E6%B3%A8%E5%85%A5Service%20%E8%8E%B7%E5%8F%96%E4%B8%8D%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>近段时间使用微信Web版的API,实现一个微信机器人, 想每天早上像微信群发送天气预报, 在创建定时任务的时候,发现抛出异常,断点发现是在定时任务里获取不到ChatroomDescriptionService 这个service, 在网上查了查,发现需要手动去配置一个类，主动获取实例来解决这个问题。</p><p>首先创建一个工具类:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cherry.jeeves.utils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.BeansException;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.ApplicationContext;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.ApplicationContextAware;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@className</span>: ApplicationContextUtil</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>: 解决定时任务获取不到service的问题</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span> moneylee</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span> 2019-05-11 14:28</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Version</span> 1.0</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ApplicationContextUtil</span> <span class="keyword">implements</span> <span class="title">ApplicationContextAware</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> ApplicationContext applicationContext;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> ApplicationContext <span class="title">getApplicationContext</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> applicationContext;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setApplicationContext</span><span class="params">(ApplicationContext applicationContext)</span> <span class="keyword">throws</span> BeansException </span>&#123;</span><br><span class="line">        ApplicationContextUtil.applicationContext = applicationContext;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Object <span class="title">getBean</span><span class="params">(String beanName)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> applicationContext.getBean(beanName);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在serivice上添加注解 @Service(“chatroomDescriptionService”)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cherry.jeeves.service.Impl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.core.metadata.IPage;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.cherry.jeeves.dao.ChatroomDescriptionDao;</span><br><span class="line"><span class="keyword">import</span> com.cherry.jeeves.entity.ChatroomDescriptionEntity;</span><br><span class="line"><span class="keyword">import</span> com.cherry.jeeves.service.ChatroomDescriptionService;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@Service</span>(<span class="string">"chatroomDescriptionService"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ChatroomDescriptionServiceImpl</span> <span class="keyword">extends</span> <span class="title">ServiceImpl</span>&lt;<span class="title">ChatroomDescriptionDao</span>, <span class="title">ChatroomDescriptionEntity</span>&gt; <span class="keyword">implements</span> <span class="title">ChatroomDescriptionService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在定时任务类中获取该service</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ChatroomDescriptionService chatroomDescriptionService = (ChatroomDescriptionService) ApplicationContextUtil.getBean(<span class="string">"chatroomDescriptionService"</span>);</span><br></pre></td></tr></table></figure><p>参考文章: <a href="https://www.cnblogs.com/doudou2018/p/10416043.html" target="_blank" rel="noopener">https://www.cnblogs.com/doudou2018/p/10416043.html</a></p>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Docker 部署Nginx 并且挂载默认请求路径和配置文件</title>
      <link href="/2019/08/16/Docker%20%E9%83%A8%E7%BD%B2Nginx%20%E5%B9%B6%E4%B8%94%E6%8C%82%E8%BD%BD%E9%BB%98%E8%AE%A4%E8%AF%B7%E6%B1%82%E8%B7%AF%E5%BE%84%E5%92%8C%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/"/>
      <url>/2019/08/16/Docker%20%E9%83%A8%E7%BD%B2Nginx%20%E5%B9%B6%E4%B8%94%E6%8C%82%E8%BD%BD%E9%BB%98%E8%AE%A4%E8%AF%B7%E6%B1%82%E8%B7%AF%E5%BE%84%E5%92%8C%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>首先进入宿主机终端命令行 启动docker</p><p><code>service docker start</code></p><p>查看已安装docker镜像列表</p><p><code>docker images</code></p><p><img alt data-src="https://tva1.sinaimg.cn/large/006tNbRwly1g9sjoiuq3hj30hf01u74j.jpg" class="lazyload"></p><p>如果没有安装就安装下</p><p><code>docker pull nginx</code></p><p>然后得启动这个镜像 正常启动是下面的命令,但是先别着急敲</p><p><code>docker run -d -p 80:80 nginx</code></p><p>简单解释下这里面的值都代表啥意思 <code>-d</code>是让这个nginx容器服务后台运行 <code>-p</code>是指定端口 后面跟的80:80 前面的80是宿主机的端口 后面的是容器里nginx的端口, 比如改成 8080:80 那么我们在外部访问这个nginx服务 地址应该是 <a href="http://xx.xx.xx.xx:8080/" target="_blank" rel="noopener">xx.xx.xx.xx:8080</a> 就可以看到nginx的欢迎页了</p><p><code>nginx</code>当然是启动的镜像名字啦</p><p>但是啊,这么写不好,如果你像改这个nginx的配置文件,或者改个静态页咋改啊,我们得到这个容器的内部去改啊, 简单说下如何进入这个容器的内部</p><p>先获取到这个nginx容器的id , 查询所有容器 无论是运行的还是exit的,其实在不在执行你都能看出来了,因为上面有exit标识着呢</p><p><code>docker ps -a</code></p><p><img alt="16aa0b5e75088978" data-src="https://tva1.sinaimg.cn/large/006tNbRwly1g9sjs03539j30hv02rq3h.jpg" class="lazyload"></p><p>你看,映射的端口号都给你了,我这里面没有其他被关闭的容器服务,我有强迫症,都清理了,你也有的话执行这个命令 xxxxx是这个容器的id 图里有</p><p><code>docker rm xxxxx</code></p><p>扯这么多没用的,现在开始说重点的,如果去改这个nginx容器里的配置文件,日志文件的具体路径和内容呢,这就要使用到挂载,我理解的挂载的意思就是在使用这个nginx容器的时候,不去使用容器内的配置和文件路径,使用宿主机上的资源文件,对了 我还没说怎么去容器内,执行这个命令,对了 你要是不是root用户前面加 sudo</p><p><code>docker exec -it xxxx bash</code></p><p>xxxx是容器id</p><p><img alt="16aa0bd1e50158e8" data-src="https://tva1.sinaimg.cn/large/006tNbRwly1g9sju4ig21j30ef02gjrr.jpg" class="lazyload"></p><p>是不是有点眼熟 其实这个镜像自己的世界,不受外界打扰,但是功能指定没有宿主机全啊,比如你想在里面使用vim命令….</p><p>我们接着回来谈挂载,既然你想挂载,你得知道你镜像里面nginx的配置文件啥的都在哪吧,然后挂载到你宿主机的指定位置啊,所以我们先看看他们都在哪呢<br> 镜像中nginx.conf配置文件路径</p><p><code>/etc/nginx/nginx.conf</code></p><p>default.conf配置文件的路径</p><p><code>/etc/nginx/conf.d/default.conf</code></p><p>默认首页文件夹html路径</p><p><code>/usr/share/nginx/html</code></p><p>日志文件路径</p><p><code>/var/log/nginx</code></p><p><img alt="16aa0c396fe621b7" data-src="https://tva1.sinaimg.cn/large/006tNbRwly1g9sjx7ip6rj30ec074mz9.jpg" class="lazyload"></p><p>来个图验证一下, 然后输入 <code>exit</code> 退出nginx容器回到宿主机</p><p>下面在宿主机上建挂载使用的文件夹</p><p><code>mkdir -p /nginx/{conf,conf.d,html,logs}</code></p><p>建这4个文件夹都知道是干啥用的了吧, 没权限记住前面加 <code>sudo</code></p><p><img alt="16aa0ccb2a0d8482" data-src="https://tva1.sinaimg.cn/large/006tNbRwly1g9sjy43q42j30fg031dg9.jpg" class="lazyload"></p><p>下面就开始往对应的路径扔配置文件或者资源文件了,logs里不用,挂载好自动往里输出 error.log 和 access.log<br> html里你放首页需要展示的.html文件,然后你在访问,你加进来的html就把默认的nginx欢迎界面替换掉了…现在整没有用啊,你还没挂载呢,等会的。</p><p>conf里放 nginx.conf 配置文件, 这个文件的内容要从镜像里的复制出来哦,我们尽量保持和镜像里面的一致<br> 下面我们再来说说怎么将刚刚在容器里看到的配置文件copy到宿主机里面</p><p>前面是容器的路径 后面是宿主机的路径:</p><p><code>docker cp 容器id:/etc/nginx/nginx.conf /nginx/conf/nginx.conf</code></p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="attribute">user</span>  nginx;</span><br><span class="line"><span class="attribute">worker_processes</span>  <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="attribute">error_log</span>  /var/log/nginx/error.log <span class="literal">warn</span>;</span><br><span class="line"><span class="attribute">pid</span>        /var/run/nginx.pid;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="section">events</span> &#123;</span><br><span class="line">    <span class="attribute">worker_connections</span>  <span class="number">1024</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="section">http</span> &#123;</span><br><span class="line">    <span class="attribute">include</span>       /etc/nginx/mime.types;</span><br><span class="line">    <span class="attribute">default_type</span>  application/octet-stream;</span><br><span class="line"></span><br><span class="line">    <span class="attribute">log_format</span>  main  <span class="string">'<span class="variable">$remote_addr</span> - <span class="variable">$remote_user</span> [<span class="variable">$time_local</span>] "<span class="variable">$request</span>" '</span></span><br><span class="line">                      <span class="string">'<span class="variable">$status</span> <span class="variable">$body_bytes_sent</span> "<span class="variable">$http_referer</span>" '</span></span><br><span class="line">                      <span class="string">'"<span class="variable">$http_user_agent</span>" "<span class="variable">$http_x_forwarded_for</span>"'</span>;</span><br><span class="line"></span><br><span class="line">    <span class="attribute">access_log</span>  /var/log/nginx/access.log  main;</span><br><span class="line"></span><br><span class="line">    <span class="attribute">sendfile</span>        <span class="literal">on</span>;</span><br><span class="line">    <span class="comment">#tcp_nopush     on;</span></span><br><span class="line"></span><br><span class="line">    <span class="attribute">keepalive_timeout</span>  <span class="number">65</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">#gzip  on;</span></span><br><span class="line"></span><br><span class="line">    <span class="attribute">include</span> /etc/nginx/conf.d/<span class="regexp">*.conf</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>同样在把conf.d 下的default.conf 复制过来</p><p><code>docker cp 容器id:/etc/nginx/conf.d/default.conf /nginx/conf.d/default.conf</code></p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">server</span> &#123;</span><br><span class="line">    <span class="attribute">listen</span>       <span class="number">80</span>;</span><br><span class="line">    <span class="attribute">server_name</span>  localhost;</span><br><span class="line"></span><br><span class="line">    <span class="comment">#charset koi8-r;</span></span><br><span class="line">    <span class="comment">#access_log  /var/log/nginx/host.access.log  main;</span></span><br><span class="line"></span><br><span class="line">    <span class="attribute">location</span> / &#123;</span><br><span class="line">        <span class="attribute">root</span>   /usr/share/nginx/html;</span><br><span class="line">        <span class="attribute">index</span>  index.html index.htm;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">#error_page  404              /404.html;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># redirect server error pages to the static page /50x.html</span></span><br><span class="line">    <span class="comment">#</span></span><br><span class="line">    <span class="attribute">error_page</span>   <span class="number">500</span> <span class="number">502</span> <span class="number">503</span> <span class="number">504</span>  /50x.html;</span><br><span class="line">    <span class="attribute">location</span> = /50x.html &#123;</span><br><span class="line">        <span class="attribute">root</span>   /usr/share/nginx/html;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment"># proxy the PHP scripts to Apache listening on 127.0.0.1:80</span></span><br><span class="line">    <span class="comment">#</span></span><br><span class="line">    <span class="comment">#location ~ \.php$ &#123;</span></span><br><span class="line">    <span class="comment">#    proxy_pass   http://127.0.0.1;</span></span><br><span class="line">    <span class="comment">#&#125;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000</span></span><br><span class="line">    <span class="comment">#</span></span><br><span class="line">    <span class="comment">#location ~ \.php$ &#123;</span></span><br><span class="line">    <span class="comment">#    root           html;</span></span><br><span class="line">    <span class="comment">#    fastcgi_pass   127.0.0.1:9000;</span></span><br><span class="line">    <span class="comment">#    fastcgi_index  index.php;</span></span><br><span class="line">    <span class="comment">#    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;</span></span><br><span class="line">    <span class="comment">#    include        fastcgi_params;</span></span><br><span class="line">    <span class="comment">#&#125;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># deny access to .htaccess files, if Apache's document root</span></span><br><span class="line">    <span class="comment"># concurs with nginx's one</span></span><br><span class="line">    <span class="comment">#</span></span><br><span class="line">    <span class="comment">#location ~ /\.ht &#123;</span></span><br><span class="line">    <span class="comment">#    deny  all;</span></span><br><span class="line">    <span class="comment">#&#125;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后,我们自己写一个简单的html页面,给他随意命个名,我就不改了,叫index.html</p><p><img alt="16aa10120b7d7dcb" data-src="https://tva1.sinaimg.cn/large/006tNbRwly1g9sk0tyra8j309t07bgm3.jpg" class="lazyload"></p><p>然后把这个文件丢到 宿主机的 <code>/nginx/html/</code> 路径下</p><p>我是用FileZilla工具传输文件到宿主机的</p><p><img alt="16aa10469e7d8a51" data-src="https://tva1.sinaimg.cn/large/006tNbRwly1g9sk1d4rvej30fo09djry.jpg" class="lazyload"></p><p>最后到了最关键的环节了</p><p>开始挂载了 我们先把之前起的nginx容器服务关闭了 我直接一点, <code>docker rm 容器id</code></p><p>OMG 我们得先关闭再删除,<code>docker stop 容器id</code></p><p>都弄好了之后再次启动 这次和上次不同之处就是需要用到 <code>-v</code> 进行挂载了</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="keyword">run</span><span class="bash"> --name mynginx -d -p 80:80 -v /nginx/html:/usr/share/nginx/html -v /nginx/conf/nginx.conf:/etc/nginx/nginx.conf -v /nginx/conf.d/default.conf:/etc/nginx/conf.d/default.conf -v /nginx/logs:/var/<span class="built_in">log</span>/nginx nginx</span></span><br></pre></td></tr></table></figure><p>前面是宿主机路径 后面的nginx容器路径</p><p><img alt="16aa4cac7a47445b" data-src="https://tva1.sinaimg.cn/large/006tNbRwly1g9sk2m2eapj309b04faa6.jpg" class="lazyload"></p><p>我也是初学Java和Docker 哪有有不足请多指教,主要是给自己留个记录</p>]]></content>
      
      
      <categories>
          
          <category> Docker </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>CentOS7.4下载及安装</title>
      <link href="/2019/08/10/CentOS7.4%E4%B8%8B%E8%BD%BD%E5%8F%8A%E5%AE%89%E8%A3%85/"/>
      <url>/2019/08/10/CentOS7.4%E4%B8%8B%E8%BD%BD%E5%8F%8A%E5%AE%89%E8%A3%85/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>U盘安装CentOS 7.4</title>
      <link href="/2019/08/10/U%E7%9B%98%E5%AE%89%E8%A3%85CentOS7.4/"/>
      <url>/2019/08/10/U%E7%9B%98%E5%AE%89%E8%A3%85CentOS7.4/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1 id="U盘安装CentOS-7-4"><a href="#U盘安装CentOS-7-4" class="headerlink" title="U盘安装CentOS 7.4"></a>U盘安装CentOS 7.4</h1><h3 id="安装准备"><a href="#安装准备" class="headerlink" title="安装准备"></a>安装准备</h3><p>1、8G以上U盘 （U盘需要格式化 数据提前备份好）</p><p>2、安装最新版UltraISO(软碟通)  <a href="https://cn.ultraiso.net/xiazai.html" target="_blank" rel="noopener">下载地址</a></p><p>3、下载CentOS镜像iso文件（我下载安装的是64位的）</p><p>​      推荐去阿里云下载：<a href="https://mirrors.aliyun.com/centos-vault/" target="_blank" rel="noopener">下载地址</a></p><p>​             <img alt="Snip20200616_11" data-src="https://tva1.sinaimg.cn/large/007S8ZIlly1gfu8cbsgypj30km058myc.jpg" class="lazyload"></p><p><img alt="Snip20200616_12" data-src="https://tva1.sinaimg.cn/large/007S8ZIlly1gfu8cft88tj30hf04o3zi.jpg" class="lazyload"></p><p>我下载的是种子文件 最终用迅雷下载镜像</p><img alt="Snip20200616_13" style data-src="https://tva1.sinaimg.cn/large/007S8ZIlly1gfu8csuye9j30gj09bwho.jpg" class="lazyload"><h3 id="制作安装盘"><a href="#制作安装盘" class="headerlink" title="制作安装盘"></a>制作安装盘</h3><p>1、用软碟通打开镜像文件： 文件–&gt;打开</p><p><img alt="1444704764442097820" data-src="https://tva1.sinaimg.cn/large/007S8ZIlly1gfu8kh937aj30r90k0wfx.jpg" class="lazyload"></p><p>2、写入映像：启动–&gt;写入硬盘映像</p><p><img alt="WechatIMG60" data-src="https://tva1.sinaimg.cn/large/007S8ZIlly1gfu8qmivvqj30u0140dlx.jpg" class="lazyload"></p><p>点击写入，写入完成后，<strong>建议右键U盘的盘符  重命名为 CENTOS</strong></p><h3 id="系统安装"><a href="#系统安装" class="headerlink" title="系统安装"></a>系统安装</h3><p>重启电脑，进入BIOS界面选择U盘启动  至于如何进入BIOS系统因为主板厂商不一样会有差异，可以自行查找或者F2 F12都试试。</p><p>切换到USB HDD 然后回车</p><p><img alt="WechatIMG64" data-src="https://tva1.sinaimg.cn/large/007S8ZIlly1gfu8rg2uxlj30u0140gog.jpg" class="lazyload"></p><p>下图位置切换到 Install CentOS Linux 7  注意一定不要回车， 按E键 进入编辑 指定U盘安装路径</p><p><img alt="WechatIMG65" data-src="https://tva1.sinaimg.cn/large/007S8ZIlly1gfu8togb88j30u0140wgi.jpg" class="lazyload"></p><p><img alt="WechatIMG66" data-src="https://tva1.sinaimg.cn/large/007S8ZIlly1gfu93c5damj30u014040h.jpg" class="lazyload"></p><p>将 </p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">setparams 'Install CentOS Linux 7'</span><br><span class="line">linuxefi/images/pxeboot/vmlinuz inst.stage2=hd:LABEL=CentOS\x207\x20x86_64 xdriver=vesa nomodeset quiet</span><br><span class="line">initrdefi /images/pxeboot/initrd.img</span><br></pre></td></tr></table></figure><p>修改为</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">setparams 'Install CentOS Linux 7'</span><br><span class="line">linuxefi /images/pxeboot/vmlinuz linux dd nomodeset quiet</span><br><span class="line">initrdefi /images/pxeboot/initrd.img</span><br></pre></td></tr></table></figure><p>然后按 ctrl + x 执行</p><p>屏幕上会列出硬盘设备的详细信息  如图：</p><p><img alt="WechatIMG61" data-src="https://tva1.sinaimg.cn/large/007S8ZIlly1gfuekzrwdqj30u0140adb.jpg" class="lazyload"></p><p>发现 CENTOS镜像在 sdb4  然后重启系统， 重复操作 修改启动条目为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">setparams &apos;Install CentOS Linux 7&apos;</span><br><span class="line">linuxefi /images/pxeboot/vmlinuz inst.stage2=hd:/dev/sdb4 nomodeset quiet</span><br><span class="line">initrdefi /images/pxeboot/initrd.img</span><br></pre></td></tr></table></figure><p>然后继续执行 ctrl + x</p><p><img alt="WechatIMG62" data-src="https://tva1.sinaimg.cn/large/007S8ZIlly1gfueo41nd6j30u0140gpc.jpg" class="lazyload"></p><p><img alt="WechatIMG63" data-src="https://tva1.sinaimg.cn/large/007S8ZIlly1gfueo9liu8j30u0140jtq.jpg" class="lazyload"></p><p>后面就不细说了  安装完成</p>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>《解决iOS真机调试时反复断开连接的问题》</title>
      <link href="/2018/09/15/%E8%A7%A3%E5%86%B3iOS%E7%9C%9F%E6%9C%BA%E8%B0%83%E8%AF%95%E6%97%B6%E5%8F%8D%E5%A4%8D%E6%96%AD%E5%BC%80%E8%BF%9E%E6%8E%A5%E7%9A%84%E9%97%AE%E9%A2%98/"/>
      <url>/2018/09/15/%E8%A7%A3%E5%86%B3iOS%E7%9C%9F%E6%9C%BA%E8%B0%83%E8%AF%95%E6%97%B6%E5%8F%8D%E5%A4%8D%E6%96%AD%E5%BC%80%E8%BF%9E%E6%8E%A5%E7%9A%84%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>开发时经常由于数据线或者其他莫名其妙的问题导致手机连接Mac反反复复断开连接, 很是苦恼, 一般情况下换个数据线就好了, 或者重启电脑, 虽然现在iOS开发者可以使用wifi内网连接的形式调试真机, 但是受限于公司网速的影响, 严重影响真机调试的效率, 闲话少说, 解决办法:</p><p><code>$ sudo killall -STOP -c usbd</code></p><p>终端输入如上的命令, 可以解决这个问题, 但是保证数据连接畅通,但是充电会非常缓慢, 调试结束后记得重启电脑</p>]]></content>
      
      
      <categories>
          
          <category> iOS </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>高德地图实现自定义小蓝点 自定义点标记 绘制多边形/圆形区域 根据地图的移动显示或者隐藏自定义点标记的相关实现</title>
      <link href="/2018/06/05/%E9%AB%98%E5%BE%B7%E5%9C%B0%E5%9B%BE%E5%AE%9E%E7%8E%B0%E8%87%AA%E5%AE%9A%E4%B9%89%E5%B0%8F%E8%93%9D%E7%82%B9%20%E8%87%AA%E5%AE%9A%E4%B9%89%E7%82%B9%E6%A0%87%E8%AE%B0%20%E7%BB%98%E5%88%B6%E5%A4%9A%E8%BE%B9%E5%BD%A2%E5%9C%86%E5%BD%A2%E5%8C%BA%E5%9F%9F%20%E6%A0%B9%E6%8D%AE%E5%9C%B0%E5%9B%BE%E7%9A%84%E7%A7%BB%E5%8A%A8%E6%98%BE%E7%A4%BA%E6%88%96%E8%80%85%E9%9A%90%E8%97%8F%E8%87%AA%E5%AE%9A%E4%B9%89%E7%82%B9%E6%A0%87%E8%AE%B0%E7%9A%84%E7%9B%B8%E5%85%B3%E5%AE%9E%E7%8E%B0/"/>
      <url>/2018/06/05/%E9%AB%98%E5%BE%B7%E5%9C%B0%E5%9B%BE%E5%AE%9E%E7%8E%B0%E8%87%AA%E5%AE%9A%E4%B9%89%E5%B0%8F%E8%93%9D%E7%82%B9%20%E8%87%AA%E5%AE%9A%E4%B9%89%E7%82%B9%E6%A0%87%E8%AE%B0%20%E7%BB%98%E5%88%B6%E5%A4%9A%E8%BE%B9%E5%BD%A2%E5%9C%86%E5%BD%A2%E5%8C%BA%E5%9F%9F%20%E6%A0%B9%E6%8D%AE%E5%9C%B0%E5%9B%BE%E7%9A%84%E7%A7%BB%E5%8A%A8%E6%98%BE%E7%A4%BA%E6%88%96%E8%80%85%E9%9A%90%E8%97%8F%E8%87%AA%E5%AE%9A%E4%B9%89%E7%82%B9%E6%A0%87%E8%AE%B0%E7%9A%84%E7%9B%B8%E5%85%B3%E5%AE%9E%E7%8E%B0/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>最近项目中有需要应用到高德地图的模块,在参考别的app地图相关模块实现过程中,自己产生了一些想法。首先说明要实现的功能需求。类似支付宝app内的跑腿功能,在全市的所有商铺,电梯广告等任意地点发布任务,参与者要根据地图上的标记接取任务后到达指定地点,完成任务,获取报酬。</p><p>首先我想到的是共享单车app的找附近的车功能。</p><p><img alt data-src="https://tva1.sinaimg.cn/large/006tNbRwly1gb517div44j30u01szqv5.jpg" class="lazyload"></p><p>分析其实现原理应该是获取用户当前坐标,然后将坐标发送至服务器,服务器计算这个用户周围1公里范围内空闲的单车,然后将坐标绘制在地图上,最后导航引导用户找到该车。但是共享单车数量庞大,一个城市或许会有几百万辆或者几千万辆,但是我们所做的体量比较小,或许有另外的方式实现此功能。</p><p>使用高德地图SDK,具体集成方法和相关配置请参考官方文档,这里不做介绍。首先我们需要1000个模拟数据 沈阳市的经纬度范围是 东经122° 25′ — 123° 48′, 北纬41°12′ — 42° 17′</p><p>我们根据这个范围随机生成1万个坐标,然后先在地图上自定义视图标记出来,但是不要显示,这里先全部显示看一下 ps:此图手抖多打个0,是1万个坐标点…</p><p><img alt="2576017-2361b9ddbe01c4e2" data-src="https://tva1.sinaimg.cn/large/006tNbRwly1gb519eez53j30u01szqv7.jpg" class="lazyload"></p><p>然后在当前地图的中心点绘制一个半径为3km的圆形, 在地图移动的时候,这个圆心也随之变化,这个时候遍历这些数据,如果这个数据的坐标在圆的范围内那么就显示,反之就隐藏。</p><p><img alt="2576017-2a2bf58fbff5fb0e" data-src="https://tva1.sinaimg.cn/large/006tNbRwly1gb4a9n3i0lj30u01sz1kx.jpg" class="lazyload"></p><p>这样做的好处是只需要从服务器拿取一次数据,数据量小的时候也很流畅,减轻了服务器的运算,但是弊端就是数据量庞大的时候会非常占用手机的内存,这也是我最开始没有考虑到的一点,</p><p><img alt="2576017-b30ed2445675e23e" data-src="https://tva1.sinaimg.cn/large/006tNbRwly1gb4a03t1lsj30m20hkwie.jpg" class="lazyload"></p><p>为了稳定不建议这样处理,除非数据量小的时候,我用iphone6测试 数据量达到500就开始卡顿,用iphoneX 数据量1000还可以接受,为了向下兼容不建议这种做法,还是老实向服务器请求数据比较好些。写这个文章主要还是想多了解下高德的API,加深下理解,以后再使用高德SDK的时候更加熟练。如果哪位大神看到这篇文章有好的优化方案请赐教,十分感谢,如果感觉垃圾,求轻喷。下面就开始代码部分</p><p>创建地图视图</p><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//初始化地图</span></span><br><span class="line">_mapView = [[MAMapView alloc] initWithFrame:<span class="keyword">self</span>.view.bounds];</span><br><span class="line">_mapView.userTrackingMode = MAUserTrackingModeFollow;</span><br><span class="line"><span class="comment">//如果您需要进入地图就显示定位小蓝点，则需要下面两行代码</span></span><br><span class="line">_mapView.showsUserLocation = <span class="literal">YES</span>;</span><br><span class="line">_mapView.showsScale = <span class="literal">NO</span>;</span><br><span class="line">_mapView.zoomLevel = <span class="number">13</span>;</span><br><span class="line">_mapView.showTraffic = <span class="literal">YES</span>;</span><br><span class="line">_mapView.showsCompass = <span class="literal">NO</span>;</span><br><span class="line">_mapView.delegate = <span class="keyword">self</span>;</span><br><span class="line"><span class="comment">//_mapView.desiredAccuracy = 100;</span></span><br><span class="line"><span class="comment">///把地图添加至view</span></span><br><span class="line">[<span class="keyword">self</span>.view addSubview:_mapView];</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//自定义定位小蓝点</span></span><br><span class="line"><span class="comment">//初始化 MAUserLocationRepresentation 对象</span></span><br><span class="line">MAUserLocationRepresentation *r = [[MAUserLocationRepresentation alloc] init];</span><br><span class="line">r.showsAccuracyRing = <span class="literal">NO</span>;<span class="comment">///精度圈是否显示，默认YES</span></span><br><span class="line"></span><br><span class="line">r.showsHeadingIndicator = <span class="literal">YES</span>;<span class="comment">///是否显示方向指示       (MAUserTrackingModeFollowWithHeading模式开启)。默认为YES</span></span><br><span class="line"><span class="comment">//r.fillColor = [UIColor redColor];///精度圈 填充颜色, 默认     kAccuracyCircleDefaultColor</span></span><br><span class="line">r.image = [<span class="built_in">UIImage</span> imageNamed:<span class="string">@"endPoint"</span>]; </span><br><span class="line"><span class="comment">//定位图标, 与蓝色原点互斥</span></span><br><span class="line"><span class="comment">//  [_mapView    updateUserLocationRepresentation:r];`</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">CLLocationCoordinate2D</span> coor = _mapView.centerCoordinate;</span><br><span class="line"><span class="comment">//以初始地图中心点为圆心 绘制半径为3km米的圆</span></span><br><span class="line">_circleView = [MACircle circleWithCenterCoordinate:coor radius:<span class="number">3000</span>];</span><br><span class="line">[<span class="keyword">self</span>.mapView addOverlay:_circleView];</span><br></pre></td></tr></table></figure><p>获取模拟数据</p><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//沈阳位于东经122゜25'---123゜48’，北纬41゜12’，---42゜17’，之间</span></span><br><span class="line"><span class="keyword">self</span>.annotations = [<span class="built_in">NSMutableArray</span> array];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">1000</span>; i ++) &#123;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">CGFloat</span> ls = [<span class="keyword">self</span> randomBetween:<span class="number">41</span> AndBigNum:<span class="number">42</span> AndPrecision:<span class="number">1000000</span>];</span><br><span class="line">    <span class="built_in">CGFloat</span> lw = [<span class="keyword">self</span> randomBetween:<span class="number">123</span> AndBigNum:<span class="number">124</span> AndPrecision:<span class="number">1000000</span>];</span><br><span class="line">    </span><br><span class="line">    MAPointAnnotation *a1 = [[MAPointAnnotation alloc] init];</span><br><span class="line">    a1.coordinate = (<span class="built_in">CLLocationCoordinate2D</span>)&#123;ls,lw&#125;;</span><br><span class="line">    a1.title      = [<span class="built_in">NSString</span> stringWithFormat:<span class="string">@"anno: %d"</span>, i];</span><br><span class="line">    a1.subtitle = [<span class="built_in">NSString</span> stringWithFormat:<span class="string">@"自定义点标记内容: %d"</span>,I];</span><br><span class="line">    [<span class="keyword">self</span>.annotations addObject:a1];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>获取指定范围内坐标点的函数</p><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">- (<span class="keyword">float</span>)randomBetween:(<span class="keyword">float</span>)smallNum AndBigNum:(<span class="keyword">float</span>)bigNum AndPrecision:(<span class="built_in">NSInteger</span>)precision&#123;</span><br><span class="line">    <span class="comment">//求两数之间的差值</span></span><br><span class="line">    <span class="keyword">float</span> subtraction = bigNum - smallNum;</span><br><span class="line">    <span class="comment">//取绝对值</span></span><br><span class="line">    subtraction = ABS(subtraction);</span><br><span class="line">    <span class="comment">//乘以精度的位数</span></span><br><span class="line">    subtraction *= precision;</span><br><span class="line">    <span class="comment">//在差值间随机</span></span><br><span class="line">    <span class="keyword">float</span> randomNumber = arc4random() % ((<span class="keyword">int</span>) subtraction + <span class="number">1</span>);</span><br><span class="line">    <span class="comment">//随机的结果除以精度的位数</span></span><br><span class="line">    randomNumber /= precision;</span><br><span class="line">    <span class="comment">//将随机的值加到较小的值上</span></span><br><span class="line">    <span class="keyword">float</span> result = MIN(smallNum, bigNum) + randomNumber;</span><br><span class="line">    <span class="comment">//返回结果</span></span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#pragma mark - MAMapViewDelegate</span></span><br><span class="line"><span class="comment">//绘制区域图形的相关属性配置 可以是矩形 多边形 圆形</span></span><br><span class="line">- (MAOverlayRenderer *)mapView:(MAMapView *)mapView rendererForOverlay:(<span class="keyword">id</span> &lt;MAOverlay&gt;)overlay</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> ([overlay isKindOfClass:[MACircle <span class="keyword">class</span>]]) &#123;</span><br><span class="line">        MACircleRenderer * polygonRenderer = [[MACircleRenderer alloc]initWithCircle:overlay];</span><br><span class="line">        polygonRenderer.lineWidth   = <span class="number">1.</span>f;</span><br><span class="line">        <span class="comment">// polygonRenderer.strokeColor = [UIColor yellowColor];</span></span><br><span class="line">        polygonRenderer.fillColor = [<span class="built_in">UIColor</span> colorWithRed:<span class="number">0.73</span> green:<span class="number">0.73</span> blue:<span class="number">0.73</span> alpha:<span class="number">0.2</span>];</span><br><span class="line">        <span class="keyword">return</span> polygonRenderer;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">nil</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*!</span></span><br><span class="line"><span class="comment"> @brief 根据anntation生成对应的View</span></span><br><span class="line"><span class="comment"> @param mapView 地图View</span></span><br><span class="line"><span class="comment"> @param annotation 指定的标注</span></span><br><span class="line"><span class="comment"> @return 生成的标注View</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">- (MAAnnotationView*)mapView:(MAMapView *)mapView viewForAnnotation:(<span class="keyword">id</span> &lt;MAAnnotation&gt;)annotation &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//定位蓝点  如果不在此判断 自身的定位点样式会被其他自定义的样式修改</span></span><br><span class="line">    <span class="keyword">if</span> ([annotation isKindOfClass:[MAUserLocation <span class="keyword">class</span>]]) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">nil</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> ([annotation isKindOfClass:[MAPointAnnotation <span class="keyword">class</span>]])&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">static</span> <span class="built_in">NSString</span> *reuseIndetifier = <span class="string">@"annotationReuseIndetifier"</span>;</span><br><span class="line">        MAAnnotationView *annotationView = (MAAnnotationView *)[mapView dequeueReusableAnnotationViewWithIdentifier:reuseIndetifier];</span><br><span class="line">        <span class="keyword">if</span> (annotationView == <span class="literal">nil</span>)&#123;</span><br><span class="line">            annotationView = [[MAAnnotationView alloc] initWithAnnotation:annotation reuseIdentifier:reuseIndetifier];</span><br><span class="line">        &#125;</span><br><span class="line">        annotationView.image = [<span class="built_in">UIImage</span> imageNamed:<span class="string">@"qwuh"</span>];</span><br><span class="line">        annotationView.canShowCallout               = <span class="literal">YES</span>;</span><br><span class="line">        annotationView.draggable                    = <span class="literal">YES</span>;</span><br><span class="line">        annotationView.rightCalloutAccessoryView    = [<span class="built_in">UIButton</span> buttonWithType:<span class="built_in">UIButtonTypeDetailDisclosure</span>];</span><br><span class="line">        <span class="comment">//设置中心点偏移，使得标注底部中间点成为经纬度对应点</span></span><br><span class="line">        annotationView.centerOffset = <span class="built_in">CGPointMake</span>(<span class="number">0</span>, <span class="number">-18</span>);</span><br><span class="line">        <span class="keyword">return</span> annotationView;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">nil</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//点击屏幕获取经纬度 (手动获取模拟数据使用)</span></span><br><span class="line">- (<span class="keyword">void</span>)mapView:(MAMapView *)mapView didSingleTappedAtCoordinate:(<span class="built_in">CLLocationCoordinate2D</span>)coordinate&#123;</span><br><span class="line">    <span class="built_in">NSLog</span>(<span class="string">@"%f ---- %f"</span>,coordinate.latitude,coordinate.longitude);</span><br><span class="line">    <span class="comment">//41.737987 ---- 123.422523</span></span><br><span class="line">    <span class="comment">//41.765668 ---- 123.434932</span></span><br><span class="line">    <span class="comment">//41.794761 ---- 123.409902</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @brief 地图区域改变过程中会调用此接口 since 4.6.0</span></span><br><span class="line"><span class="comment"> * @param mapView 地图View</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">- (<span class="keyword">void</span>)mapViewRegionChanged:(MAMapView *)mapView&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//移动地图 根据新的中心点坐标 改变所绘制图形的位置</span></span><br><span class="line">    [<span class="keyword">self</span>.circleView setCircleWithCenterCoordinate:mapView.centerCoordinate radius:<span class="number">3000</span>];</span><br><span class="line">    <span class="comment">//遍历所有的自定义坐标点</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="keyword">self</span>.annotations.count; i ++) &#123;</span><br><span class="line">        </span><br><span class="line">        MAPointAnnotation *a1 = <span class="keyword">self</span>.annotations[I];</span><br><span class="line">        <span class="built_in">CLLocationCoordinate2D</span> loc1 = a1.coordinate;</span><br><span class="line">        </span><br><span class="line"><span class="comment">//        [self.mapView addAnnotation:a1];</span></span><br><span class="line">        <span class="keyword">if</span>(MACircleContainsCoordinate(loc1, <span class="keyword">self</span>.circleView.coordinate, <span class="number">3000</span>)) &#123;</span><br><span class="line">            <span class="built_in">NSLog</span>(<span class="string">@"在区域内 新增自定义坐标点"</span>);</span><br><span class="line">            [<span class="keyword">self</span>.mapView addAnnotation:a1];</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="built_in">NSLog</span>(<span class="string">@"不在区域内 移除自定义坐标点"</span>);</span><br><span class="line">            [<span class="keyword">self</span>.mapView removeAnnotation:a1];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>或许会用到的相关代理方法</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@brief</span> 地图移动结束后调用此接口</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> mapView       地图view</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> wasUserAction 标识是否是用户动作</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">- (void)mapView:(MAMapView *)mapView mapDidMoveByUser:(BOOL)wasUserAction&#123;</span><br><span class="line">    <span class="keyword">if</span> (wasUserAction) &#123;</span><br><span class="line">        <span class="comment">//当前地图的中心点，改变该值时，地图的比例尺级别不会发生变化</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@brief</span> 定位失败后，会调用此函数</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> mapView 地图View</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> error 错误号，参考CLError.h中定义的错误号</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">- (void)mapView:(MAMapView *)mapView didFailToLocateUserWithError:(NSError *)error&#123;</span><br><span class="line">    NSLog(@<span class="string">"定位失败"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@brief</span> 地图初始化完成（在此之后，可以进行坐标计算）</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> mapView 地图View</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">- (void)mapInitComplete:(MAMapView *)mapView&#123;</span><br><span class="line"><span class="comment">//    NSLog(@"当前经纬度%lf--%lf",mapView.userLocation.coordinate.latitude,mapView.userLocation.coordinate.longitude);</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*!</span></span><br><span class="line"><span class="comment"> <span class="doctag">@brief</span> 当mapView新添加annotation views时调用此接口</span></span><br><span class="line"><span class="comment"> <span class="doctag">@param</span> mapView 地图View</span></span><br><span class="line"><span class="comment"> <span class="doctag">@param</span> views 新添加的annotation views</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">- (void)mapView:(MAMapView *)mapView didAddAnnotationViews:(NSArray *)views &#123;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*!</span></span><br><span class="line"><span class="comment"> <span class="doctag">@brief</span> 当选中一个annotation views时调用此接口</span></span><br><span class="line"><span class="comment"> <span class="doctag">@param</span> mapView 地图View</span></span><br><span class="line"><span class="comment"> <span class="doctag">@param</span> views 选中的annotation views</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">- (void)mapView:(MAMapView *)mapView didSelectAnnotationView:(MAAnnotationView *)view &#123;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*!</span></span><br><span class="line"><span class="comment"> <span class="doctag">@brief</span> 当取消选中一个annotation views时调用此接口</span></span><br><span class="line"><span class="comment"> <span class="doctag">@param</span> mapView 地图View</span></span><br><span class="line"><span class="comment"> <span class="doctag">@param</span> views 取消选中的annotation views</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">- (void)mapView:(MAMapView *)mapView didDeselectAnnotationView:(MAAnnotationView *)view &#123;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*!</span></span><br><span class="line"><span class="comment"> <span class="doctag">@brief</span> 标注view的accessory view(必须继承自UIControl)被点击时调用此接口</span></span><br><span class="line"><span class="comment"> <span class="doctag">@param</span> mapView 地图View</span></span><br><span class="line"><span class="comment"> <span class="doctag">@param</span> annotationView callout所属的标注view</span></span><br><span class="line"><span class="comment"> <span class="doctag">@param</span> control 对应的control</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">- (void)mapView:(MAMapView *)mapView annotationView:(MAAnnotationView *)view calloutAccessoryControlTapped:(UIControl *)control &#123;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>github地址: <code>https://github.com/ReReReReReRe/GDMapDemo/tree/master/PaiPaiPai</code></p>]]></content>
      
      
      <categories>
          
          <category> iOS </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Swift开发的一些小知识点(更新状态)</title>
      <link href="/2016/11/15/Swift%E5%BC%80%E5%8F%91%E4%B8%80%E4%BA%9B%E5%B0%8F%E7%9F%A5%E8%AF%86%E7%82%B9/"/>
      <url>/2016/11/15/Swift%E5%BC%80%E5%8F%91%E4%B8%80%E4%BA%9B%E5%B0%8F%E7%9F%A5%E8%AF%86%E7%82%B9/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h3 id="Swift项目程序入口main函数在哪"><a href="#Swift项目程序入口main函数在哪" class="headerlink" title="Swift项目程序入口main函数在哪?"></a>Swift项目程序入口main函数在哪?</h3><p>Xcode新建的Swift项目中 发现没有main函数入口, 哪里去了呢, 在Appdelegate.swfit 上发现一个注解</p><p><code>@UIApplicationMain</code></p><p>这个注解会自动生成一个程序的入口, 但是如果在一些特殊情况下, 我们需要自定义 UIApplication该怎么办呢, 新建一个Swift文件, 命名为 main.swift    在其内实现main函数</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> UIKit</span><br><span class="line"><span class="comment">//自定义UIApplication</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyApplication</span>: <span class="title">UIApplication</span> </span>&#123;&#125;</span><br><span class="line"><span class="comment">//使用自定义的UIApplication</span></span><br><span class="line"><span class="type">UIApplicationMain</span>(<span class="type">CommandLine</span>.argc, <span class="type">CommandLine</span>.unsafeArgv, <span class="type">NSStringFromClass</span>(<span class="type">MyApplication</span>.<span class="keyword">self</span>), <span class="type">NSStringFromClass</span>(<span class="type">AppDelegate</span>.<span class="keyword">self</span>))</span><br></pre></td></tr></table></figure><h3 id="Swift调用OC"><a href="#Swift调用OC" class="headerlink" title="Swift调用OC"></a>Swift调用OC</h3><p>在swift项目新建OC类, 会弹出提示如下图</p><p><img alt="截屏2019-11-12下午10.44.09" data-src="https://tva1.sinaimg.cn/large/006y8mN6ly1g8vn1f9shqj30va07gjx0.jpg" class="lazyload"></p><p>会询问你是否创建桥接文件, 点击创建桥接文件, 在工程目录内会出现产生的桥接文件</p><p><img alt="Snip20191112_1" data-src="https://tva1.sinaimg.cn/large/006y8mN6ly1g8vn39auvvj307903u3yn.jpg" class="lazyload"></p><p>桥接文件的文件名固定格式 <strong>{targetName}-Bridging-Header.h</strong></p><p>这个头文件,引入一些OC的类, 暴露给Swift使用.</p><p><code>#import &quot;Change.h&quot;</code></p>]]></content>
      
      
      <categories>
          
          <category> iOS </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>《如何使用CocoaPods：2016.11.15版》</title>
      <link href="/2016/11/15/%E3%80%8A%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8CocoaPods%EF%BC%9A2016.11.15%E7%89%88%E3%80%8B/"/>
      <url>/2016/11/15/%E3%80%8A%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8CocoaPods%EF%BC%9A2016.11.15%E7%89%88%E3%80%8B/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>一、CocoaPods的简介：</p><p>CocoaPods是一个负责管理iOS项目中第三方开源库的工具。CocoaPods的项目源码在Github上管理。该项目开始于2011年8月12日，在这两年多的时间里，它持续保持活跃更新。开发iOS项目不可避免地要使用第三方开源库，CocoaPods的出现使得我们可以节省设置和更新第三方开源库的时间</p><p>在我们有了CocoaPods这个工具之后，只需要将用到的第三方开源库放到一个名为Podfile的文件中，然后在命令行执行$ pod install命令。CocoaPods就会自动将这些第三方开源库的源码下载下来，并且为我的工程设置好相应的系统依赖和编译参数，下面咱们开始步入正题。</p><p>二、安装CocoaPods：</p><p>安装的方式非常简单，Mac下已经自带了ruby，如果你不确定是否存在可以在终端输入  ruby -v（记住ruby后有个空格），之后你会看到下图，上面显示了你的ruby版本号。</p><p><img alt data-src="https://tva1.sinaimg.cn/large/006y8mN6ly1g8va82yqrmj30qe06sgow.jpg" class="lazyload"></p><p>ps: 现在安装cocoapods ruby环境需要 2.2.2 以上 之前的 2.0.0 不可以了  所以我们要升级一下ruby环境</p><p>查看目前的所有ruby版本：</p><p>$rvm list known  如果提示command not found 请先安装rvm</p><p>$curl -L get.rvm.io | bash -s stable</p><p>安装好后 退掉终端 然后再打开 rvm list known  出现所有版本</p><p><img alt data-src="https://tva1.sinaimg.cn/large/006y8mN6ly1g8vaardrunj310c0ne4gi.jpg" class="lazyload"></p><p>安装2.2.2  $rvm install 2.2.2</p><p>按照提示操作 安装完成</p><p>但是到这里还不行，我们要更换一下镜像站点，因为天朝你懂得，我们将原有的替换成淘宝的镜像站点。首先移除原有的镜像站点 （在这里我要说一下如何快速的打开终端，本人习惯 control+空格 然后输入ter 不知道的小伙伴可以试一下）</p><p>gem sources –remove <a href="https://rubygems.org/" target="_blank" rel="noopener">https://rubygems.org/</a>           //移除原有站点</p><p>gem sources -a <a href="https://ruby.taobao.org/" target="_blank" rel="noopener">https://ruby.taobao.org/</a>                   //使用新站点</p><p>gem sources -l                                                            //查看是否修改成功</p><p>最终应该是这样事的！就证明替换成功了！</p><p><img alt data-src="https://tva1.sinaimg.cn/large/006y8mN6ly1g8vacb04dqj30og0cc45g.jpg" class="lazyload"></p><p>准备工作完成了  开始安装CocoaPods：继续终端操作</p><p>sudo gem install cocoapods        //Cocoapods</p><p>提示输入密码 回车   等待安装。。。</p><p>三、Cocoapods的使用</p><p>创建好工程，然后打开终端 输入 cd空格  然后将你的工程从桌面拖拽到终端里</p><p>ls 确认路径是否正确</p><p><img alt data-src="https://tva1.sinaimg.cn/large/006y8mN6ly1g8vafqunf9j30jq06ugpa.jpg" class="lazyload"></p><p>然后终端     vim Podfile 回车  这里注意Podfile P要大写！！！</p><p><img alt data-src="https://tva1.sinaimg.cn/large/006y8mN6ly1g8vagcq1bpj30mi0kotbj.jpg" class="lazyload"></p><p>输入 i   最下方的 ”Podfile“ 【New File】自动改为 –INSERT–  （我就不截图了）然后继续</p><p><img alt data-src="https://tva1.sinaimg.cn/large/006y8mN6ly1g8vamadt03j30n80k8aaf.jpg" class="lazyload"></p><p>下面讲一下上图中输入的都代表什么意思吧   platform空格:ios,空格’8.0’    //表示所有库所支持的最低版本</p><p>target “cocoapods”do     //这个是改动的地方  之前这句话不用写 但是现在要添加上 否则会报错，系统会找不到你要添加的库的位置，反正我的会报错😢 “”号内为你的工程名。</p><p>pod空格‘FMDB’  和  pod空格 ‘AFNetworking’都是你要添加的库 如果你要设定你所导入的库的版本号 可以pod ‘FMDB’,’~&gt;2.6’设定其为2.6版本的。</p><p>版本号的规则：</p><p>‘&gt;1.0’ 可以安装任何高于1.0的版本</p><p>‘&gt;=1.0’ 可以安装任何高于或等于1.0的版本</p><p>‘&lt;1.0’ 任何低于1.0的版本</p><p>‘&lt;=1.0’ 任何低于或等于1.0的版本</p><p>不写版本号的话 默认安装最高版本的。</p><p> 对了 这里有一个小技巧，如果这个时候你忘记了你要添加的库的全名了，你可以模糊查找， 在选中终端窗口的前提下  command+N，会再打开一个终端窗口  输入  pod空格search空格+你要查找的库的关键字比如下图 我要查找SDWebImage 只需要输入SDWeb</p><p><img alt="截屏2019-11-12下午3.20.07" data-src="https://tva1.sinaimg.cn/large/006y8mN6ly1g8vamy4m9fj30iu0640st.jpg" class="lazyload"></p><p>详细显示了该库的版本等信息</p><p><img alt="截屏2019-11-12下午3.20.13" data-src="https://tva1.sinaimg.cn/large/006y8mN6ly1g8vancnatij30re0jydrh.jpg" class="lazyload"></p><p>好了  添加完所需要的库了，我们开始导入吧。按ESC 在下方输入  :wq 后回车</p><p><img alt="截屏2019-11-12下午3.20.19" data-src="https://tva1.sinaimg.cn/large/006y8mN6ly1g8vanp1vsij30cq0kcq52.jpg" class="lazyload"></p><p>然后界面切入到这里  在这里输入  pod空格install  如下图</p><p><img alt="截屏2019-11-12下午3.20.24" data-src="https://tva1.sinaimg.cn/large/006y8mN6ly1g8vao3yju7j30hg07ujue.jpg" class="lazyload"></p><p>最终结果：</p><p><img alt="截屏2019-11-12下午3.20.30" data-src="https://tva1.sinaimg.cn/large/006y8mN6ly1g8vaohqfhrj30rc0huwp1.jpg" class="lazyload"></p><p>安装三方库完成，下面打开你的工程，你会发现多了一个白色的文件，以后再运行工程就要打开它了。</p><p><img alt="截屏2019-11-12下午3.20.36" data-src="https://tva1.sinaimg.cn/large/006y8mN6ly1g8vaowag4nj30ti0dcwki.jpg" class="lazyload"></p><p>ps: 如果导入成功后出现导入头文件没有提示  进行如下操作</p><p>选着TARGETS -&gt;Build Settings -&gt;搜索sea 找到Search Paths</p><p><img alt="截屏2019-11-12下午3.20.43" data-src="https://tva1.sinaimg.cn/large/006y8mN6ly1g8vap8toc1j311w09eafw.jpg" class="lazyload"></p><p>找到 User Header Search Paths  双击后面空白处 点击+号 输入 $(PODS_ROOT) 最有改选 recursive</p><p><img alt="截屏2019-11-12下午3.20.50" data-src="https://tva1.sinaimg.cn/large/006y8mN6ly1g8vapkh4awj311a0g0jwh.jpg" class="lazyload"></p><p>大功告成！</p>]]></content>
      
      
      <categories>
          
          <category> iOS </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Linux常用命令</title>
      <link href="/2016/08/06/Linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
      <url>/2016/08/06/Linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h4 id="守护进程启动spring-boot项目"><a href="#守护进程启动spring-boot项目" class="headerlink" title="守护进程启动spring-boot项目:"></a>守护进程启动spring-boot项目:</h4><p><code>nohup java -jar repair-api.jar &gt; log.file 2&gt;&amp;1 &amp;</code></p><h4 id="实时查看日志信息-接上"><a href="#实时查看日志信息-接上" class="headerlink" title="实时查看日志信息(接上):"></a>实时查看日志信息(接上):</h4><p><code>tail -f log.file</code></p><h4 id="查看某个端口的进程id"><a href="#查看某个端口的进程id" class="headerlink" title="查看某个端口的进程id:"></a>查看某个端口的进程id:</h4><p><code>losof -i:8080</code></p><h4 id="通过进程id-关闭某个端口-注-中括号请忽略"><a href="#通过进程id-关闭某个端口-注-中括号请忽略" class="headerlink" title="通过进程id 关闭某个端口(注:中括号请忽略):"></a>通过进程id 关闭某个端口(注:中括号请忽略):</h4><p><code>kill -9 [从上面获取的进程id]</code></p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
    </entry>
    
    
  
  
</search>
